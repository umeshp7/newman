openapi: 3.0.5
info:
  title: 'Integrations Platform #blueprint'
  version: 1.0.0
  description: >-
    This is the source of truth for the Integration Service API, internal as well as public. All routes
    around Integration CRUD, service actions, API Git, and usage events goes to internal service,
    whereas webhooks that are hit by incoming integrations, oauth callback endpoints and
    Integration run status update APIs goes to the public service.
  x-newrelic-app-id: [
    '872206312',
    '873598063',
    '1135978456',
    '1135963775'
  ]
servers:
  - url: 'https://integrations.postman.tech'
    description: 'The internal service'
  - url: 'https://integrate.postman.com'
    description: 'The public service'
paths:
  '/integration-instances/{integrationInstanceId}':
    get:
      tags:
        - Integrations Internal
        - Integration Instances
      summary: Get Integration Instance by ID
      description: |-
        This API is used to fetch details of an integration instance
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: integrationInstanceId
          in: path
          required: true
          schema:
            type: integer
          example: 54321
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/IntegrationsMeta'
                  data:
                    type: object
                    $ref: '#/components/schemas/IntegrationInstanceWithInputs'
        '400':
          $ref: '#/components/responses/ErrorBasic'
        '403':
          $ref: '#/components/responses/ErrorBasic'
        '404':
          $ref: '#/components/responses/ErrorBasic'
    put:
      tags:
        - Integration Instances
        - Integrations Internal
      summary: Update Integration Instance
      description: >-
        Update an integration instance
      security:
        - authToken: []
      parameters:
        - name: integrationInstanceId
          in: path
          required: true
          schema:
            type: integer
          example: 54321
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                class:
                  type: string
                inputs:
                  type: array
                  items:
                    type: object
                    required:
                      - key
                      - value
                    properties:
                      key:
                        type: string
                      value:
                        type: string
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: object
                    $ref: '#/components/schemas/IntegrationInstanceWithInputs'
        '400':
          $ref: '#/components/responses/ErrorBasic'
        '403':
          $ref: '#/components/responses/ErrorBasic'
        '404':
          $ref: '#/components/responses/ErrorBasic'
  '/integration-instances':
    get:
      tags:
        - Integrations Internal
        - Integration Instances
      summary: Get Integration Instances
      description: |-
        This API is used to fetch details of integration instances
      security:
        - basicAuth: []
      parameters:
        - name: teamId
          in: query
          schema:
            type: string
          example: '1234'
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationInstanceWithInputs'
        '400':
          $ref: '#/components/responses/ErrorBasic'
        '403':
          $ref: '#/components/responses/ErrorBasic'
        '404':
          $ref: '#/components/responses/ErrorBasic'
    post:
      tags:
        - Integration Instances
        - Integrations Internal
      summary: Create Integration Instance
      description: >-
        Create a new integration instance and add it to the user's team
      security:
        - authToken: []
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - class
              properties:
                name:
                  type: string
                class:
                  type: string
                inputs:
                  type: array
                  items:
                    type: object
                    required:
                      - key
                      - value
                    properties:
                      key:
                        type: string
                      value:
                        type: string
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: object
                    $ref: '#/components/schemas/IntegrationInstanceWithInputs'
        '400':
          $ref: '#/components/responses/ErrorBasic'
        '403':
          $ref: '#/components/responses/ErrorBasic'
        '404':
          $ref: '#/components/responses/ErrorBasic'

  # Internal Service endpoints
  # /x endpoints (support, usage and trigger endpoints)
  /x/support/integration:
    get:
      tags:
        - Integration Information
        - Integrations Internal
        - Support APIs
      summary: Get Integrations
      description: Get the details of the integration.
      parameters:
        - name: created_by
          in: query
          schema:
            type: string
          description: Id of the integration creator
          example: '{{createdBy}}'
        - name: team_id
          in: query
          schema:
            type: string
          description: Id of the team
          example: '{{team_id}}'
        - name: id
          in: query
          schema:
            type: string
          description: Id of the integration
          example: '{{integrationId}}'
        - name: limit
          in: query
          schema:
            type: string
          description: Results per page (Optional)
          example: ''
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Integration'
              examples:
                Example1:
                  value:
                    results:
                      - createdBy: '{{createdBy}}'
                        lastUpdatedBy: '494670'
                        id: '{{integrationId}}'
                        rule: monitor_run_custom_webhooks
                        entity: jobTemplate
                        executor: 1eb185d2-f98f-42b0-ae51-f700acd7fafb
                        team: '{{team_id}}'
                        name: Something
                        variables:
                          - content: >-
                              5ff331684e02371bf27148ae959129c9babe6b7b48d85fccc3a1f5cca35bd7f229ea614768fb5e07ab9a13669580899d2b3dfdcbeb0892502208bb8fd08eb7423750fea081d1cac28fcc2e7be547d4f22fde5ae26e84881c3e0137e456414a9bbfe2a21838a048b3cd5513675441f1fa838111c8978007c46bba9d4f43c4d298
                          - tag: >-
                              {"type":"Buffer","data":[146,139,142,188,109,157,7,221,78,230,110,147,216,159,144,67]}
                        transactionId: 9f9b1150-e6eb-4ceb-87dd-a88aebc7f517
                        createdAt: '2021-02-02T09:04:12.000Z'
                        updatedAt: '2021-02-02T09:04:12.000Z'
                      - createdBy: '494670'
                        lastUpdatedBy: '494670'
                        id: 19865
                        rule: monitor_run_custom_webhooks
                        entity: jobTemplate
                        executor: 1eb185d2-f952-4220-9c6b-3d74ba6e920d
                        team: '1'
                        name: My first integration-Apoorva
                        variables:
                          - content: >-
                              5ff331684e02371bf27148ae959129c9babe6b7b48d85fccc3a1f5cca35bd7f229ea614768fb5e07ab9a13669580899d2b3dfdcbeb0892502208bb8fd08eb7423750fea081d1cac28fcc2e7be547d4f22fde5ae26e84881c3e0137e456414a9bbfe2a21838a048b3cd5513675441f1fa838111c8978007c46bba9d4f43c4d298
                          - tag: >-
                              {"type":"Buffer","data":[146,139,142,188,109,157,7,221,78,230,110,147,216,159,144,67]}
                        transactionId: db2fbdc1-23cf-49e3-9aaf-f497ca47b345
                        createdAt: '2021-02-01T19:26:13.000Z'
                        updatedAt: '2021-02-01T19:26:13.000Z'
                Example2:
                  value:
                    results:
                      - createdBy: '494670'
                        lastUpdatedBy: '494670'
                        id: '{{integrationId}}'
                        rule: monitor_run_custom_webhooks
                        entity: jobTemplate
                        executor: 1eb185d2-f952-4220-9c6b-3d74ba6e920d
                        team: '1'
                        name: My first integration
                        variables:
                          - content: >-
                              5ff331684e02371bf27148ae959129c9babe6b7b48d85fccc3a1f5cca35bd7f229ea614768fb5e07ab9a13669580899d2b3dfdcbeb0892502208bb8fd08eb7423750fea081d1cac28fcc2e7be547d4f22fde5ae26e84881c3e0137e456414a9bbfe2a21838a048b3cd5513675441f1fa838111c8978007c46bba9d4f43c4d298
                          - tag: >-
                              {"type":"Buffer","data":[146,139,142,188,109,157,7,221,78,230,110,147,216,159,144,67]}
                        transactionId: db2fbdc1-23cf-49e3-9aaf-f497ca47b345
                        createdAt: '2021-02-01T19:26:13.000Z'
                        updatedAt: '2021-02-01T19:26:13.000Z'
                Example3:
                  value:
                    results:
                      - createdBy: '558558'
                        lastUpdatedBy: '558558'
                        id: 17420
                        rule: api_github
                        entity: api
                        executor: ca7ed9c9-a383-463b-b011-3209cabccec9
                        team: '1'
                        name: 27JanAPIIntegTest
                        variables:
                          - content: >-
                              2c9e92598282e6d1cc287201ccd758531ca4c00b95adaa28cbc6588a70290d822bffde0fc6bfe4c400134f6efcf3240f14f0ceae3bb29f4406357d481a11ce4f6b941c26279dcc45e6432861abf4c87006a8c77123346686eb7b8aecc37c1fb0999fd4a12ac026e71fd2416a6ecc98a81cd5e30094465dea5703a6c1e130e0f0ff371997ed3ac40933ab2a4dafb06465c923e6e57a5fce345cd9bfb309fe693f7ec2dc48c46e887ecbbbe6bc1f0b844fa4abc5ff4359d010590d4947d3e25772287dd7b05fba1f5e4e97f487e4faa4e4d1c3c9ae07b217f41677aafd54822bbe7e282c1189593ea3a541f8644b12cb19ce078e31ba9e63f742476ff1f58b737c49bb960f6c5e186e2c538eb9a630fcc2cc3067b2507812936becbdf6112597b521903cc3b44850e9bb26dd46ad2364984df2714f534a2f45b3d4c63e104433c8f0567b75dcc5de0dead4c5bb310e0bede2dc9b2255725eb84a5ae609dfb5d099ff166d8123cbfc05712536919c
                          - tag: >-
                              {"type":"Buffer","data":[211,29,17,90,244,172,77,92,120,176,145,243,98,162,244,100]}
                        transactionId: 4f87bf5c-8b62-4194-8ab5-26e25b45bb65
                        createdAt: '2021-01-27T07:28:31.000Z'
                        updatedAt: '2021-01-27T07:28:32.000Z'
                      - createdBy: '558558'
                        lastUpdatedBy: '558558'
                        id: 17400
                        rule: collection_custom_webhooks
                        entity: collection
                        executor: 558558#e4a46b16-7526-4047-ae3f-cc9aa00b2ce5
                        team: '1'
                        name: 27JanPostmanIdTest
                        variables:
                          - content: >-
                              2c9e92598282e6d1cc387e17fbcc585326bf904b95f7e932dfcf0fd570204ddc3dbd9e4ac5a0a893011c483daaa2215b40f7c9ae3ae2c3170c3c28454b41ce4f32c74b20208c8847f04f336da2b3962011acda303e3866cbe45f
                          - tag: >-
                              {"type":"Buffer","data":[200,55,50,70,252,246,194,239,213,108,29,133,64,212,51,29]}
                        transactionId: 2ca6d077-5294-4e7f-a8a0-0975ac5e0fc6
                        createdAt: '2021-01-27T06:38:00.000Z'
                        updatedAt: '2021-01-27T06:38:00.000Z'
                Example4:
                  value:
                    results:
                      - createdBy: '{{createdBy}}'
                        lastUpdatedBy: '494670'
                        id: '{{integrationId}}'
                        rule: monitor_run_custom_webhooks
                        entity: jobTemplate
                        executor: 1eb185d2-f98f-42b0-ae51-f700acd7fafb
                        team: '1'
                        name: Something
                        variables:
                          - content: >-
                              5ff331684e02371bf27148ae959129c9babe6b7b48d85fccc3a1f5cca35bd7f229ea614768fb5e07ab9a13669580899d2b3dfdcbeb0892502208bb8fd08eb7423750fea081d1cac28fcc2e7be547d4f22fde5ae26e84881c3e0137e456414a9bbfe2a21838a048b3cd5513675441f1fa838111c8978007c46bba9d4f43c4d298
                          - tag: >-
                              {"type":"Buffer","data":[146,139,142,188,109,157,7,221,78,230,110,147,216,159,144,67]}
                        transactionId: 9f9b1150-e6eb-4ceb-87dd-a88aebc7f517
                        createdAt: '2021-02-02T09:04:12.000Z'
                        updatedAt: '2021-02-02T09:04:12.000Z'
                      - createdBy: '494670'
                        lastUpdatedBy: '494670'
                        id: 19865
                        rule: monitor_run_custom_webhooks
                        entity: jobTemplate
                        executor: 1eb185d2-f952-4220-9c6b-3d74ba6e920d
                        team: '1'
                        name: My first integration-Apoorva
                        variables:
                          - content: >-
                              5ff331684e02371bf27148ae959129c9babe6b7b48d85fccc3a1f5cca35bd7f229ea614768fb5e07ab9a13669580899d2b3dfdcbeb0892502208bb8fd08eb7423750fea081d1cac28fcc2e7be547d4f22fde5ae26e84881c3e0137e456414a9bbfe2a21838a048b3cd5513675441f1fa838111c8978007c46bba9d4f43c4d298
                          - tag: >-
                              {"type":"Buffer","data":[146,139,142,188,109,157,7,221,78,230,110,147,216,159,144,67]}
                        transactionId: db2fbdc1-23cf-49e3-9aaf-f497ca47b345
                        createdAt: '2021-02-01T19:26:13.000Z'
                        updatedAt: '2021-02-01T19:26:13.000Z'
                Example5:
                  value:
                    results: []
          description: 200 - all params
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:12:15 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=d3eb27751f7bb9cf
            x-srv-span:
              schema:
                type: string
              example: v=1;s=5b9f3ef906456a5e
            ETag:
              schema:
                type: string
              example: W/"e-4kEsH/v7a1OoKp2vZlssGg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Content-Length:
              schema:
                type: integer
              example: 14
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              example:
                error:
                  name: paramMissingError
                  message: Parameter is missing in the request.
                  details:
                    param:
                      - id
                      - team_id
                      - created_by
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:07:40 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=e26f447c50012051
            x-srv-span:
              schema:
                type: string
              example: v=1;s=ac2fc90c46c40e76
            ETag:
              schema:
                type: string
              example: W/"5e2-oJblC87W1miDu1W4glJwPQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:55:39 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0c050aa950d4dd8b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=a5cb17060bba3324
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/support/git/integration:
    get:
      tags:
        - Integration Information
        - Integrations Internal
        - Support APIs
      summary: Get API Git Integrations
      description: Get the details of the API Git integrations.
      parameters:
        - name: team_id
          in: query
          schema:
            type: string
          description: Id of the team
          example: '{{team_id}}'
        - name: api_id
          in: query
          schema:
            type: string
          description: Id of the API on postman
          example: '{{api_id}}'
        - name: api_version_id
          in: query
          schema:
            type: string
          description: Id of the API Version on postman
          example: '{{api_version_id}}'
        - name: id
          in: query
          schema:
            type: string
          description: Id of the integration
          example: '{{integrationId}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - createdBy
                        - updatedBy
                        - id
                        - team
                        - state
                        - api
                        - apiVersion
                        - provider
                        - repository
                        - branches
                        - entityFileMap
                        - createdAt
                        - updatedAt
                      properties:
                        createdBy:
                          type: string
                          format: color
                        updatedBy:
                          type: string
                          format: color
                        id:
                          type: string
                        team:
                          type: integer
                        state:
                          type: string
                        api:
                          type: string
                        apiVersion:
                          type: string
                        provider:
                          type: string
                        repository:
                          type: integer
                        branches:
                          type: object
                        entityFileMap:
                          type: object
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    results:
                      - createdBy: '{{createdBy}}'
                        updatedBy: '494670'
                        id: '{{integrationId}}'
                        team: '{{team_id}}'
                        state: 'active'
                        api: '{{api_id}}'
                        apiVersion: '{{api_version_id}}'
                        provider: 'github'
                        repository: '1eb185d2-f98f-42b0-ae51-f700acd7fafb'
                        branches:
                          - main: 'main'
                          - develop: 'develop'
                        entityFileMap:
                          - collection:
                            - rootDirectory: 'paymentsAPI/collections'
                            - entityFileMap:
                              - 12e-23e-23e2: 'payments_api_documentation.json'
                              - 213-dew-cd12: 'payments_api_tests.json'
                          - schema:
                            - rootDirectory: 'paymentsAPI/schemas'
                            - entityFileMap:
                              - 1233-23r23r-sdccs: 'payments_api_schema.yaml'
                          - stub:
                            - rootDirectory: 'paymentsAPI/stubs'
                            - entityFileMap:
                              - api-1233-23r23r-sdccs-stub: 'payments_api_code.js'
                        createdAt: '2021-02-02T09:04:12.000Z'
                        updatedAt: '2021-02-02T09:04:12.000Z'
                Example5:
                  value:
                    results: []
          description: 200 - all params
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:12:15 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=d3eb27751f7bb9cf
            x-srv-span:
              schema:
                type: string
              example: v=1;s=5b9f3ef906456a5e
            ETag:
              schema:
                type: string
              example: W/"e-4kEsH/v7a1OoKp2vZlssGg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Content-Length:
              schema:
                type: integer
              example: 14
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    error:
                      name: paramMissingError
                      message: Parameter is missing in the request.
                      details:
                        param:
                          - id
                          - team_id
                          - api_id
                          - api_version_id
                Example2:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format.
                      details:
                        param:
                          - id
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:07:40 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=e26f447c50012051
            x-srv-span:
              schema:
                type: string
              example: v=1;s=ac2fc90c46c40e76
            ETag:
              schema:
                type: string
              example: W/"5e2-oJblC87W1miDu1W4glJwPQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:55:39 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0c050aa950d4dd8b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=a5cb17060bba3324
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/support/git/integration/repositories:
    get:
      tags:
        - Integration Information
        - Integrations Internal
        - Support APIs
      summary: Get Repositories that can be connected to API Git Integrations
      description: Get the details of repositories that can be connected to API Git Integrations.
      parameters:
        - name: team_id
          in: query
          schema:
            type: string
          description: Id of the team
          example: '{{team_id}}'
        - name: api_id
          in: query
          schema:
            type: string
          description: Id of the API on postman
          example: '{{api_id}}'
        - name: api_version_id
          in: query
          schema:
            type: string
          description: Id of the API Version on postman
          example: '{{api_version_id}}'
        - name: integration_id
          in: query
          schema:
            type: string
          description: Id of the repository
          example: '{{integrationId}}'
        - name: id
          in: query
          schema:
            type: string
          description: Id of the API Git integration
          example: '{{id}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - createdBy
                        - id
                        - identifier
                        - team
                        - name
                        - owner
                        - customDomain
                        - provider
                        - createdAt
                        - updatedAt
                      properties:
                        createdBy:
                          type: string
                          format: color
                        id:
                          type: string
                        identifier:
                          type: string
                        team:
                          type: integer
                        name:
                          type: string
                        owner:
                          type: string
                        customDomain:
                          type: string
                        provider:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    results:
                      - createdBy: '{{createdBy}}'
                        id: '{{Id}}'
                        identifier: 'repoVersion-1######JohnDoe'
                        team: '{{team_id}}'
                        name: 'repoVersion-1'
                        owner: 'JohnDoe'
                        customDomain: null
                        provider: 'github'
                        createdAt: '2021-02-02T09:04:12.000Z'
                        updatedAt: '2021-02-02T09:04:12.000Z'
                Example5:
                  value:
                    results: []
          description: 200 - all params
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:12:15 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=d3eb27751f7bb9cf
            x-srv-span:
              schema:
                type: string
              example: v=1;s=5b9f3ef906456a5e
            ETag:
              schema:
                type: string
              example: W/"e-4kEsH/v7a1OoKp2vZlssGg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Content-Length:
              schema:
                type: integer
              example: 14
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    error:
                    name: paramMissingError
                    message: Parameter is missing in the request.
                    details:
                        param:
                        - id
                        - integration_id
                        - team_id
                        - api_id
                        - api_version_id
                Example2:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format.
                      details:
                        param:
                          - id
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:07:40 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=e26f447c50012051
            x-srv-span:
              schema:
                type: string
              example: v=1;s=ac2fc90c46c40e76
            ETag:
              schema:
                type: string
              example: W/"5e2-oJblC87W1miDu1W4glJwPQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:55:39 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0c050aa950d4dd8b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=a5cb17060bba3324
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/support/git/integration/release-tags:
    get:
      tags:
        - Integratation Information
        - Integrations Internal
        - Support APIs
      summary: Get Release tags connected to API Git Integrations
      description: Get the details of release tags connected to API Git Integrations.
      parameters:
        - name: team_id
          in: query
          schema:
            type: string
          description: Id of the team
          example: '{{team_id}}'
        - name: api_id
          in: query
          schema:
            type: string
          description: Id of the API on postman
          example: '{{api_id}}'
        - name: api_version_id
          in: query
          schema:
            type: string
          description: Id of the API Version on postman
          example: '{{api_version_id}}'
        - name: integration_id
          in: query
          schema:
            type: string
          description: Id of the repository
          example: '{{integrationId}}'
        - name: id
          in: query
          schema:
            type: string
          description: Id of the API Git integration
          example: '{{id}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - createdBy
                        - lastUpdatedBy
                        - id
                        - release
                        - tag
                        - apiVersionRepository
                        - createdAt
                        - updatedAt
                      properties:
                        createdBy:
                          type: string
                          format: color
                        lastUpdatedBy:
                          type: string
                          format: color
                        id:
                          type: string
                        release:
                          type: string
                        tag:
                          type: string
                        apiVersionRepository:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    results:
                      - createdBy: '{{createdBy}}'
                        lastUpdatedBy: '494670'
                        id: '{{Id}}'
                        release: 'eede51e0-743d-4123-b52c-806d26f81346'
                        tag: '1.0.0'
                        apiRepositoryVersion: '{{integrationId}}'
                        createdAt: '2021-02-02T09:04:12.000Z'
                        updatedAt: '2021-02-02T09:04:12.000Z'
                Example5:
                  value:
                    results: []
          description: 200 - all params
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:12:15 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=d3eb27751f7bb9cf
            x-srv-span:
              schema:
                type: string
              example: v=1;s=5b9f3ef906456a5e
            ETag:
              schema:
                type: string
              example: W/"e-4kEsH/v7a1OoKp2vZlssGg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Content-Length:
              schema:
                type: integer
              example: 14
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    error:
                      name: paramMissingError
                      message: Parameter is missing in the request.
                      details:
                        param:
                          - id
                          - integration_id
                          - team_id
                          - api_id
                          - api_version_id
                Example2:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format.
                      details:
                        param:
                          - id
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:07:40 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=e26f447c50012051
            x-srv-span:
              schema:
                type: string
              example: v=1;s=ac2fc90c46c40e76
            ETag:
              schema:
                type: string
              example: W/"5e2-oJblC87W1miDu1W4glJwPQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:55:39 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0c050aa950d4dd8b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=a5cb17060bba3324
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/support/runlogs:
    get:
      tags:
        - Integration Run Information
        - Integrations Internal
        - Support APIs
      summary: Get Integration Run Logs
      description: Get the details of the integration run
      parameters:
        - name: integration_id
          in: query
          schema:
            type: string
          example: '{{integrationId}}'
        - name: integration_run_id
          in: query
          schema:
            type: string
          example: '{{integrationRunId}}'
        - name: limit
          in: query
          schema:
            type: string
          description: Results per page (Optional)
          example: ''
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - status
                        - integration
                        - statusMessage
                        - extraData
                        - createdAt
                        - updatedAt
                      properties:
                        id:
                          type: string
                        status:
                          type: string
                        integration:
                          type: string
                        statusMessage:
                          type: string
                        extraData:
                          type: object
                          required:
                            - source
                          properties:
                            source:
                              type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    results:
                      - id: '{{integrationRunId}}'
                        status: succeeded
                        integration: '{{integrationId}}'
                        statusMessage: Success
                        extraData:
                          source: postman
                        createdAt: '2021-02-01T14:55:50.000Z'
                        updatedAt: '2021-02-01T14:55:52.000Z'
                Example2:
                  value:
                    results: []
                Example3:
                  value:
                    results:
                      - id: 227039
                        status: succeeded
                        integration: '{{integrationId}}'
                        statusMessage: Success
                        extraData:
                          source: postman
                        createdAt: '2021-02-01T14:55:50.000Z'
                        updatedAt: '2021-02-01T14:55:52.000Z'
                      - id: 227032
                        status: succeeded
                        integration: '{{integrationId}}'
                        statusMessage: Success
                        extraData:
                          source: postman
                        createdAt: '2021-02-01T14:52:01.000Z'
                        updatedAt: '2021-02-01T14:52:07.000Z'
                      - id: 226965
                        status: succeeded
                        integration: '{{integrationId}}'
                        statusMessage: Success
                        extraData:
                          source: postman
                        createdAt: '2021-02-01T13:58:03.000Z'
                        updatedAt: '2021-02-01T13:58:06.000Z'
                      - id: 226964
                        status: succeeded
                        integration: '{{integrationId}}'
                        statusMessage: Success
                        extraData:
                          source: postman
                        createdAt: '2021-02-01T13:57:43.000Z'
                        updatedAt: '2021-02-01T13:57:46.000Z'
          description: 200 - all params
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:11:30 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=adc209cfb0f12efa
            x-srv-span:
              schema:
                type: string
              example: v=1;s=dd1b1bc1d7ce47f8
            ETag:
              schema:
                type: string
              example: W/"54d-yaDViHZwHA9+fEIx9yiHiQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              example:
                error:
                  name: paramMissingError
                  message: Parameter is missing in the request.
                  details:
                    param:
                      - integration_id
                      - integration_run_id
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 14:11:30 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=adc209cfb0f12efa
            x-srv-span:
              schema:
                type: string
              example: v=1;s=dd1b1bc1d7ce47f8
            ETag:
              schema:
                type: string
              example: W/"54d-yaDViHZwHA9+fEIx9yiHiQ"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:57:08 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=3d53b015cf0370e2
            x-srv-span:
              schema:
                type: string
              example: v=1;s=a23455fa8ac84606
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/api/logs:
    get:
      tags:
        - Integrations Internal
        - Support APIs
      summary: Get Integration activity
      description: |-
        Get the activity on the integration.
        This gives the details on integration create , update and deletion.
      parameters:
        - name: integration_id
          in: query
          schema:
            type: string
          description: Id of the integration
          example: '{{integrationId}}'
        - name: team_id
          in: query
          schema:
            type: string
          description: Id of the team
          example: '{{teamId}}'
        - name: user_id
          in: query
          schema:
            type: string
          description: Id of the user
          example: '{{userId}}'
        - name: type
          in: query
          schema:
            type: string
          description: Whether integration or git_integration
          example: 'integration'
        - name: limit
          in: query
          schema:
            type: string
          description: Results per page (Optional)
          example: ''
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      type: object
                      required:
                        - integration
                        - integrationType
                        - id
                        - actionId
                        - actionName
                        - integrationEntityType
                        - integrationEntityId
                        - actorType
                        - actorId
                        - team
                        - transactionId
                        - createdAt
                        - updatedAt
                      properties:
                        integration:
                          type: string
                        integrationType:
                          type: string
                        id:
                          type: integer
                        actionId:
                          type: string
                        actionName:
                          type: string
                        integrationEntityType:
                          type: string
                        integrationEntityId:
                          type: string
                        actorType:
                          type: string
                        actorId:
                          type: string
                        team:
                          type: string
                        transactionId:
                          type: string
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    logs:
                      - integration: '{{integrationId}}'
                        integrationType: 'integration'
                        id: 1
                        actionId: integration.create
                        actionName: Integration created
                        integrationEntityType: collection
                        integrationEntityId: U1-9c89f56f-ba75-4d90-a516-1bcb2981365a
                        actorType: user
                        actorId: U1
                        team: T1
                        transactionId: null
                        createdAt: '2021-05-26T20:42:29.000Z'
                        updatedAt: '2021-05-26T20:42:29.000Z'
                Example2:
                  value:
                    logs:
                      - integration: '{{integrationId}}'
                        integrationType: 'git_integration'
                        id: 1
                        actionId: 'api-git.integration.create'
                        actionName: 'API Git Integration created'
                        integrationEntityType: 'apiversion'
                        integrationEntityId: '045a49dc-24b1-4ffc-9877-bf554c728d1f'
                        actorType: user
                        actorId: 'U1'
                        team: '{{teamId}}'
                        transactionId: null
                        createdAt: '2021-05-26T20:42:29.000Z'
                        updatedAt: '2021-05-26T20:42:29.000Z'
                Example3:
                  value:
                    logs:
                      - integration: '{{integrationId}}'
                        integrationType: 'integration'
                        id: 1
                        actionId: integration.create
                        actionName: Integration created
                        integrationEntityType: collection
                        integrationEntityId: U1-9c89f56f-ba75-4d90-a516-1bcb2981365a
                        actorType: user
                        actorId: '{{userId}}'
                        team: T1
                        transactionId: null
                        createdAt: '2021-05-26T20:42:29.000Z'
                        updatedAt: '2021-05-26T20:42:29.000Z'
                Example4:
                  value:
                    logs:
                      - integration: '{{integrationId}}'
                        integrationType: 'integration'
                        id: 1
                        actionId: integration.create
                        actionName: Integration created
                        integrationEntityType: collection
                        integrationEntityId: U1-9c89f56f-ba75-4d90-a516-1bcb2981365a
                        actorType: user
                        actorId: '{{userId}}'
                        team: '{{teamId}}'
                        transactionId: null
                        createdAt: '2021-05-26T20:42:29.000Z'
                        updatedAt: '2021-05-26T20:42:29.000Z'
                Example5:
                  value:
                    logs: []
          description: 200 - Integration Id
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:12:15 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=d3eb27751f7bb9cf
            x-srv-span:
              schema:
                type: string
              example: v=1;s=5b9f3ef906456a5e
            ETag:
              schema:
                type: string
              example: W/"e-4kEsH/v7a1OoKp2vZlssGg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Content-Length:
              schema:
                type: integer
              example: 14
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                    name: paramMissingError
                    message: Parameter is missing in the request.
                    details:
                      param: >-
                        Atleast one of user_id, type, team_id or integration_id
                        parameter is required to fetch the logs
                Example2:
                  value:
                    error:
                      name: invalidChoiceError
                      message: Parameter is missing in the request.
                      details:
                        param: >-
                          The specified parameter can only be one of the following:
                          choices: >-
                          ['integration', 'git_integration']
          description: 400 - Bad request
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:13:52 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=eb3b756b17af5d73
            x-srv-span:
              schema:
                type: string
              example: v=1;s=8ecbc09c71dc46b6
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: authenticationError
                  message: You are not authenticated by the server.
          description: 403 - Authentication Failure
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Sun, 07 Feb 2021 13:13:52 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=eb3b756b17af5d73
            x-srv-span:
              schema:
                type: string
              example: v=1;s=8ecbc09c71dc46b6
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - basicAuth: []
  /x/integration/{integrationId}/trigger:
    post:
      tags:
        - Integrations Eventing System
        - TriggerAPI on int-plat
      summary: Trigger API
      description: >-
        This API is hosted in integration platform,when called with required data triggers an integration.
        Currently its called by consumer (in eventing system) to trigger the integrations on events like collection update, monitor run etc
      operationId: triggerApi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    teamId:
                      type: string
                      example: T1
                    type:
                      type: string
                      example: system
                event:
                  type: object
                  properties:
                    action:
                      type: string
                      example: monitorRunFinished
                    additionalContext:
                      type: object
                      properties:
                        run:
                          type: object
                          properties:
                            id:
                              type: string
                              example: J1
                    resource:
                      type: object
                      properties:
                        id:
                          type: string
                          example: M1
                        type:
                          type: string
                          example: monitor
                eventId:
                  type: string
                  example: b80ea06a-36b4-47c3-a273-b4e1699e4101
                timestamp:
                  type: string
                  example: "123455"
                version:
                  type: string
                  example: v1
            example:
              actor:
                teamId: T1
                type: system
              event:
                action: monitorRunFinished
                additionalContext:
                  run:
                    id: J1
                resource:
                  id: M1
                  type: monitor
              eventId: b80ea06a-36b4-47c3-a273-b4e1699e4101
              timestamp: "123455"
              version: v1
      responses:
        "200":
          description: 200(ok)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
              examples:
                200(ok):
                  value:
                    success: true
        "500":
          description: 500 - when integration is not triggered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid rule some_new_name
              examples:
                500 - when integration is not triggered:
                  value:
                    error: Invalid rule some_new_name
      parameters:
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
      security:
        - basicAuth: []
      servers:
        - url: 'https://integrations.postman.tech'
  '/integration-instances/{integrationInstanceId}/actions/{actionSlug}':
    post:
      summary: On-demand trigger API
      description: >-
        This API helps to execute on-demand actions synchronously and returns the response from the actions to client/UI.

        Authenticates the request using int-plat service basic auth and user access_token.

        API also validates the given integration instance Id and performs permissions that checks whether
        user has access to trigger the current action or not.
      operationId: onDemandTriggerApi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inputs:
                  type: object
                  properties: {}
            example:
              actionSlug: triggerBuildForJenkins
              inputs:
                branch: develop
                buildId: B1
      responses:
        "200":
          description: 200 - OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: object
                    properties: {}
              examples:
                200 - OK:
                  value:
                    body: {}
        '400':
          description: 400 - Instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFoundError'
              examples:
                400 - Instance not found:
                  value:
                    error:
                      details:
                        model: 'integration'
                        model_id: '123'
                        owner: '453663'
                      message: We could not find the integration you are looking for
                      name: instanceNotFoundError
        '403':
          description: 403 - Authentication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'
              examples:
                403 - Authentication Error:
                  value:
                    error:
                      message: You are not authenticated by the server.
                      name: authenticationError
    parameters:
      - name: integrationInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: actionSlug
        in: path
        required: true
        schema:
          type: string
  /x/events/user-removed-from-team:
    post:
      tags:
        - Integrations usage
        - Integrations Internal
      summary: User removed from Team
      description: >-
        This API lets integrations service know that a user was removed from a
        team. It is currently called from Sync Service.

        The events that could lead to this API being called are:

        1. User left the team on their own accord

        1. The team admin removed them from the team.

        1. A team user deletes their account


        The `userId` (ID of the user who is being removed from the team), and
        `teamId` (the ID of the team which the user is leaving) are both
        compulsory for this API.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                teamId:
                  type: string
            example:
              userId: '{{userId}}'
              teamId: '{{teamId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
          description: '200'
      security:
        - basicAuth: []
  /x/events/user-joined-team:
    post:
      tags:
        - Integrations usage
        - Integrations Internal
      summary: User joined Team
      description: >-
        This API lets integrations service know that a user joined a team. It is
        currently called from Sync Service.

        This API is called after a user joins a team through any supported flow.


        The `userId` (ID of the user who is joining the team), and `teamId` (the
        ID of the team which the user is joining) are both compulsory for this
        API.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                teamId:
                  type: string
            example:
              userId: '{{userId}}'
              teamId: '{{teamId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
              example:
                success: true
          description: '200'
      security:
        - basicAuth: []
  /x/events/team-deleted:
    post:
      tags:
        - Integrations usage
        - Integrations Internal
      summary: Team Deleted
      description: >-
        This API lets integrations service know that a team was deleted. It is
        currently called from God Service as a fire-and-forget call.


        The `teamId` (the ID of the team that was deleted) is mandatory for this
        API.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: string
            example:
              teamId: '{{teamId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - success
                      - integrationsDeleted
                    properties:
                      success:
                        type: boolean
                      integrationsDeleted:
                        type: integer
              example:
                data:
                  success: true
                  integrationsDeleted: 2
          description: '200'
      security:
        - basicAuth: []
  /x/events/user-deleted:
    post:
      tags:
        - Integrations usage
        - Integrations Internal
      summary: User Deleted
      description: >-
        This API lets integrations service know that a user was deleted. It is
        currently called from God Service as a fire-and-forget call.


        The `userId` (the ID of the user who was deleted) is mandatory for this
        API.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
            example:
              userId: '{{userId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - success
                      - integrationsDeleted
                    properties:
                      success:
                        type: boolean
                      integrationsDeleted:
                        type: integer
              example:
                data:
                  success: true
                  integrationsDeleted: 2
          description: '200'
      security:
        - basicAuth: []
  /x/events/integration/{id}/entity-updated:
    post:
      tags:
        - Event Consumption APIs
      summary: Entity updated
      description: >-
       This API lets integrations service know that an entity was updated.
        It is currently used a consumer for entity update events via eventing pipeline when relevant entities are updated.
        Currently only monitor update events are consumed by this API
      operationId: entityUpdated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    type:
                      type: string
                      example: user
                    userId:
                      type: string
                      example: U1
                event:
                  type: object
                  properties:
                    action:
                      type: string
                      example: monitorUpdated
                    additionalContext:
                      type: object
                      properties:
                        diff:
                          type: object
                          properties:
                            new:
                              type: object
                              properties:
                                environment:
                                  type: string
                                  example: E2
                                name:
                                  type: string
                                  example: Monitor new name
                            old:
                              type: object
                              properties:
                                environment:
                                  type: string
                                  example: E1
                                name:
                                  type: string
                                  example: Monitor old name
                    resource:
                      type: object
                      properties:
                        id:
                          type: string
                          example: M1
                        type:
                          type: string
                          example: monitor
                timestamp:
                  type: string
                  example: "1243434"
                version:
                  type: string
                  example: v1
            example:
              actor:
                type: user
                userId: U1
              event:
                action: monitorUpdated
                additionalContext:
                  diff:
                    new:
                      environment: E2
                      name: Monitor new name
                    old:
                      environment: E1
                      name: Monitor old name
                resource:
                  id: M1
                  type: monitor
              timestamp: "1243434"
              version: v1
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      integrationsUpdated:
                        type: number
                        example: 2
                      success:
                        type: boolean
                        example: true
              examples:
                "200":
                  value:
                    data:
                      integrationsUpdated: 2
                      success: true
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - basicAuth: []
      servers:
        - url: 'https://integrations.postman.tech'
  /x/events/entity-deleted:
    post:
      tags:
        - Integrations usage
        - Integrations Internal
      summary: Entity Deleted
      description: >-
        This API lets integrations service know that an entity was deleted. It
        is currently called from Sync and ADP services, when relevant entities
        are deleted.


        Both the `entityType` and `entityId` are compulsory for this API.

        The `entityType` refers to the type of entity that was deleted (eg:
        `collection`, `jobTemplate`). The `entityId` refers to the ID of the
        entity that was deleted.
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
          description: Optional header
          example: '{{access_token}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                entityId:
                  type: string
            example:
              entityType: '{{entityType}}'
              entityId: '{{entityId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - success
                      - integrationsDeleted
                    properties:
                      success:
                        type: boolean
                      integrationsDeleted:
                        type: integer
              example:
                data:
                  success: true
                  integrationsDeleted: 2
          description: '200'
      security:
        - basicAuth: []

  # Integration service actions, CRUD, relations, and events endpoints
  /integrations/reencrypt:
    put:
      tags:
        - Support APIs
        - Integrations Internal
      summary: Re-encrypt
      description: TBD
      responses:
        default:
          description: No responses available
  /consume:
    post:
      tags:
        - Integrations Eventing System
        - Consumer
      summary: Consume event from SQS
      description:  >-
        Consumer is an independent worker environment on AWS(not a part of integration platform).
        It consumes messages/events from SQS, checks the existence of integrations on the events and
        calls the respective APIs in integration platform to execute the events
      operationId: consumeEventFromSqs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    teamId:
                      type: string
                      example: T1
                    type:
                      type: string
                      example: system
                event:
                  type: object
                  properties:
                    action:
                      type: string
                      example: monitorRunFinished
                    additionalContext:
                      type: object
                      properties:
                        run:
                          type: object
                          properties:
                            id:
                              type: string
                              example: J1
                    resource:
                      type: object
                      properties:
                        id:
                          type: string
                          example: M1
                        type:
                          type: string
                          example: monitor
                eventId:
                  type: string
                  example: b80ea06a-36b4-47c3-a273-b4e1699e4101
                timestamp:
                  type: string
                  example: "123455"
                version:
                  type: string
                  example: v1
            example:
              actor:
                teamId: T1
                type: system
              event:
                action: monitorRunFinished
                additionalContext:
                  run:
                    id: J1
                resource:
                  id: M1
                  type: monitor
              eventId: b80ea06a-36b4-47c3-a273-b4e1699e4101
              timestamp: "123455"
              version: v1
      responses:
        "200":
          description: 200 ok
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                200 ok:
                  value: {}
        "206":
          description: 206 - partial success on triggering integrations on an event
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                206 - partial success on triggering integrations on an event:
                  value: {}
        "400":
          description: 400 -requiredFieldsMissing Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: object
                    properties:
                      missingFields:
                        type: array
                        items:
                          type: string
                          example: event.resource.type
                        example:
                          - event.resource.type
                      requiredFields:
                        type: array
                        items:
                          type: string
                          example: actor.type
                        example:
                          - actor.type
                          - event.resource.type
                          - event.resource.id
                          - event.action
                          - eventId
                  message:
                    type: string
                    example: At least one required param/payload field is missing in the request.
                  name:
                    type: string
                    example: requiredFieldsMissingError
              examples:
                400 -requiredFieldsMissing Error:
                  value:
                    details:
                      missingFields:
                        - event.resource.type
                      requiredFields:
                        - actor.type
                        - event.resource.type
                        - event.resource.id
                        - event.action
                        - eventId
                    message: At least one required param/payload field is missing in the request.
                    name: requiredFieldsMissingError
        "500":
          description: 500 - couldnt remove the successfully triggered integratiion Ids from cache
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                500 - couldnt remove the successfully triggered integratiion Ids from cache:
                  value: {}
      security:
        - basicAuth: []
  /api/v1/integrations/events:
    post:
      tags:
        - Integrations Eventing System
        - Ingestor
      summary: Push event to ingestor
      description: >-
        Ingestor is the starting element in eventing system which is an independent webserver(not a part of integration platform).
        One can use this ingestor API to push the events to the eventing pipeline and get them executed by the integration platform
      operationId: pushEventToIngestor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    teamId:
                      type: string
                      example: T1
                    type:
                      type: string
                      example: system
                event:
                  type: object
                  properties:
                    action:
                      type: string
                      example: monitorRunFinished
                    additionalContext:
                      type: object
                      properties:
                        run:
                          type: object
                          properties:
                            id:
                              type: string
                              example: J1
                    resource:
                      type: object
                      properties:
                        id:
                          type: string
                          example: M1
                        type:
                          type: string
                          example: monitor
                timestamp:
                  type: string
                  example: "123455"
                version:
                  type: string
                  example: v1
            example:
              actor:
                teamId: T1
                type: system
              event:
                action: monitorRunFinished
                additionalContext:
                  run:
                    id: J1
                resource:
                  id: M1
                  type: monitor
              timestamp: "123455"
              version: v1
      responses:
        "202":
          description: 202 Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      eventId:
                        type: string
                        example: XXX
                  meta:
                    type: object
                    properties:
                      accepted:
                        type: boolean
                        example: true
              examples:
                202 Accepted:
                  value:
                    data:
                      eventId: XXX
                    meta:
                      accepted: true
        "400":
          description: 400 - requiredFiledsMissing Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: object
                    properties:
                      missingFields:
                        type: array
                        items:
                          type: string
                          example: actor.type
                        example:
                          - actor.type
                          - event.resource.type
                      requiredFields:
                        type: array
                        items:
                          type: string
                          example: actor.type
                        example:
                          - actor.type
                          - event.resource.type
                          - event.resource.id
                          - event.action
                          - eventId
                  message:
                    type: string
                    example: At least one required param/payload field is missing in the request.
                  name:
                    type: string
                    example: requiredFieldsMissingError
              examples:
                400 - requiredFiledsMissing Error:
                  value:
                    details:
                      missingFields:
                        - actor.type
                        - event.resource.type
                      requiredFields:
                        - actor.type
                        - event.resource.type
                        - event.resource.id
                        - event.action
                        - eventId
                    message: At least one required param/payload field is missing in the request.
                    name: requiredFieldsMissingError
        "413":
          description: 413 - request entity too large
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Req body of size greater than 25 MB are not supported currently.
                      type:
                        type: string
                        example: reqBodyTooLargeError
              examples:
                413 - request entity too large:
                  value:
                    error:
                      message: Req body of size greater than 25 MB are not supported currently.
                      type: reqBodyTooLargeError
      security:
        - basicAuth: []
      servers:
        - url: 'https://integrations.postman.tech'
  /integrations/available:
    get:
      tags:
        - Integrations
        - Integrations Internal
      summary: Integration Service Details
      description: The service ID is sent as a request parameter for this API.
      parameters:
        - name: service
          in: query
          schema:
            type: string
          example: ''
        - name: rule
          in: query
          schema:
            type: string
          example: ''
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/integrationServiceDetails200ResponseServiceSubSchema
                  - $ref: >-
                      #/components/schemas/integrationServiceDetails200ResponseSubSchema
                  - type: object
                    properties:
                      name:
                        type: string
                      id:
                        type: string
                      type:
                        type: string
                      entity:
                        type: string
                      scope:
                        type: string
              examples:
                Example1:
                  value:
                    name: GitHub
                    icon: pm-icon-github
                    icon_url: 'https://static.getpostman.com/assets/github.png'
                    description: >-
                      Back up collections and sync API schemas to your GitHub
                      repositories
                    extended_description: >-
                      Backup and synchronize your Postman collections and API
                      schemas on Github, the largest host of source code in the
                      world. Your collections are all tucked in safe and sound
                      with our latest Postman Pro to GitHub Integration.
                    categories:
                      - Backup
                    setup_details: ''
                    oauth_initiator_host: 'https://integrate.postman-beta.com'
                    id: github
                    summary: ''
                    misc: ''
                    integrations:
                      collection_github:
                        name: Backup a collection
                        description: Backup your Postman Collections to Github
                        summary: ''
                        client_categories:
                          - backup-collection
                        type: multiple
                        entity: collection
                        scope: user
                        sync_data: []
                        variables: []
                        auth_type: token
                        canCreateIntegration: false
                      collection_github_enterprise:
                        name: Backup a collection (custom domain)
                        description: >-
                          Backup your Postman Collections to GitHub on a custom
                          domain
                        summary: ''
                        client_categories:
                          - backup-collection
                        type: multiple
                        entity: collection
                        scope: user
                        sync_data: []
                        variables: []
                        auth_type: token
                        canCreateIntegration: false
                      api_github:
                        name: Sync API schema
                        description: Sync your schema between an API version and Github
                        summary: ''
                        client_categories:
                          - schema_sync-api-repository
                        type: multiple
                        entity: api
                        scope: user
                        sync_data: []
                        variables: []
                        auth_type: token
                        canCreateIntegration: true
                Example2:
                  value:
                    name: Backup a collection
                    description: Backup your Postman Collections to Github
                    summary: ''
                    client_categories:
                      - backup-collection
                    type: multiple
                    entity: collection
                    scope: user
                    sync_data: []
                    variables: []
                    auth_type: token
                    canCreateIntegration: false
                    id: collection_github
                    service:
                      name: GitHub
                      icon: pm-icon-github
                      icon_url: 'https://static.getpostman.com/assets/github.png'
                      description: >-
                        Back up collections and sync API schemas to your GitHub
                        repositories
                      extended_description: >-
                        Backup and synchronize your Postman collections and API
                        schemas on Github, the largest host of source code in
                        the world. Your collections are all tucked in safe and
                        sound with our latest Postman Pro to GitHub Integration.
                      categories:
                        - Backup
                      setup_details: ''
                      service_data: []
                      oauth_initiator_host: 'https://integrate.postman-beta.com'
                      integrations:
                        github:
                          collection_github:
                            name: Backup a collection
                            description: Backup your Postman Collections to Github
                            summary: ''
                            client_categories:
                              - backup-collection
                            type: multiple
                            entity: collection
                            scope: user
                            sync_data: []
                            variables: []
                            auth_type: token
                            canCreateIntegration: false
                          collection_github_enterprise:
                            name: Backup a collection (custom domain)
                            description: >-
                              Backup your Postman Collections to GitHub on a
                              custom domain
                            summary: ''
                            client_categories:
                              - backup-collection
                            type: multiple
                            entity: collection
                            scope: user
                            sync_data: []
                            variables: []
                            auth_type: token
                            canCreateIntegration: false
                          api_github:
                            name: Sync API schema
                            description: Sync your schema between an API version and Github
                            summary: ''
                            client_categories:
                              - schema_sync-api-repository
                            type: multiple
                            entity: api
                            scope: user
                            sync_data: []
                            variables: []
                            auth_type: token
                            canCreateIntegration: true
                      id: github
                Example3:
                  value:
                    categories:
                      - Analytics
                      - Backup
                      - Notifications
                      - Deployment
                    services:
                      pm_pro_api:
                        name: Postman API
                        icon: pm-icon-cloudapi
                        icon_url: 'https://static.getpostman.com/assets/pro-api.png'
                        description: An API to access your Postman data
                        extended_description: >-
                          The Postman API has several endpoints to help you
                          integrate Postman even more deeply with your
                          development toolchain. You can add new
                          [collections](https://www.getpostman.com/docs/postman/collections/creating_collections),
                          update existing collections, update
                          [environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments),
                          add and run
                          [monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors)
                          directly through the API. This API allows you to
                          programmatically access data stored in your Postman
                          account with ease.
                            Get started with the API by clicking the Run in Postman button at the top of the [Postman API documentation](https://docs.api.getpostman.com/) page and use the Postman app to send requests.
                        categories:
                          - Backup
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations: {}
                      apimatic:
                        name: APIMatic
                        icon: pm-icon-apimatic
                        icon_url: 'https://static.getpostman.com/assets/apimatic.png'
                        description: >-
                          Convert common API Description formats (Swagger, RAML,
                          etc.) to & from Postman collections
                        extended_description: >-
                          APIMatic is a developer experience platform for APIs
                          which provides services such as instant SDKs, docs,
                          code samples and test cases, an API transformer and a
                          code generator.
                            The Postman to APIMatic Integration will convert your Postman [collections](https://www.getpostman.com/docs/postman/collections/creating_collections) to any major API description format and save them to GitHub.  The API Transformer uses a GitHub repository to save its documentation.  If you don’t already have a GitHub account, you’ll need to create one now.
                        categories:
                          - Backup
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: 'https://integrate.postman-beta.com'
                        integrations:
                          apimatic:
                            collection_apimatic_github_v2:
                              name: Backup a collection
                              description: >-
                                Backup your collection periodically to your
                                Github repository
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: oauth2
                              canCreateIntegration: false
                      bigpanda:
                        name: BigPanda
                        icon: pm-icon-bigpanda
                        icon_url: 'https://static.getpostman.com/assets/bigpanda.png'
                        description: Trigger and resolve alerts based on Postman monitors
                        extended_description: >-
                          BigPanda is an IT systems management platform that
                          aggregates and correlates IT alerts to create
                          high-level IT incidents. It allows different services
                          to be connected to have a single place where all the
                          alerts can be directed to.
                            BigPanda gives you real-time alerting based on the results of your Postman [monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors). If there was a failed [test](https://www.getpostman.com/docs/postman/scripts/test_scripts) or if an error occurred during the run, an alert would be created on BigPanda which would then alert the user.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          bigpanda:
                            monitor_run_bigpanda:
                              name: Post monitoring results
                              description: >-
                                Connect BigPanda to Postman Monitors to trigger
                                and resolve alerts
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      coralogix:
                        name: Coralogix
                        icon: pm-icon-coralogix
                        icon_url: 'https://static.getpostman.com/assets/coralogix.png'
                        description: Push Postman monitor results as logs to Coralogix
                        extended_description: >-
                          Coralogix is a machine learning powered log analytics
                          platform which improves the delivery and maintenance
                          process for software providers. This integration
                          allows you to configure your Postman
                          [monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors)
                          to send run metrics to Coralogix where you can
                          visualize and compare them with other metrics.
                        categories:
                          - Analytics
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          coralogix:
                            monitor_run_coralogix:
                              name: Post monitoring results
                              description: Send your Monitor Run Metrics and Events
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      datadog:
                        name: Datadog
                        icon: pm-icon-datadog
                        icon_url: 'https://static.getpostman.com/assets/datadog.png'
                        description: Bring Postman monitor results into Datadog
                        extended_description: >-
                          Datadog is a monitoring service for cloud-scale
                          applications, bringing together data from servers,
                          databases, tools, and services to present a unified
                          view of an entire stack.
                            This integration allows you to configure your Postman [monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors) to send metrics to Datadog where you can visualize and compare them with other metrics.
                        categories:
                          - Analytics
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          datadog:
                            monitor_run_datadog:
                              name: Post monitoring results
                              description: Send your Monitor Run Metrics and Events
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      dropbox:
                        name: Dropbox
                        icon: pm-icon-dropbox
                        icon_url: 'https://static.getpostman.com/assets/dropbox.png'
                        description: Back up your Postman collections to Dropbox
                        extended_description: >-
                          Dropbox is a file hosting service that offers cloud
                          storage, file synchronization, personal cloud, and
                          client software.
                            Backup and synchronize your Postman [collections](https://www.getpostman.com/docs/postman/collections/creating_collections) on Dropbox for file sharing, storage and collaboration.  The Postman Pro to Dropbox Integration seamlessly complements your existing workflows and allows you to keep your Postman collections aligned with your other project files.
                        categories:
                          - Backup
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: 'https://integrate.postman-beta.com'
                        integrations:
                          dropbox:
                            collection_dropbox:
                              name: Backup a collection
                              description: Backup your Postman Collections to Dropbox
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: oauth2
                              canCreateIntegration: false
                      github:
                        name: GitHub
                        icon: pm-icon-github
                        icon_url: 'https://static.getpostman.com/assets/github.png'
                        description: >-
                          Back up collections and sync API schemas to your
                          GitHub repositories
                        extended_description: >-
                          Backup and synchronize your Postman collections and
                          API schemas on Github, the largest host of source code
                          in the world. Your collections are all tucked in safe
                          and sound with our latest Postman Pro to GitHub
                          Integration.
                        categories:
                          - Backup
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: 'https://integrate.postman-beta.com'
                        integrations:
                          github:
                            collection_github:
                              name: Backup a collection
                              description: Backup your Postman Collections to Github
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: false
                            collection_github_enterprise:
                              name: Backup a collection (custom domain)
                              description: >-
                                Backup your Postman Collections to GitHub on a
                                custom domain
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: false
                            api_github:
                              name: Sync API schema
                              description: >-
                                Sync your schema between an API version and
                                Github
                              summary: ''
                              client_categories:
                                - schema_sync-api-repository
                              type: multiple
                              entity: api
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: true
                      gitlab:
                        name: GitLab
                        icon: pm-icon-gitlab
                        icon_url: 'https://static.getpostman.com/assets/gitlab.png'
                        description: >-
                          Back up your Postman collections to your GitLab
                          projects
                        extended_description: >-
                          Backup and synchronize your Postman
                          [collections](https://www.getpostman.com/docs/postman/collections/creating_collections)
                          on GitLab, an open source Git repository manager. Your
                          collections are all tucked in safe and sound with our
                          latest Postman Pro to GitLab Integration.
                        categories:
                          - Backup
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          gitlab:
                            collection_gitlab:
                              name: Backup a collection
                              description: Backup your Postman Collections to GitLab
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: false
                            collection_gitlab_hosted:
                              name: Backup a collection (custom domain)
                              description: >-
                                Backup your Postman Collections to GitLab on a
                                custom domain
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: false
                      bitbucket:
                        name: Bitbucket
                        icon: pm-icon-bitbucket
                        icon_url: 'https://static.getpostman.com/assets/bitbucket.png'
                        description: Back up Postman collections to Bitbucket
                        extended_description: >-
                          Keep your collections safe and sound with Postman’s
                          Bitbucket integration.
                        categories:
                          - Backup
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: 'https://integrate.postman-beta.com'
                        integrations:
                          bitbucket:
                            collection_bitbucket_cloud:
                              name: Backup a collection
                              description: Back up Postman collections to Bitbucket
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: basic_auth
                              canCreateIntegration: false
                      hipchat:
                        name: HipChat
                        icon: pm-icon-hipchat
                        icon_url: 'https://static.getpostman.com/assets/hipchat.png'
                        description: >-
                          Incorporate Postman notifications into your HipChat
                          instance
                        extended_description: >-
                          HipChat is an instant messaging app built for
                          businesses. The team chat tool lets you share files
                          and discuss tasks in real-time with colleagues,
                          project collaborators and even clients through
                          unlimited chatrooms. These integrations allow you to
                          get real-time updates of what is happening in your
                          Postman team.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          hipchat:
                            teamactivity_hipchat:
                              name: Post team activity
                              description: Add your team's Activity Feed to HipChat
                              summary: ''
                              client_categories: []
                              type: single
                              entity: team
                              scope: admin
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            monitor_run_hipchat:
                              name: Post monitoring results
                              description: Send your Monitor Run Results to HipChat
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      keen_io:
                        name: Keen
                        icon: pm-icon-keenio
                        icon_url: 'https://static.getpostman.com/assets/keen-io.png'
                        description: >-
                          Push Postman monitor results into Keen Streams for
                          API-based computation & S3 backups
                        extended_description: >-
                          Keen can be used for API-based computation, Amazon S3
                          backups, and building visualizations and dashboards
                          for your APIs.  Connect your Postman monitor results
                          to Keen Streams with the Postman Pro to Keen
                          Integration.
                        categories:
                          - Analytics
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          keen_io:
                            monitor_run_keen_io:
                              name: Post monitoring results
                              description: >-
                                Connect Keen to Postman Monitors for API-based
                                computation, S3 backups, and building
                                visualizations
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      microsoft_flow:
                        name: Microsoft Flow
                        icon: pm-icon-msflow
                        icon_url: >-
                          https://static.getpostman.com/assets/microsoft-flow.png
                        description: >-
                          Automate workflows between Postman and other services
                          using Microsoft Flow
                        extended_description: >-
                          Microsoft Flow is a cloud-based service provided by
                          Microsoft which allows you to automate workflows
                          between your favorite apps and services to get
                          notifications, synchronize files, collect data, and
                          more. It has over 140 services listed with predefined
                          flows as well that you can start using directly.
                        categories:
                          - Backup
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          microsoft_flow:
                            monitor_run_microsoft_flow:
                              name: Post monitoring results
                              description: >-
                                Configure your Postman Monitors to trigger a
                                Microsoft Flow
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            teamactivity_microsoft_flow:
                              name: Post team activity
                              description: Send your team's Activity Feed to Microsoft Flow
                              summary: ''
                              client_categories: []
                              type: single
                              entity: team
                              scope: admin
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            collectionactivity_microsoft_flow:
                              name: Post collection activity
                              description: >-
                                Configure a Postman Collection to send its
                                activity to Microsoft Flow
                              summary: ''
                              client_categories:
                                - activity-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            collection_microsoft_flow:
                              name: Backup a collection
                              description: Send your Postman Collections to Microsoft Flow
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      microsoft_teams:
                        name: Microsoft Teams
                        icon: pm-icon-msteams
                        icon_url: >-
                          https://static.getpostman.com/assets/microsoft-teams.png
                        description: Bring Postman notifications into your Microsoft Team
                        extended_description: >-
                          Microsoft Teams is a chat-based workspace that is
                          available for all Microsoft Office 365 users. This
                          integration allows you to get updates about what is
                          happening in your team directly in Microsoft Teams.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          microsoft_teams:
                            teamactivity_microsoft_teams:
                              name: Post team activity
                              description: Add your team's Activity Feed to Microsoft Teams
                              summary: ''
                              client_categories: []
                              type: single
                              entity: team
                              scope: admin
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            monitor_run_microsoft_teams:
                              name: Post monitoring results
                              description: Send your Monitor Run Results to Microsoft Teams
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      pagerduty:
                        name: PagerDuty
                        icon: pm-icon-pagerduty
                        icon_url: 'https://static.getpostman.com/assets/pagerduty.png'
                        description: >-
                          Get alerts from PagerDuty based on your Postman
                          monitors
                        extended_description: >-
                          PagerDuty is a popular incident management solution
                          that integrates with monitoring stacks for alerting,
                          on-call scheduling and automatic escalation of
                          critical incidents. The service can be configured to
                          deliver alerts by phone call, email, text or via iOS
                          and Android apps.
                            The Postman Pro to PagerDuty Integration enables Postman [monitor](https://www.getpostman.com/docs/postman/monitors/intro_monitors) results to trigger incidents and acknowledgements in PagerDuty.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          pagerduty:
                            monitor_run_pagerduty:
                              name: Post monitoring results
                              description: >-
                                Trigger and Acknowledge PagerDuty Events based
                                on Postman Monitor Run Results
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      slack:
                        name: Slack
                        icon: pm-icon-slack
                        icon_url: 'https://static.getpostman.com/assets/slack.png'
                        description: Postman information posted directly to your Slack Team
                        extended_description: >-
                          Slack is an instant messaging app built for teams. It
                          lets you organize your team conversations in open
                          channels and also send messages directly to another
                          person or a small group of people. These integrations
                          allow you to get real-time updates of what is
                          happening in your Postman team.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: 'https://integrate.postman-beta.com'
                        integrations:
                          slack:
                            teamactivity_slack:
                              name: Post team activity
                              description: Add your team's Activity Feed to Slack
                              summary: ''
                              client_categories: []
                              type: single
                              entity: team
                              scope: admin
                              sync_data: []
                              variables: []
                              auth_type: oauth2
                              canCreateIntegration: false
                            monitor_run_slack:
                              name: Post monitoring results
                              description: Send your Monitor Run Results to Slack
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: oauth2
                              canCreateIntegration: false
                            postman_search:
                              name: Not listed
                              description: Not listed
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: slack_team
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      victorops:
                        name: VictorOps
                        icon: pm-icon-victorops
                        icon_url: 'https://static.getpostman.com/assets/victorops.png'
                        description: >-
                          Trigger incidents on VictorOps whenever a monitor run
                          fails
                        extended_description: >-
                          VictorOps is a real-time incident management platform
                          that combines the power of people and data to embolden
                          DevOps teams so they can handle incidents as they
                          occur and prepare for the next one. This integration
                          allows you to configure [Postman
                          monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors)
                          to trigger incidents on VictorOps whenever it fails.
                        categories:
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          victorops:
                            monitor_run_victorops:
                              name: Post monitoring results
                              description: >-
                                Connect VictorOps to Postman Monitors to trigger
                                and resolve incidents based on Postman Monitor
                                Run Results
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      custom:
                        name: Webhooks
                        icon: pm-generic-icon-gear
                        icon_url: 'https://static.getpostman.com/assets/custom.png'
                        description: Send Postman events to custom webhooks
                        extended_description: >-
                          Integrate other services or custom workflows with
                          Postman.
                        categories:
                          - Backup
                          - Notifications
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          custom:
                            monitor_run_custom_webhooks:
                              name: Post monitoring results
                              description: >-
                                Send your monitor run results to a custom
                                webhook
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: jobTemplate
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            teamactivity_custom_webhooks:
                              name: Post team activity
                              description: >-
                                Send your team's Activity Feed to a custom
                                webhook
                              summary: ''
                              client_categories: []
                              type: single
                              entity: team
                              scope: admin
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                            collection_custom_webhooks:
                              name: Backup a collection
                              description: >-
                                Send updates for a Postman Collection to a
                                custom webhook
                              summary: ''
                              client_categories:
                                - backup-collection
                              type: multiple
                              entity: collection
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: ''
                              canCreateIntegration: false
                      aws_api_gateway:
                        name: AWS API Gateway
                        icon: pm-icon-aws-api-gateway
                        icon_url: >-
                          https://static.getpostman.com/assets/aws_api_gateway.png
                        description: Integrate with AWS API Gateway
                        extended_description: >-
                          Deploy your API schema to the AWS API Gateway directly
                          from Postman.
                        categories:
                          - Deployment
                        setup_details: ''
                        service_data: []
                        oauth_initiator_host: null
                        integrations:
                          aws_api_gateway:
                            aws_api_gateway:
                              name: Deploy HTTP APIs to AWS API Gateway (v2)
                              description: >-
                                This integration uses version 2 of the AWS API
                                and only supports HTTP APIs. (Support for REST
                                APIs coming soon!)
                              summary: ''
                              client_categories: []
                              type: multiple
                              entity: apiversion
                              scope: user
                              sync_data: []
                              variables: []
                              auth_type: token
                              canCreateIntegration: false
          description: '200'
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 09:27:00 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=a7f5ac235938c8a9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=222da15269b1f9c6
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"2db1-jCnKzBzqTvylfgx4hlMr/w"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format
                      details:
                        param: service
                Example2:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format
                      details:
                        param: rule
          description: 400 - Invalid service
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 28 Jul 2020 05:47:59 GMT'
            Content-Length:
              schema:
                type: integer
              example: 126
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0efd8d89a355930b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=784489ee1ec1a084
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"7e-ptqKSxu3YmnqU1mnhupesA"
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              examples:
                Example1:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
                Example2:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
                Example3:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
          description: 403 - Token not sent
          headers:
            Date:
              schema:
                type: string
                format: style
              example:
                  value: 'Mon, 27 Jul 2020 12:55:29 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=7bee3bdb49f4dfc5
            x-srv-span:
              schema:
                type: string
              example: v=1;s=665473d51efbe13a
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /v2/integration:
    get:
      tags:
        - Integrations
        - Integrations Internal
      summary: List Added Integrations - V2
      description: >-
        This request returns the complete list of added integrations in the
        user's team.


        **Permissions** - Logged in user to have access to the Postman entity
        that the integration is configured on.


        **Pagination** - pagination is supported by the `count` and `page` query
        parameters


        **Ordering** - ordered from oldest to newest integrations created.


        **Note**: Internal integrations are ignored from the response by
        default. Set `internal=true` to include them in the response.
      parameters:
        - name: populateUsers
          in: query
          schema:
            type: boolean
          description: >-
            Default: `false`. When set to true, the `createdBy` and
            `lastUpdatedBy` fields are returned as objects with user
            information, instead of string IDs.
          example: true
        - name: populateEntities
          in: query
          schema:
            type: boolean
          description: >-
            Default: `false`. When set to true, the `entity` fields are returned
            as objects with`type`, `name` and `id` informtation, instead of just
            strings.
          example: true
        - name: serviceId
          in: query
          schema:
            type: string
          description: >-
            Only returns the list of added integrations belonging to the sent
            `serviceId`. Eg: `github`, `slack`
          example: github
        - name: rule
          in: query
          schema:
            type: string
          description: >-
            Only returns the list of added integrations belonging to the sent
            rule. Eg: collection_github, teamactivity_slack
          example: collection_github
        - name: workspace
          in: query
          schema:
            type: string
          description: >-
            Only returns integrations on entities in the given workspace. Eg:
            92a0e9c1-beab-4c0e-858e-29bf9e973094
          example: '{{workspaceId}}'
        - name: entityType
          in: query
          schema:
            type: string
          description: >-
            Only returns the list of integrations that are configured on the
            given entity type. Eg: team, collection, jobTemplate
          example: '{{entityType}}'
        - name: entityId
          in: query
          schema:
            type: string
          description: >-
            Returns integrations that are configured on the given entity. Entity
            is defined by entity type + entity ID, so it is required to send
            `entityType` along with this parameter. Eg:
            10272186-600f662c-0123-4974-a1b5-95b90f81a284
          example: '{{entityId}}'
        - name: count
          in: query
          schema:
            type: integer
          description: >-
            Parameter used for pagination. Describes how many integrations need
            to be returned per page. Defaults to 100.
          example: 10
        - name: page
          in: query
          schema:
            type: integer
          description: >-
            Parameter used for pagination. Describes the page number in the list
            of pages. Starts with 1.
          example: 1
        - name: internal
          in: query
          schema:
            type: boolean
          description: >-
            Default: `false`. When set to true, internal integrations are also
            returned in the response.
          example: true
        - name: clientCategory
          in: query
          schema:
            type: string
          description: >-
            Only returns the list of added integrations belonging to the sent
            `clientCategory`
          example: schema_sync-api-repository
        - name: lite
          in: query
          schema:
            type: boolean
          description: >-
            Default: `false`. When set to true, it. the API returns minimal
            integration information.
          example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                      - pagination
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                      pagination:
                        type: object
                        required:
                          - page
                          - count
                          - totalCount
                          - totalPages
                        properties:
                          page:
                            type: integer
                          count:
                            type: integer
                          totalCount:
                            type: integer
                          totalPages:
                            type: integer
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - status
                        - createdBy
                        - lastUpdatedBy
                        - id
                        - rule
                        - entity
                        - executor
                        - name
                        - service
                        - clientCategories
                        - variables
                        - createdAt
                        - updatedAt
                        - lastRunAt
                      properties:
                        status:
                          type: string
                        createdBy:
                          type: object
                          required:
                            - id
                            - name
                            - username
                            - email
                            - profilePicUrl
                          properties:
                            id:
                              type: string
                              format: utc-millisec
                            name:
                              type: string
                            username:
                              type: string
                            email:
                              type: string
                              format: email
                            profilePicUrl:
                              type: string
                              format: uri
                        lastUpdatedBy:
                          type: object
                          required:
                            - id
                            - name
                            - username
                            - email
                            - profilePicUrl
                          properties:
                            id:
                              type: string
                              format: utc-millisec
                            name:
                              type: string
                            username:
                              type: string
                            email:
                              type: string
                              format: email
                            profilePicUrl:
                              type: string
                              format: uri
                        id:
                          type: integer
                        rule:
                          type: string
                        entity:
                          type: object
                          required:
                            - type
                            - id
                            - name
                          properties:
                            type:
                              type: string
                            id:
                              type: string
                            name:
                              type: string
                        executor:
                          type: string
                        name:
                          type: string
                        service:
                          type: string
                        clientCategories:
                          type: array
                          items:
                            type: string
                        variables:
                          type: object
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        lastRunAt:
                          type: string
                          format: date-time
              examples:
                Example1:
                  value:
                    meta:
                      model: integration
                      action: find
                      pagination:
                        page: 1
                        count: 2
                        totalCount: 2
                        totalPages: 1
                    data:
                      - status: failed
                        createdBy: '5665'
                        lastUpdatedBy: '5665'
                        id: 1109
                        rule: teamactivity_microsoft_teams
                        service: microsoft_teams
                        clientCategories: []
                        entity: team
                        executor: '1'
                        name: Team Activity to Microsoft Teams
                        variables: {}
                        createdAt: '2019-04-22T06:46:37.000Z'
                        updatedAt: '2019-04-22T06:46:37.000Z'
                        lastRunAt: '2020-03-26T13:56:24.000Z'
                      - status: created
                        createdBy: '5665'
                        lastUpdatedBy: '5665'
                        id: 2063
                        rule: api_github
                        service: github
                        clientCategories:
                          - schema_sync-api-repository
                        entity: api
                        executor: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                        name: One to HelloWorld
                        variables:
                          repository: HelloWorld
                          owner: AbhiramHPostman
                          name: One
                          webhook: 'https://integrate-beta.pstmn.io/webhooks/2HQaLA'
                          secret: >-
                            8dad87bbf1c4e0ed227b858ec4b7480d8be13890a4ed6986a65a451ae8c3b
                        createdAt: '2020-03-24T13:56:24.000Z'
                        updatedAt: '2020-03-24T13:56:24.000Z'
                        lastRunAt: '2020-03-28T13:56:24.000Z'
                Example2:
                  value:
                    meta:
                      model: integration
                      action: find
                      pagination:
                        page: 1
                        count: 2
                        totalCount: 2
                        totalPages: 1
                    data:
                      - status: failed
                        createdBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        lastUpdatedBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        id: 2312
                        rule: collection_github
                        entity:
                          type: collection
                          id: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                          name: My Special Collection
                        executor: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                        name: >-
                          Backup to VeryImportantRepo/Postman Collections/Very
                          Important Collection
                        service: github
                        clientCategories:
                          - backup-collection
                        variables:
                          repository: VeryImportantRepo
                          directory: Postman Collections
                          owner: AbhiramHPostman
                          name: Very Important Collection
                          branch: postman-branch
                        createdAt: '2020-05-03T09:29:09.000Z'
                        updatedAt: '2020-05-03T09:29:09.000Z'
                        lastRunAt: '2020-03-26T13:56:24.000Z'
                      - status: created
                        createdBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        lastUpdatedBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        id: 2063
                        rule: api_github
                        entity:
                          type: api
                          id: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                          name: New API
                        executor: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                        name: One to HelloWorld
                        service: github
                        clientCategories:
                          - schema_sync-api-repository
                        variables:
                          repository: HelloWorld
                          owner: AbhiramHPostman
                          name: One
                          webhook: 'https://integrate-beta.pstmn.io/webhooks/2HQaLA'
                          secret: >-
                            8dad87bbf1c4e0ed227b858ec4b7480d8be13890a4ed6986a65a451ae8c3b7
                        createdAt: '2020-03-24T13:56:24.000Z'
                        updatedAt: '2020-03-24T13:56:24.000Z'
                        lastRunAt: '2020-03-21T13:56:24.000Z'
                Example3:
                  value:
                    meta:
                      model: integration
                      action: find
                      pagination:
                        page: 1
                        count: 2
                        totalCount: 2
                        totalPages: 1
                    data:
                      - status: failed
                        createdBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        lastUpdatedBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        id: 1109
                        rule: teamactivity_microsoft_teams
                        service: microsoft_teams
                        clientCategories: []
                        entity:
                          type: team
                          id: '1'
                          name: Cooper
                        executor: '1'
                        name: Team Activity to Microsoft Teams
                        variables: {}
                        createdAt: '2019-04-22T06:46:37.000Z'
                        updatedAt: '2019-04-22T06:46:37.000Z'
                        lastRunAt: '2020-03-29T13:56:24.000Z'
                      - status: created
                        createdBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        lastUpdatedBy:
                          id: '5665'
                          name: Abhiram
                          username: abhiramh
                          email: abhiram.haritas@postman.com
                          profilePicUrl: 'https://www.example.com/image.jpeg'
                        id: 2063
                        rule: api_github
                        service: github
                        clientCategories:
                          - schema_sync-api-repository
                        executor: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                        entity:
                          type: api
                          id: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                          name: New API
                        name: One to HelloWorld
                        variables:
                          repository: HelloWorld
                          owner: AbhiramHPostman
                          name: One
                          webhook: 'https://integrate-beta.pstmn.io/webhooks/2HQaLA'
                          secret: >-
                            8dad87bbf1c4e0ed227b858ec4b7480d8be13890a4ed6986a65a451ae8c3b
                        createdAt: '2020-03-24T13:56:24.000Z'
                        updatedAt: '2020-03-24T13:56:24.000Z'
                        lastRunAt: '2020-03-25T13:56:24.000Z'
          description: No populated fields
      security:
        - authToken: []
  /integration:
    get:
      tags:
        - Integrations
        - Integrations Internal
      summary: List Configured Integrations
      description: >-
        **This request is deprecated. Please use the v2 List API instead.**


        This API is used by legacy apps.


        By default, the API returns a list of integrations that either the
        logged in user created, or is on the team entity (such as team activity
        integrations).


        If integrations other than the ones returned by default is needed, then
        one has to send the `workspace` parameter. This adds integrations on
        entities within the given workspace to the response.
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          description: >-
            Optional. Returns the list of integrations on entities in this
            workspace.
          example: '{{workspaceId}}'
        - name: entity
          in: query
          schema:
            type: string
          description: 'Optional. Filter the list by this entity type. Eg: `apiversion`.'
          example: '{{entityType}}'
        - name: executor
          in: query
          schema:
            type: string
          description: Optional. Filter the list by this entity ID.
          example: '{{entityId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    model_id:
                      type: integer
                    meta:
                      $ref: '#/components/schemas/Meta'
                    data:
                      $ref: '#/components/schemas/Integration'
                  required:
                    - model_id
                    - meta
                    - data
              example:
                - model_id: 205
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '1'
                    lastUpdatedBy: '1'
                    id: 205
                    rule: postman_search
                    entity: team
                    executor: '1'
                    name: null
                    variables: {}
                    createdAt: '2017-01-24T08:56:56.000Z'
                    updatedAt: '2017-08-10T10:47:13.000Z'
                - model_id: 1109
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '5665'
                    lastUpdatedBy: '5665'
                    id: 1109
                    rule: teamactivity_microsoft_teams
                    entity: team
                    executor: '1'
                    name: Team Activity to Microsoft Teams
                    variables: {}
                    createdAt: '2019-04-22T06:46:37.000Z'
                    updatedAt: '2019-04-22T06:46:37.000Z'
                - model_id: 2063
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2063
                    rule: api_github
                    entity: api
                    executor: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                    name: One to HelloWorld
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: One
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2HQaLA'
                      secret: >-
                        8dad87bbf1c4e0ed227b858ec4b7480d8be13890a4ed6986a65a451ae8c3b7fb
                    createdAt: '2020-03-24T13:56:24.000Z'
                    updatedAt: '2020-03-24T13:56:24.000Z'
                - model_id: 2136
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2136
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                    name: >-
                      Backup as swagger20 to HelloWorld/Postman
                      Collections/First
                    variables:
                      owner: AbhiramHPostman
                      repository: HelloWorld
                      directory: Postman Collections
                      name: First.yaml
                      branch: ''
                      format: swagger20
                    createdAt: '2020-04-14T10:00:49.000Z'
                    updatedAt: '2020-07-24T10:04:57.000Z'
                - model_id: 2312
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2312
                    rule: collection_github
                    entity: collection
                    executor: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                    name: >-
                      Backup to VeryImportantRepo/Postman Collections/Very
                      Important Collection
                    variables:
                      repository: VeryImportantRepo
                      directory: Postman Collections
                      owner: AbhiramHPostman
                      name: Very Important Collection
                      branch: postman-branch
                    createdAt: '2020-05-03T09:29:09.000Z'
                    updatedAt: '2020-05-03T09:29:09.000Z'
                - model_id: 2629
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2629
                    rule: collection_github
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: >-
                      Backup to HelloWorld/Postman Collections Github/My
                      Collection
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections Github
                      owner: AbhiramHPostman
                      name: My Collection
                      branch: test
                    createdAt: '2020-05-22T10:55:10.000Z'
                    updatedAt: '2020-05-22T10:55:10.000Z'
                - model_id: 2630
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2630
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: >-
                      Backup as raml to HelloWorld/Postman Collections
                      APIMatic/My Collection
                    variables:
                      owner: AbhiramHPostman
                      repository: HelloWorld
                      directory: Postman Collections APIMatic
                      name: My Collection
                      branch: test
                      format: raml
                    createdAt: '2020-05-22T11:07:40.000Z'
                    updatedAt: '2020-05-22T11:07:40.000Z'
                - model_id: 2636
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2636
                    rule: api_github
                    entity: api
                    executor: 3f49b13c-2979-493d-805d-c0a1bd76b90e
                    name: New API to HelloWorld
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: New API
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2HSazZ'
                      secret: >-
                        a3cd227229653e038168ac4da652fb1bf9913c5c22d9509c6bad82bc6ec31e09
                    createdAt: '2020-05-26T05:51:36.000Z'
                    updatedAt: '2020-05-26T05:51:36.000Z'
                - model_id: 2640
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2640
                    rule: collection_microsoft_flow
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Microsoft Flow allows custom identifiers
                    variables:
                      name: Microsoft Flow allows custom identifiers
                    createdAt: '2020-05-26T06:28:05.000Z'
                    updatedAt: '2020-05-26T06:28:05.000Z'
                - model_id: 2641
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2641
                    rule: collection_custom_webhooks
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Custom webhook allows names
                    variables:
                      name: Custom webhook allows names
                    createdAt: '2020-05-26T06:29:49.000Z'
                    updatedAt: '2020-05-26T06:29:49.000Z'
                - model_id: 2646
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2646
                    rule: collectionactivity_microsoft_flow
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Another identifier
                    variables:
                      name: Another identifier
                    createdAt: '2020-05-26T06:47:46.000Z'
                    updatedAt: '2020-05-26T06:47:46.000Z'
                - model_id: 2851
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2851
                    rule: collection_github
                    entity: collection
                    executor: 485374-3c1e8025-4133-42f1-92ce-2ad0bc10b4ca
                    name: Backup to HelloWorld/Postman Collections Beta/Test.json
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections Beta
                      owner: AbhiramHPostman
                      name: Test.json
                      branch: test
                    createdAt: '2020-06-10T10:59:26.000Z'
                    updatedAt: '2020-06-10T10:59:26.000Z'
                - model_id: 2853
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2853
                    rule: monitor_run_slack
                    entity: jobTemplate
                    executor: 1ea8a0c6-5844-47b0-8fd7-c63e8fc7cc26
                    name: 'Monitor to #beta-integrations'
                    variables:
                      options: ''
                      channel: '#beta-integrations'
                    createdAt: '2020-06-10T11:38:43.000Z'
                    updatedAt: '2020-06-10T11:38:43.000Z'
                - model_id: 2995
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2995
                    rule: collection_github
                    entity: collection
                    executor: 485374-b450fc43-9ace-410e-8908-d1472c6d9940
                    name: Backup to HelloWorld/Postman Collections/WIllBeDeleted
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections
                      owner: AbhiramHPostman
                      name: WIllBeDeleted
                      branch: ''
                    createdAt: '2020-06-19T12:17:08.000Z'
                    updatedAt: '2020-06-19T12:17:08.000Z'
                - model_id: 3196
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3196
                    rule: teamactivity_hipchat
                    entity: team
                    executor: '1'
                    name: xxxx
                    variables: {}
                    createdAt: '2020-07-15T15:44:29.000Z'
                    updatedAt: '2020-07-15T15:44:29.000Z'
                - model_id: 3198
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3198
                    rule: teamactivity_microsoft_teams
                    entity: team
                    executor: '1'
                    name: zzushdb
                    variables: {}
                    createdAt: '2020-07-15T15:46:24.000Z'
                    updatedAt: '2020-07-15T15:46:24.000Z'
                - model_id: 3209
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3209
                    rule: apiversion_github
                    entity: apiversion
                    executor: 5ee92cf6-b8bc-4fb5-8c2d-af984246f262
                    name: 1.1.1 to Postman Beta API/1.1.1.json
                    variables:
                      directory: Postman Beta API
                      filename: 1.1.1.json
                      branch: development
                      source: postman
                      api: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                      name: 1.1.1
                    createdAt: '2020-07-17T10:42:13.000Z'
                    updatedAt: '2020-07-17T10:42:13.000Z'
                - model_id: 3210
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3210
                    rule: monitor_run_slack
                    entity: jobTemplate
                    executor: 1ea8a0c6-5844-47b0-8fd7-c63e8fc7cc26
                    name: 'Monitor to #beta-integrations'
                    variables:
                      channel: '#beta-integrations'
                      options: all_runs
                    createdAt: '2020-07-17T10:43:35.000Z'
                    updatedAt: '2020-07-17T10:43:35.000Z'
                - model_id: 3242
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3242
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Test integration
                    variables:
                      owner: AbhiramH
                      repository: TestRepo
                      directory: Postman Collections APIMatic
                      name: My Collection.raml
                      branch: ''
                      format: raml10
                    createdAt: '2020-07-23T12:07:48.000Z'
                    updatedAt: '2020-07-23T12:07:48.000Z'
                - model_id: 3243
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3243
                    rule: apiversion_github
                    entity: apiversion
                    executor: 2bc2be9d-02d4-46fb-aafe-7cdafbb6100f
                    name: 0.0.1 to Schema Sync/0.0.1.json
                    variables:
                      directory: Schema Sync
                      filename: 0.0.1.json
                      branch: development
                      source: postman
                      api: 3f49b13c-2979-493d-805d-c0a1bd76b90e
                      name: 0.0.1
                    createdAt: '2020-07-23T12:39:59.000Z'
                    updatedAt: '2020-07-23T12:39:59.000Z'
                - model_id: 3245
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3245
                    rule: api_github
                    entity: api
                    executor: 6cb47691-4773-453f-92bd-7568e4a7bd3d
                    name: Mini Sync Service
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: One more
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2JuERa'
                      secret: >-
                        f8e13a6033fa7980ad566dcc1b37f526c6af0544bb2b6d119743713672901353
                    createdAt: '2020-07-23T12:52:23.000Z'
                    updatedAt: '2020-07-23T12:52:23.000Z'
                - model_id: 3249
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3249
                    rule: teamactivity_custom_webhooks
                    entity: team
                    executor: '1'
                    name: aaa
                    variables: {}
                    createdAt: '2020-07-23T15:23:02.000Z'
                    updatedAt: '2020-07-23T15:23:02.000Z'
                - model_id: 3253
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3253
                    rule: teamactivity_microsoft_flow
                    entity: team
                    executor: '1'
                    name: >-
                      http://localhost:.5090/integrations/services/microsoft_flow/add/teamactivity_microsoft_flow?workspace=2e6afb66-de04-4472-9623-3b9d60fbdb77
                    variables: {}
                    createdAt: '2020-07-23T15:28:14.000Z'
                    updatedAt: '2020-07-23T15:28:14.000Z'
                - model_id: 3257
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3257
                    rule: teamactivity_slack
                    entity: team
                    executor: '1'
                    name: Team Activity to atishay-test-channel
                    variables:
                      channel: atishay-test-channel
                    createdAt: '2020-07-23T15:34:28.000Z'
                    updatedAt: '2020-07-23T15:34:28.000Z'
          description: List Integrations
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 09:38:05 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=edf6df7e6471c63b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=679caedb7289106b
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"2a2f-MIMY0ngFe2jnvH3frGU8wA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
    post:
      tags:
        - Integrations
        - Integrations Internal
      summary: Create Integration
      description: >-
        For a user to create a new instance of an integration. The created
        integration gets added to the user's team.


        **Request Body**


        |Field| Description|

        |---|---|

        |name| Name of the integration.|

        |rule | Type of integration. Eg: monitor_run_slack  |

        | entity  | Type of Postman entity. Eg: collection, jobTemplate   |

        | executor  | ID of the Postman entity that the integration is to be
        configured on.  |

        |  variables | List of variables required for integration. The structure
        of this field is dependent on the type of integration. |
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                rule:
                  type: string
                entity:
                  type: string
                executor:
                  type: string
                variables:
                  type: object
                  required:
                    - access_token
                    - repository
                    - directory
                    - owner
                    - name
                  properties:
                    access_token:
                      type: string
                      format: color
                    repository:
                      type: string
                    directory:
                      type: string
                    owner:
                      type: string
                    name:
                      type: string
            example:
              name: My collection backup integration
              rule: collection_github
              entity: collection
              executor: U1-12345678-1234-1234-1234-123456789012
              variables:
                access_token: '123'
                repository: test
                directory: directory
                owner: postman
                name: collectionBackup.json
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: integer
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/Integration'
              example:
                model_id: 3020
                meta:
                  model: integration
                  action: create
                data:
                  name: My collection backup integration
                  rule: collection_github
                  executor: U1-b450fc43-9ace-410e-8908-d1472c6d9940
                  entity: collection
                  createdBy: '485374'
                  lastUpdatedBy: '485374'
                  variables:
                    access_token: '123'
                    repository: HelloWorld
                    directory: directory
                    owner: AbhiramHPostman
                    name: collectionBackup.json
                  createdAt: '2020-06-22T08:54:39.707Z'
                  updatedAt: '2020-06-22T08:54:39.707Z'
                  team: '1'
                  id: 3020
          description: 200 - Success
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:56:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=ff34037dabb97842
            x-srv-span:
              schema:
                type: string
              example: v=1;s=e4cb0cfea3ab3776
            ETag:
              schema:
                type: string
              example: W/"1e4-3L8iXK84RIImwdTRDE2emg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - mandatory_variables
                          - missing_variables
                          - param
                        properties:
                          mandatory_variables:
                            type: array
                            items:
                              type: string
                          missing_variables:
                            type: array
                            items:
                              type: string
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: mandatoryVariablesMissingError
                      message: A mandatory variable is missing for this rule
                      details:
                        mandatory_variables:
                          - access_token
                          - repository
                          - owner
                        missing_variables:
                          - access_token
                Example2:
                  value:
                    error:
                      name: paramMissingError
                      message: Parameter is missing in the request.
                      details:
                        param: executor
          description: 400 - Missing mandatory variables
          headers:
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            Connection:
              schema:
                type: string
              example: keep-alive
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:36:32 GMT'
            ETag:
              schema:
                type: string
              example: W/"b3-H70d0jpru7rCBiTdLlUyHA"
            Server:
              schema:
                type: string
              example: nginx
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            X-Powered-By:
              schema:
                type: string
              example: Sails <sailsjs.org>
            set-cookie:
              schema:
                type: string
                format: style
              example: >-
                sails.sid=s%3ABLL4pdGviFFKlBtMEU6RCLaYvX8ck6ay.nLssVON88D2O6Fi9ZqY8sgsW%2FJHFxf5SbYS2o8lP0Qk;
                Path=/; Expires=Thu, 15 Sep 2016 10:12:51 GMT; HttpOnly
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=f3472d8423a7a8b9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=f13a046f613320f8
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            format: color
              examples:
                Example1:
                  value:
                    error:
                      name: forbiddenError
                      message: You are not permitted to perform the action.
                      details:
                        model: collection
                        model_id: U1-b450fc43-9ace-410e-8908-d1472c6d9940
                        owner: '508301'
                Example2:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
          description: 403 - Insufficient permissions on the entity
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:53:08 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=67132e77ba4776ca
            x-srv-span:
              schema:
                type: string
              example: v=1;s=52a45f55929e062b
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the collection you are looking for
                  details:
                    model: collection
                    model_id: U1-12345678-1234-1234-1234-123456789012
                    owner: '508301'
          description: 404 - Entity not found
  /integration/{integrationId}:
    delete:
      tags:
        - Integrations
        - Integrations Internal
      summary: Delete Integration
      description: >-
        API used for deleting an integration using its `integrationId`.


        **Who can use this API?**


        Right now, the integration creator and all admins of the team that the
        integration belongs to are given permissions to delete a given
        integration.
      parameters:
        - name: integrationId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/deleteIntegration200ResponseSubSchema'
                  - type: object
                    properties:
                      model_id:
                        type: string
                        format: utc-millisec
              example:
                model_id: '3020'
                meta:
                  model: integration
                  action: destroy
                data: {}
                revision: null
          description: 200 - Success
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:56:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=ff34037dabb97842
            x-srv-span:
              schema:
                type: string
              example: v=1;s=e4cb0cfea3ab3776
            ETag:
              schema:
                type: string
              example: W/"1e4-3L8iXK84RIImwdTRDE2emg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
                          owner:
                            type: string
                            format: color
                          message:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: forbiddenError
                      message: You are not permitted to perform the action.
                      details:
                        model: integration
                        model_id: '2631'
                        owner: '508348'
                        message: >-
                          You do not have appropriate permissions to perform
                          this action.
                Example2:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
          description: 403 - Insufficient permissions
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:53:08 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=67132e77ba4776ca
            x-srv-span:
              schema:
                type: string
              example: v=1;s=52a45f55929e062b
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: color
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '999999'
                    owner: '508348'
          description: 404 - Attempt to delete an integration that does not exist
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:36:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=f3472d8423a7a8b9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=f13a046f613320f8
            ETag:
              schema:
                type: string
              example: W/"b3-H70d0jpru7rCBiTdLlUyHA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
    put:
      tags:
        - Integrations
        - Integrations Internal
      summary: Update Integration
      description: >-
        API to update an integration.


        **Permissions Required**


        The user needs to have the `EDIT_INTEGRATION` permission on the given
        integration to be able to edit it. This is currently only given to the
        integration creator.


        **Request Body**


        Request body will comprise of the fields to be updated. None of the
        fields are required in this API.


        |Field| Description|

        |---|---|

        |name| New name of the integration.|

        |  variables | List of integration variables to be updated.  |
      parameters:
        - name: integrationId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                variables:
                  type: object
                  required:
                    - directory
                    - branch
                  properties:
                    directory:
                      type: string
                    branch:
                      type: string
            example:
              name: New integration name
              variables:
                directory: Updated postman collections
                branch: new-postman-branch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    format: utc-millisec
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: object
                    required:
                      - createdBy
                      - lastUpdatedBy
                      - id
                      - team
                      - rule
                      - entity
                      - executor
                      - variables
                      - createdAt
                      - updatedAt
                      - name
                    properties:
                      createdBy:
                        type: string
                        format: color
                      entity:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      name:
                        type: string
              example:
                model_id: '2635'
                meta:
                  model: integration
                  action: update
                data:
                  createdBy: '508348'
                  lastUpdatedBy: '508348'
                  id: 2635
                  team: '1'
                  rule: monitor_run_slack
                  entity: jobTemplate
                  executor: 1ea8fb3f-f80a-43c0-bafd-ab89658e5ede
                  variables:
                    channel: atishay-test-channel
                    options: all_runs
                  createdAt: '2020-05-25T22:30:03.000Z'
                  updatedAt: '2020-05-25T22:30:03.000Z'
                  name: New integration name
          description: 200 - Success
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:56:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=ff34037dabb97842
            x-srv-span:
              schema:
                type: string
              example: v=1;s=e4cb0cfea3ab3776
            ETag:
              schema:
                type: string
              example: W/"1e4-3L8iXK84RIImwdTRDE2emg"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                          - variable
                        properties:
                          variable:
                            type: string
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: nonEditableVariableError
                      message: A variable specified cannot be edited for this rule
                      details:
                        variable: access_token
                Example2:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format
                      details:
                        param: name
          description: 400 - Trying to update non-editable variables
          headers:
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            Connection:
              schema:
                type: string
              example: keep-alive
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:57:01 GMT'
            ETag:
              schema:
                type: string
              example: W/"7e-SjBeGiBIHHplTtAKcnyv5w"
            Server:
              schema:
                type: string
              example: nginx
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            X-Powered-By:
              schema:
                type: string
              example: Sails <sailsjs.org>
            set-cookie:
              schema:
                type: string
                format: style
              example: >-
                sails.sid=s%3ABLL4pdGviFFKlBtMEU6RCLaYvX8ck6ay.nLssVON88D2O6Fi9ZqY8sgsW%2FJHFxf5SbYS2o8lP0Qk;
                Path=/; Expires=Thu, 15 Sep 2016 10:12:51 GMT; HttpOnly
            Content-Length:
              schema:
                type: integer
              example: 126
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=51113bad0ded7b0d
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7d1a8ba60ced68c7
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
                          owner:
                            type: string
                            format: color
                          message:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: forbiddenError
                      message: You are not permitted to perform the action.
                      details:
                        model: integration
                        model_id: '2631'
                        owner: '508348'
                        message: >-
                          You do not have appropriate permissions to perform
                          this action.
                Example2:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
          description: 403 - Insufficient permissions
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:53:08 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: "v=1;t=67132e77ba4776ca"
            x-srv-span:
              schema:
                type: string
              example: "v=1;s=52a45f55929e062b"
            ETag:
              schema:
                type: string
              example: "5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: color
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '999999'
                    owner: '508348'
          description: 404 - Attempt to update an integration that does not exist
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:36:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=f3472d8423a7a8b9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=f13a046f613320f8
            ETag:
              schema:
                type: string
              example: W/"b3-H70d0jpru7rCBiTdLlUyHA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
    get:
      tags:
        - Integrations
        - Integrations Internal
      summary: Get Integration by ID
      description: >-
        This API is used to get details of a given integration.


        The `populateStatus` parameter is used if we want the `status` field in
        the response to be populated. If it is `false`, then `status` is set to
        `null`.


        **Note**: If the user has permissions to view sensitive variables, they
        are added in this API's response as well.
      parameters:
        - name: integrationId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationId}}'
        - name: populateStatus
          in: query
          schema:
            type: integer
          description: Can be set to 0 or 1; toggles returning status in the API.
          example: 1
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    format: utc-millisec
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: object
                    required:
                      - createdBy
                      - lastUpdatedBy
                      - id
                      - team
                      - rule
                      - entity
                      - executor
                      - variables
                      - createdAt
                      - updatedAt
                      - status
                      - name
                    properties:
                      createdBy:
                        type: string
                        format: color
                      entity:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      status:
                        type: string
                        nullable: true
                      name:
                        type: string
              examples:
                Example1:
                  value:
                    model_id: '2635'
                    meta:
                      model: integration
                      action: find
                    data:
                      createdBy: '508348'
                      lastUpdatedBy: '508348'
                      id: 2635
                      team: '1'
                      rule: monitor_run_slack
                      entity: jobTemplate
                      executor: 1ea8fb3f-f80a-43c0-bafd-ab89658e5ede
                      variables:
                        channel: atishay-test-channel
                        options: all_runs
                      createdAt: '2020-05-25T22:30:03.000Z'
                      updatedAt: '2020-05-25T22:30:03.000Z'
                      status: created
                      name: My monitor run integration
                Example2:
                  value:
                    model_id: '2635'
                    meta:
                      model: integration
                      action: find
                    data:
                      createdBy: '508348'
                      lastUpdatedBy: '508348'
                      id: 2635
                      team: '1'
                      rule: monitor_run_slack
                      entity: jobTemplate
                      executor: 1ea8fb3f-f80a-43c0-bafd-ab89658e5ede
                      variables:
                        channel: atishay-test-channel
                        options: all_runs
                      createdAt: '2020-05-25T22:30:03.000Z'
                      updatedAt: '2020-05-25T22:30:03.000Z'
                      status: null
                      name: My monitor run integration
                Example3:
                  value:
                    model_id: '18369'
                    meta:
                      model: integration
                      action: find
                    data:
                      createdBy: '575358'
                      lastUpdatedBy: '575358'
                      id: 18369
                      rule: collection_github
                      entity: collection
                      executor: 9c89f56f-ba75-4d90-a516-1bcb2981365a
                      team: '1'
                      name: Backup to test/directory/A Collection
                      variables:
                        access_token: de29119cc2c2398aba412c0ab53d4d2b3daaa2b6
                        repository: test
                        directory: directory
                        owner: postman
                        name: A Collection
                      createdAt: '2021-02-02T07:44:19.000Z'
                      updatedAt: '2021-02-02T07:44:19.000Z'
                      status: null
          description: 200 - Success with status populated
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Thu, 15 Sep 2016 10:02:51 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.8.1
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=ff34037dabb97842
            x-srv-span:
              schema:
                type: string
              example: v=1;s=e4cb0cfea3ab3776
            ETag:
              schema:
                type: string
              example: W/"13c-VWQ3sQqpJk+w6dIp+GOevA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            X-Powered-By:
              schema:
                type: string
              example: Sails <sailsjs.org>
            set-cookie:
              schema:
                type: string
                format: style
              example: >-
                sails.sid=s%3ABLL4pdGviFFKlBtMEU6RCLaYvX8ck6ay.nLssVON88D2O6Fi9ZqY8sgsW%2FJHFxf5SbYS2o8lP0Qk;
                Path=/; Expires=Thu, 15 Sep 2016 10:12:51 GMT; HttpOnly
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              example:
                error:
                  name: paramMissingError
                  message: Parameter is missing in the request.
                  details:
                    param: user_id
          description: >-
            400 - Token is invalid and user_id missing[Consider removing user_id
            altogether as endpoint is functional without it]
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:38:54 GMT'
            Content-Length:
              schema:
                type: integer
              example: 117
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=36ac3ae3cc0afdf6
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7c69745265a027d2
            ETag:
              schema:
                type: string
              example: W/"75-Cizc1ffCIn/F0sLOTDA7Gg"
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
                          owner:
                            type: string
                            format: color
                          message:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: forbiddenError
                      message: You are not permitted to perform the action.
                      details:
                        model: integration
                        model_id: '2631'
                        owner: '508348'
                        message: >-
                          You do not have appropriate permissions to perform
                          this action.
                Example2:
                  value:
                    error:
                      name: authenticationError
                      message: You are not authenticated by the server.
          description: 403 - Request to fetch an integration not owned by you
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:53:08 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=67132e77ba4776ca
            x-srv-span:
              schema:
                type: string
              example: v=1;s=52a45f55929e062b
            ETag:
              schema:
                type: string
              example: W/"5d-IeocWkChUU2c66iZCZlhLw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: color
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '999999'
                    owner: '508348'
          description: 404 - Attempt to fetch an integration that does not exist
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 26 May 2020 06:36:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=f3472d8423a7a8b9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=f13a046f613320f8
            ETag:
              schema:
                type: string
              example: W/"b3-H70d0jpru7rCBiTdLlUyHA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /integration/{integrationId}/relations:
    get:
      tags:
        - Integrations
        - Integrations Internal
      summary: Fetch Relations of an Integration
      description: >-
        This endpoint is primarily used for Schema Sync integrations, to fetch
        `apiversion_github` integrations related to the given `api_github`
        integration.
      parameters:
        - name: integrationId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    format: utc-millisec
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - createdBy
                        - lastUpdatedBy
                        - id
                        - rule
                        - entity
                        - executor
                        - name
                        - variables
                        - createdAt
                        - updatedAt
                      properties:
                        createdBy:
                          type: string
                          format: color
                        lastUpdatedBy:
                          type: string
                          format: color
                        id:
                          type: integer
                        rule:
                          type: string
                        entity:
                          type: string
                        executor:
                          type: string
                        name:
                          type: string
                        variables:
                          type: object
                          required:
                            - directory
                            - filename
                            - branch
                            - source
                            - api
                            - name
                          properties:
                            directory:
                              type: string
                            filename:
                              type: string
                            branch:
                              type: string
                            source:
                              type: string
                            api:
                              type: string
                            name:
                              type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              example:
                model_id: '2636'
                meta:
                  model: integration
                  action: findRelations
                data:
                  - createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3243
                    rule: apiversion_github
                    entity: apiversion
                    executor: 2bc2be9d-02d4-46fb-aafe-7cdafbb6100f
                    name: 0.0.1 to Schema Sync/0.0.1.json
                    variables:
                      directory: Schema Sync
                      filename: 0.0.1.json
                      branch: development
                      source: postman
                      api: 3f49b13c-2979-493d-805d-c0a1bd76b90e
                      name: 0.0.1
                    createdAt: '2020-07-23T12:39:59.000Z'
                    updatedAt: '2020-07-23T12:39:59.000Z'
          description: 200 OK
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:32:11 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: close
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=7d70448bc399f2c1
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7390cd0ea7a4f528
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"20e-VD3/jJ5bF3KB3zWr+8dEZw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '2363'
                    owner: '485374'
          description: 404 - Integration not found
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:45:59 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: close
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=a4699a7e5adfac68
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7fe6f9c48b5a3f7d
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"b1-xXLITk9yHO+/ANNZ61KX1w"
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /integration/actions:
    post:
      tags:
        - Integrations
        - Integrations Internal
      summary: Actions before the integration is created (using request payload)
      description: >-
        Integration actions are performed based on the request payload.

        The response of this API is determined by integration authors and is
        different for different action `type`s.


        This is mainly used in the create flow of integrations, where the
        integration does not exist yet in the db


        More information about this endpoint can be found
        [here](https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/3200974888/Integration%2Bs%2BActions%2BEndpoint).
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rule:
                  type: string
                type:
                  type: string
            example:
              rule: >-
                this denotes the integration rule on which the action needs to
                be performed, e.g. aws_api_gateway
              type: 'this denotes the action type, e.g. fetchAWSGatewayAPIs'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  Items:
                    type: array
                    items:
                      type: object
              example:
                Items:
                  - ApiEndpoint: 'https://0j84kn40f1.execute-api.us-east-1.amazonaws.com'
                    ApiId: xxx
                    ApiKeySelectionExpression: $request.header.x-api-key
                    CreatedDate: '2020-06-17T09:17:54.000Z'
                    Description: API Gateway created by postman
                    Name: test new
                    ProtocolType: HTTP
                    RouteSelectionExpression: $request.method $request.path
                    Tags: {}
                    Version: '0.3'
                  - ApiEndpoint: 'https://1an0z3x36e.execute-api.us-east-1.amazonaws.com'
                    ApiId: xxxxx
                    ApiKeySelectionExpression: $request.header.x-api-key
                    CreatedDate: '2020-06-15T07:06:31.000Z'
                    Description: API Documentation for managing Schema
                    Name: 'Schema Service #reference--test-new-api-creation'
                    ProtocolType: HTTP
                    RouteSelectionExpression: $request.method $request.path
                    Tags: {}
                    Version: '1.0'
          description: 200 - awsGateway list of API Gateways
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 28 Jul 2020 16:51:25 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=0bb788a924742b78
            x-srv-span:
              schema:
                type: string
              example: v=1;s=4f696c1e9f0ab80b
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"42a1-A53QiVxqTjWuTbxicl1KVA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - code
                          - hostname
                          - message
                          - originalError
                          - param
                          - region
                          - retryable
                          - rule
                          - time
                        properties:
                          param:
                            type: string
                          rule:
                            type: string
                          message:
                            type: string
                            format: style
                          code:
                            type: string
                          region:
                            type: string
                          hostname:
                            type: string
                          retryable:
                            type: boolean
                          originalError:
                            type: object
                            required:
                              - message
                              - errno
                              - code
                              - syscall
                              - hostname
                              - host
                              - port
                              - region
                              - retryable
                              - time
                            properties:
                              message:
                                type: string
                                format: style
                              errno:
                                type: string
                              code:
                                type: string
                              syscall:
                                type: string
                              hostname:
                                type: string
                              host:
                                type: string
                              port:
                                type: integer
                              region:
                                type: string
                              retryable:
                                type: boolean
                              time:
                                type: string
                                format: date-time
                          time:
                            type: string
                            format: date-time
                      title:
                        type: string
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example1:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format
                      details:
                        param: type
                Example2:
                  value:
                    error:
                      name: invalidRuleError
                      message: Rule specified doesn't exist
                      details:
                        rule: aws_api_gate
                Example3:
                  value:
                    error:
                      name: awsGatewayError
                      title: Invalid Region
                      message: Double check the AWS Region is correct.
                      details:
                        message: >-
                          Inaccessible host: `apigateway.us-east.amazonaws.com'.
                          This service may not be available in the `us-east'
                          region.
                        code: UnknownEndpoint
                        region: us-east
                        hostname: apigateway.us-east.amazonaws.com
                        retryable: true
                        originalError:
                          message: >-
                            getaddrinfo ENOTFOUND
                            apigateway.us-east.amazonaws.com
                            apigateway.us-east.amazonaws.com:443
                          errno: ENOTFOUND
                          code: NetworkingError
                          syscall: getaddrinfo
                          hostname: apigateway.us-east.amazonaws.com
                          host: apigateway.us-east.amazonaws.com
                          port: 443
                          region: us-east
                          retryable: true
                          time: '2020-07-28T17:00:09.960Z'
                        time: '2020-07-28T17:00:09.960Z'
                Example4:
                  value:
                    error:
                      name: awsGatewayError
                      title: Authentication Error
                      message: >-
                        Double check your AWS Credentials and AWS Region is
                        correct.
                      details: The security token included in the request is invalid.
                Example5:
                  value:
                    name: invalidOpsgenieAPIKeyFormat
                    message: The opsgenie key format is not valid.
          description: 400 - invalid type provided
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Tue, 28 Jul 2020 16:55:05 GMT'
            Content-Length:
              schema:
                type: integer
              example: 126
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=6c68ce86376c779e
            x-srv-span:
              schema:
                type: string
              example: v=1;s=0b76fd1c90297909
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"cf-a64XWd3et/vAEMWeffvr9w"
        '403':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/actionsBeforeTheIntegrationIsCreatedUsingRequestPayload403ResponseSubSchema
                  - type: object
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              examples:
                Example1:
                  value:
                    name: invalidOpsgenieAPIKey
                    message: The opsgenie key is not valid.
                Example2:
                  value:
                    requestId: 70712e44-98f5-4e2d-8935-ec9e6fdb65d4
                    result: Integration is valid
                    took: 0.002
          description: 400 - openGenieError invalid key (correct format)
  /integration/{integrationId}/actions:
    post:
      tags:
        - Integrations
        - Integrations Internal
      summary: Actions on Created Integration
      description: >-
        The response of this API is determined by integration authors and is
        different for different action `type`s. The response format will only be
        the same for a given integration rule (determined by the
        `integrationId`) and `type` combination.


        In the request payload, while the `type` is a compulsory parameter in
        general, certain action types could mandate more parameters.


        The response will always have the `model_id`, `meta` and `data` fields.
        However, the format of `data` is not fixed and is determined by the
        integration authors.


        More information about the endpoint can be found
        [here](https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/3200974888/Integration%2Bs%2BActions%2BEndpoint).
      parameters:
        - name: integrationId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
            example:
              type: fetchBranches
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    format: utc-millisec
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - activity_score
                        - allow_email_subscribers
                        - allow_incident_subscribers
                        - allow_page_subscribers
                        - allow_rss_atom_feeds
                        - allow_sms_subscribers
                        - allow_webhook_subscribers
                        - archived
                        - avatar_url
                        - branding
                        - can_push
                        - city
                        - clone_url
                        - commit
                        - country
                        - created_at
                        - created_on
                        - css_blues
                        - css_body_background_color
                        - css_border_color
                        - css_font_color
                        - css_graph_color
                        - css_greens
                        - css_light_font_color
                        - css_link_color
                        - css_no_data
                        - css_oranges
                        - css_reds
                        - css_yellows
                        - default
                        - default_branch
                        - default_merge_strategy
                        - description
                        - developers_can_merge
                        - developers_can_push
                        - disabled
                        - domain
                        - email_logo
                        - favicon_logo
                        - fork
                        - fork_policy
                        - forks
                        - forks_count
                        - forks_url
                        - full_name
                        - git_url
                        - has_downloads
                        - has_issues
                        - has_pages
                        - has_projects
                        - has_wiki
                        - headline
                        - hero_cover
                        - hidden_from_search
                        - homepage
                        - html_url
                        - http_url_to_repo
                        - id
                        - ip_restrictions
                        - is_private
                        - keys_url
                        - language
                        - last_activity_at
                        - license
                        - links
                        - mainbranch
                        - merge_strategies
                        - merged
                        - mirror_url
                        - name
                        - name_with_namespace
                        - namespace
                        - node_id
                        - notifications_email_footer
                        - notifications_from_email
                        - open_issues
                        - open_issues_count
                        - owner
                        - page_description
                        - path
                        - path_with_namespace
                        - private
                        - project
                        - protected
                        - protection
                        - protection_url
                        - pushed_at
                        - readme_url
                        - scm
                        - size
                        - slug
                        - ssh_url
                        - ssh_url_to_repo
                        - star_count
                        - stargazers_count
                        - state
                        - subdomain
                        - support_url
                        - svn_url
                        - tag_list
                        - target
                        - time_zone
                        - transactional_logo
                        - twitter_logo
                        - twitter_username
                        - type
                        - updated_at
                        - updated_on
                        - url
                        - uuid
                        - viewers_must_be_team_members
                        - watchers
                        - watchers_count
                        - web_url
                        - website
                        - workspace
                      properties:
                        scm:
                          type: string
                        website:
                          type: string
                          nullable: true
                        has_wiki:
                          type: boolean
                        uuid:
                          type: string
                        links:
                          type: object
                          required:
                            - commits
                            - self
                            - html
                          properties:
                            watchers:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            branches:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            tags:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            commits:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            clone:
                              type: array
                              items:
                                type: object
                            self:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            source:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            html:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            avatar:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            hooks:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            forks:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            downloads:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                            pullrequests:
                              type: object
                              required:
                                - href
                              properties:
                                href:
                                  type: string
                                  format: uri
                        fork_policy:
                          type: string
                        full_name:
                          type: string
                        name:
                          type: string
                        project:
                          type: object
                          required:
                            - links
                            - type
                            - name
                            - key
                            - uuid
                          properties:
                            links:
                              type: object
                              required:
                                - self
                                - html
                                - avatar
                              properties:
                                self:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                html:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                avatar:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                            type:
                              type: string
                            name:
                              type: string
                            key:
                              type: string
                            uuid:
                              type: string
                        language:
                          type: string
                        created_on:
                          type: string
                          format: date-time
                        mainbranch:
                          type: object
                          required:
                            - type
                            - name
                          properties:
                            type:
                              type: string
                            name:
                              type: string
                        workspace:
                          type: object
                          required:
                            - slug
                            - type
                            - name
                            - links
                            - uuid
                          properties:
                            slug:
                              type: string
                            type:
                              type: string
                            name:
                              type: string
                            links:
                              type: object
                              required:
                                - self
                                - html
                                - avatar
                              properties:
                                self:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                html:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                avatar:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                            uuid:
                              type: string
                        has_issues:
                          type: boolean
                        owner:
                          type: object
                          required:
                            - type
                          properties:
                            username:
                              type: string
                            display_name:
                              type: string
                            type:
                              type: string
                            uuid:
                              type: string
                            links:
                              type: object
                              required:
                                - self
                                - html
                                - avatar
                              properties:
                                self:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                html:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                avatar:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                            login:
                              type: string
                            id:
                              type: integer
                            node_id:
                              type: string
                            avatar_url:
                              type: string
                              format: uri
                            gravatar_id:
                              type: string
                            url:
                              type: string
                              format: uri
                            html_url:
                              type: string
                              format: uri
                            followers_url:
                              type: string
                              format: uri
                            following_url:
                              type: string
                              format: uri
                            gists_url:
                              type: string
                              format: uri
                            starred_url:
                              type: string
                              format: uri
                            subscriptions_url:
                              type: string
                              format: uri
                            organizations_url:
                              type: string
                              format: uri
                            repos_url:
                              type: string
                              format: uri
                            events_url:
                              type: string
                              format: uri
                            received_events_url:
                              type: string
                              format: uri
                            site_admin:
                              type: boolean
                        updated_on:
                          type: string
                          format: date-time
                        size:
                          type: integer
                        type:
                          type: string
                        slug:
                          type: string
                        is_private:
                          type: boolean
                        description:
                          type: string
                        default_merge_strategy:
                          type: string
                        merge_strategies:
                          type: array
                          items:
                            type: string
                        target:
                          type: object
                          required:
                            - hash
                            - repository
                            - links
                            - author
                            - parents
                            - date
                            - message
                            - type
                          properties:
                            hash:
                              type: string
                            repository:
                              type: object
                              required:
                                - links
                                - type
                                - name
                                - full_name
                                - uuid
                              properties:
                                links:
                                  type: object
                                  required:
                                    - self
                                    - html
                                    - avatar
                                  properties:
                                    self:
                                      type: object
                                      required:
                                        - href
                                      properties:
                                        href:
                                          type: string
                                          format: uri
                                    html:
                                      type: object
                                      required:
                                        - href
                                      properties:
                                        href:
                                          type: string
                                          format: uri
                                    avatar:
                                      type: object
                                      required:
                                        - href
                                      properties:
                                        href:
                                          type: string
                                          format: uri
                                type:
                                  type: string
                                name:
                                  type: string
                                full_name:
                                  type: string
                                uuid:
                                  type: string
                            links:
                              type: object
                              required:
                                - self
                                - comments
                                - patch
                                - html
                                - diff
                                - approve
                                - statuses
                              properties:
                                self:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                comments:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                patch:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                html:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                diff:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                approve:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                                statuses:
                                  type: object
                                  required:
                                    - href
                                  properties:
                                    href:
                                      type: string
                                      format: uri
                            author:
                              type: object
                              required:
                                - raw
                                - type
                                - user
                              properties:
                                raw:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: object
                                  required:
                                    - display_name
                                    - uuid
                                    - links
                                    - type
                                    - nickname
                                    - account_id
                                  properties:
                                    display_name:
                                      type: string
                                    uuid:
                                      type: string
                                    links:
                                      type: object
                                      required:
                                        - self
                                        - html
                                        - avatar
                                      properties:
                                        self:
                                          type: object
                                          required:
                                            - href
                                          properties:
                                            href:
                                              type: string
                                              format: uri
                                        html:
                                          type: object
                                          required:
                                            - href
                                          properties:
                                            href:
                                              type: string
                                              format: uri
                                        avatar:
                                          type: object
                                          required:
                                            - href
                                          properties:
                                            href:
                                              type: string
                                              format: uri
                                    type:
                                      type: string
                                    nickname:
                                      type: string
                                    account_id:
                                      type: string
                            parents:
                              type: array
                              items:
                                type: object
                                required:
                                  - hash
                                  - type
                                  - links
                                properties:
                                  hash:
                                    type: string
                                  type:
                                    type: string
                                  links:
                                    type: object
                                    required:
                                      - self
                                      - html
                                    properties:
                                      self:
                                        type: object
                                        required:
                                          - href
                                        properties:
                                          href:
                                            type: string
                                            format: uri
                                      html:
                                        type: object
                                        required:
                                          - href
                                        properties:
                                          href:
                                            type: string
                                            format: uri
                            date:
                              type: string
                              format: date-time
                            message:
                              type: string
                            type:
                              type: string
                        id:
                          type: integer
                        node_id:
                          type: string
                        private:
                          type: boolean
                        html_url:
                          type: string
                          format: uri
                        fork:
                          type: boolean
                        url:
                          type: string
                          format: uri
                          nullable: true
                        forks_url:
                          type: string
                          format: uri
                        keys_url:
                          type: string
                          format: uri
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        pushed_at:
                          type: string
                          format: date-time
                        git_url:
                          type: string
                          format: uri
                        ssh_url:
                          type: string
                          format: style
                        clone_url:
                          type: string
                          format: uri
                        svn_url:
                          type: string
                          format: uri
                        homepage:
                          type: string
                          format: uri
                        stargazers_count:
                          type: integer
                        watchers_count:
                          type: integer
                        has_projects:
                          type: boolean
                        has_downloads:
                          type: boolean
                        has_pages:
                          type: boolean
                        forks_count:
                          type: integer
                        mirror_url:
                          type: string
                          nullable: true
                        archived:
                          type: boolean
                        disabled:
                          type: boolean
                        open_issues_count:
                          type: integer
                        license:
                          type: object
                          required:
                            - key
                            - name
                            - spdx_id
                            - url
                            - node_id
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            spdx_id:
                              type: string
                            url:
                              type: string
                              format: uri
                            node_id:
                              type: string
                        forks:
                          type: integer
                        open_issues:
                          type: integer
                        watchers:
                          type: integer
                        default_branch:
                          type: string
                          nullable: true
                        commit:
                          type: object
                          required:
                            - author_email
                            - author_name
                            - authored_date
                            - committed_date
                            - committer_email
                            - committer_name
                            - created_at
                            - id
                            - message
                            - parent_ids
                            - sha
                            - short_id
                            - title
                            - url
                            - web_url
                          properties:
                            sha:
                              type: string
                            url:
                              type: string
                              format: uri
                            id:
                              type: string
                            short_id:
                              type: string
                            created_at:
                              type: string
                              format: date-time
                            parent_ids:
                              type: string
                              nullable: true
                            title:
                              type: string
                            message:
                              type: string
                            author_name:
                              type: string
                            author_email:
                              type: string
                            authored_date:
                              type: string
                              format: date-time
                            committer_name:
                              type: string
                            committer_email:
                              type: string
                              format: email
                            committed_date:
                              type: string
                              format: date-time
                            web_url:
                              type: string
                              format: uri
                        protected:
                          type: boolean
                        protection:
                          type: object
                          required:
                            - enabled
                            - required_status_checks
                          properties:
                            enabled:
                              type: boolean
                            required_status_checks:
                              type: object
                              required:
                                - enforcement_level
                                - contexts
                              properties:
                                enforcement_level:
                                  type: string
                                contexts:
                                  type: array
                                  items:
                                    type: string
                        protection_url:
                          type: string
                          format: uri
                        name_with_namespace:
                          type: string
                        path:
                          type: string
                        path_with_namespace:
                          type: string
                        tag_list:
                          type: array
                          items:
                            type: object
                        ssh_url_to_repo:
                          type: string
                          format: style
                        http_url_to_repo:
                          type: string
                          format: uri
                        web_url:
                          type: string
                          format: uri
                        readme_url:
                          type: string
                          nullable: true
                        avatar_url:
                          type: string
                          nullable: true
                        star_count:
                          type: integer
                        last_activity_at:
                          type: string
                          format: date-time
                        namespace:
                          type: object
                          required:
                            - id
                            - name
                            - path
                            - kind
                            - full_path
                            - parent_id
                            - avatar_url
                            - web_url
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            path:
                              type: string
                            kind:
                              type: string
                            full_path:
                              type: string
                            parent_id:
                              type: string
                              nullable: true
                            avatar_url:
                              type: string
                              format: uri
                            web_url:
                              type: string
                              format: uri
                        merged:
                          type: boolean
                        developers_can_push:
                          type: boolean
                        developers_can_merge:
                          type: boolean
                        can_push:
                          type: boolean
                        default:
                          type: boolean
                        page_description:
                          type: string
                          nullable: true
                        headline:
                          type: string
                          nullable: true
                        branding:
                          type: string
                        subdomain:
                          type: string
                        domain:
                          type: string
                          nullable: true
                        support_url:
                          type: string
                          nullable: true
                        hidden_from_search:
                          type: boolean
                        allow_page_subscribers:
                          type: boolean
                        allow_incident_subscribers:
                          type: boolean
                        allow_email_subscribers:
                          type: boolean
                        allow_sms_subscribers:
                          type: boolean
                        allow_rss_atom_feeds:
                          type: boolean
                        allow_webhook_subscribers:
                          type: boolean
                        notifications_from_email:
                          type: string
                          nullable: true
                        notifications_email_footer:
                          type: string
                        activity_score:
                          type: integer
                        twitter_username:
                          type: string
                          nullable: true
                        viewers_must_be_team_members:
                          type: boolean
                        ip_restrictions:
                          type: string
                          nullable: true
                        city:
                          type: string
                          nullable: true
                        state:
                          type: string
                          nullable: true
                        country:
                          type: string
                          nullable: true
                        time_zone:
                          type: string
                        css_body_background_color:
                          type: string
                          format: color
                        css_font_color:
                          type: string
                          format: color
                        css_light_font_color:
                          type: string
                          format: color
                        css_greens:
                          type: string
                          format: color
                        css_yellows:
                          type: string
                          format: color
                        css_oranges:
                          type: string
                          format: color
                        css_blues:
                          type: string
                          format: color
                        css_reds:
                          type: string
                          format: color
                        css_border_color:
                          type: string
                          format: color
                        css_graph_color:
                          type: string
                          format: color
                        css_link_color:
                          type: string
                          format: color
                        css_no_data:
                          type: string
                          format: color
                        favicon_logo:
                          type: object
                          required:
                            - updated_at
                            - size
                            - url
                          properties:
                            updated_at:
                              type: string
                              nullable: true
                            size:
                              type: string
                              nullable: true
                            url:
                              type: string
                        transactional_logo:
                          type: object
                          required:
                            - updated_at
                            - original_url
                            - size
                            - normal_url
                            - retina_url
                          properties:
                            updated_at:
                              type: string
                              nullable: true
                            original_url:
                              type: string
                            size:
                              type: string
                              nullable: true
                            normal_url:
                              type: string
                            retina_url:
                              type: string
                        hero_cover:
                          type: object
                          required:
                            - updated_at
                            - original_url
                            - size
                            - normal_url
                            - retina_url
                          properties:
                            updated_at:
                              type: string
                              nullable: true
                            original_url:
                              type: string
                            size:
                              type: string
                              nullable: true
                            normal_url:
                              type: string
                            retina_url:
                              type: string
                        email_logo:
                          type: object
                          required:
                            - updated_at
                            - original_url
                            - size
                            - normal_url
                            - retina_url
                          properties:
                            updated_at:
                              type: string
                              nullable: true
                            original_url:
                              type: string
                            size:
                              type: string
                              nullable: true
                            normal_url:
                              type: string
                            retina_url:
                              type: string
                        twitter_logo:
                          type: object
                          required:
                            - updated_at
                            - size
                            - url
                          properties:
                            updated_at:
                              type: string
                              nullable: true
                            size:
                              type: string
                              nullable: true
                            url:
                              type: string
              examples:
                Example1:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - ApiEndpoint: 'https://07wi0o14z0.execute-api.us-east-1.amazonaws.com'
                        ApiId: 07wi0o14z0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-02T17:10:44.000Z'
                        Description: API Gateway created by postman
                        Name: Petstore
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://0j84kn40f1.execute-api.us-east-1.amazonaws.com'
                        ApiId: 0j84kn40f1
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-17T09:17:54.000Z'
                        Description: API Gateway created by postman
                        Name: <img src=c>
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: <img src=c>
                      - ApiEndpoint: 'https://12ileghkic.execute-api.us-east-1.amazonaws.com'
                        ApiId: 12ileghkic
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:59:24.000Z'
                        Description: API Gateway created by postman
                        Name: checking some
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://1an0z3x36e.execute-api.us-east-1.amazonaws.com'
                        ApiId: 1an0z3x36e
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-15T07:06:31.000Z'
                        Description: API Documentation for managing Schema
                        Name: Simple API overview
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 2.0.3
                      - ApiEndpoint: 'https://1yl4me36j3.execute-api.us-east-1.amazonaws.com'
                        ApiId: 1yl4me36j3
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-21T08:46:48.000Z'
                        Description: API Gateway created by postman
                        Name: ''';top[''ale''+''rt''](top[''doc''+''ument''][''dom''+''ain'']);//'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.2.0
                      - ApiEndpoint: 'https://23e5sjv3b2.execute-api.us-east-1.amazonaws.com'
                        ApiId: 23e5sjv3b2
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-20T13:25:29.000Z'
                        Description: API Gateway created by postman
                        Name: newwww
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://39w7ivbz77.execute-api.us-east-1.amazonaws.com'
                        ApiId: 39w7ivbz77
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:58:02.000Z'
                        Description: API Gateway created by postman
                        Name: midnight api
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://3x1qz8jiy8.execute-api.us-east-1.amazonaws.com'
                        ApiId: 3x1qz8jiy8
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:57:20.000Z'
                        Description: API Gateway created by postman
                        Name: test api 02
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://44jnbwazxj.execute-api.us-east-1.amazonaws.com'
                        ApiId: 44jnbwazxj
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-25T05:32:09.000Z'
                        Description: asdf
                        Name: OpenWeasdftherMap API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags:
                          Current Weather Data: ''
                        Version: '2.5'
                      - ApiEndpoint: 'https://4583aop491.execute-api.us-east-1.amazonaws.com'
                        ApiId: 4583aop491
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T10:40:21.000Z'
                        Description: API Gateway created by postman
                        Name: Anand's New API is here to stay now or never
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.2
                      - ApiEndpoint: 'https://4o5h65n8u3.execute-api.us-east-1.amazonaws.com'
                        ApiId: 4o5h65n8u3
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:16:10.000Z'
                        Description: API Gateway created by postman
                        Name: V8
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://4tm2gtqju2.execute-api.us-east-1.amazonaws.com'
                        ApiId: 4tm2gtqju2
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:03:40.000Z'
                        Description: API Gateway created by postman
                        Name: Test
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 3.0.0
                      - ApiEndpoint: 'https://58olg0fuhh.execute-api.us-east-1.amazonaws.com'
                        ApiId: 58olg0fuhh
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-18T17:30:22.000Z'
                        Description: API Documentation for managing Schema
                        Name: One
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.1.1
                      - ApiEndpoint: 'https://5mhxy3633e.execute-api.us-east-1.amazonaws.com'
                        ApiId: 5mhxy3633e
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T08:23:08.000Z'
                        Description: API Gateway created by postman
                        Name: Swagger Petstore---2
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://5na1i8k0n4.execute-api.us-east-1.amazonaws.com'
                        ApiId: 5na1i8k0n4
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T09:12:39.000Z'
                        Description: API Gateway created by postman
                        Name: F1
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://5x15bd56h2.execute-api.us-east-1.amazonaws.com'
                        ApiId: 5x15bd56h2
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:38:08.000Z'
                        Description: API Gateway created by postman
                        Name: V8 Abhishek
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://6e0j20nd1k.execute-api.us-east-1.amazonaws.com'
                        ApiId: 6e0j20nd1k
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T11:06:47.000Z'
                        Description: API Gateway created by postman
                        Name: tessst
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://728cc1034g.execute-api.us-east-1.amazonaws.com'
                        ApiId: 728cc1034g
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-05-28T07:43:13.000Z'
                        Description: Created by AWS Lambda
                        Name: 5h4d0wr007-securitytest-github-API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://750g6wr6ll.execute-api.us-east-1.amazonaws.com'
                        ApiId: 750g6wr6ll
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-15T14:59:03.000Z'
                        Description: API Gateway created by postman
                        Name: Inventorys
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://7eqd90zepe.execute-api.us-east-1.amazonaws.com'
                        ApiId: 7eqd90zepe
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:35:35.000Z'
                        Description: API Gateway created by postman
                        Name: midnight api
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://7h7tndi4v1.execute-api.us-east-1.amazonaws.com'
                        ApiId: 7h7tndi4v1
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-17T09:30:39.000Z'
                        Description: API Gateway created by postman
                        Name: ibiubiub
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 9898hrtgh
                      - ApiEndpoint: 'https://7n9gmd39dd.execute-api.us-east-1.amazonaws.com'
                        ApiId: 7n9gmd39dd
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-05-04T06:19:29.000Z'
                        Description: Created by AWS Lambda
                        Name: anubhav-learning-apis-API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://7sls15z10f.execute-api.us-east-1.amazonaws.com'
                        ApiId: 7sls15z10f
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T06:57:51.000Z'
                        Description: API Gateway created by postman
                        Name: 'testing aws api gateway. #ManualEntry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://8f1y8r9d56.execute-api.us-east-1.amazonaws.com'
                        ApiId: 8f1y8r9d56
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-28T13:57:46.000Z'
                        Description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman
                        Name: ibiubiub
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '9898'
                      - ApiEndpoint: 'https://8l1fdfytx7.execute-api.us-east-1.amazonaws.com'
                        ApiId: 8l1fdfytx7
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:03:46.000Z'
                        Description: API Gateway created by postman
                        Name: Demo day testing finalized
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1.0'
                      - ApiEndpoint: 'https://9syjxtgtj0.execute-api.us-east-1.amazonaws.com'
                        ApiId: 9syjxtgtj0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T12:31:45.000Z'
                        Description: API Gateway created by postman
                        Name: V8 Title change
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://9u067eql2j.execute-api.us-east-1.amazonaws.com'
                        ApiId: 9u067eql2j
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T09:00:54.000Z'
                        Description: API Gateway created by postman
                        Name: Inventorys
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://9uo8w1wn65.execute-api.us-east-1.amazonaws.com'
                        ApiId: 9uo8w1wn65
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T09:13:31.000Z'
                        Description: API Gateway created by postman
                        Name: petstore merge logic testing
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://a12nm8os6e.execute-api.us-east-1.amazonaws.com'
                        ApiId: a12nm8os6e
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T06:21:37.000Z'
                        Description: API Gateway created by postman
                        Name: testing gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://a1a38wd6yl.execute-api.us-east-1.amazonaws.com'
                        ApiId: a1a38wd6yl
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T06:49:26.000Z'
                        Description: API Gateway created by postman
                        Name: V8
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://admirwimn9.execute-api.us-east-1.amazonaws.com'
                        ApiId: admirwimn9
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-22T19:06:11.000Z'
                        Description: API Gateway created by postman
                        Name: One more
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.1
                      - ApiEndpoint: 'https://akrnxh2uk6.execute-api.us-east-1.amazonaws.com'
                        ApiId: akrnxh2uk6
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-28T05:07:15.000Z'
                        Description: API Gateway created by postman
                        Name: tessst
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://au1s7uu752.execute-api.us-east-1.amazonaws.com'
                        ApiId: au1s7uu752
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:26:32.000Z'
                        Description: API Gateway created by postman
                        Name: Dummy API for V8
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://b0qqfk1566.execute-api.us-east-1.amazonaws.com'
                        ApiId: b0qqfk1566
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-05T09:30:26.000Z'
                        Description: API Gateway created by postman
                        Name: testing-manual-input-gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://bb290vryb0.execute-api.us-east-1.amazonaws.com'
                        ApiId: bb290vryb0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-20T12:59:47.000Z'
                        Description: API Gateway created by postman
                        Name: testing new api gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://bj0jj057pk.execute-api.us-east-1.amazonaws.com'
                        ApiId: bj0jj057pk
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-05-29T07:35:38.000Z'
                        Description: Created by AWS Lambda
                        Name: 5h4d0wr007-securitytest-github-API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://c60h8fzhw4.execute-api.us-east-1.amazonaws.com'
                        ApiId: c60h8fzhw4
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-20T13:01:51.000Z'
                        Description: API Gateway created by postman
                        Name: testing gateways for bug
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://cecql795nd.execute-api.us-east-1.amazonaws.com'
                        ApiId: cecql795nd
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:13:31.000Z'
                        Description: API Gateway created by postman
                        Name: test#manual
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://cs6odcc5p3.execute-api.us-east-1.amazonaws.com'
                        ApiId: cs6odcc5p3
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:04:58.000Z'
                        Description: API Gateway created by postman
                        Name: Dummy API for V8
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://cspuizeli5.execute-api.us-east-1.amazonaws.com'
                        ApiId: cspuizeli5
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:09:07.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://duqdsibl2g.execute-api.us-east-1.amazonaws.com'
                        ApiId: duqdsibl2g
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CorsConfiguration:
                          AllowCredentials: true
                          AllowMethods:
                            - GET
                          MaxAge: 7
                        CreatedDate: '2020-06-17T09:28:38.000Z'
                        Description: API Documentation for managing Schema
                        Name: AWS-preserver-all-integrations
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://e8r80t8262.execute-api.us-east-1.amazonaws.com'
                        ApiId: e8r80t8262
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T08:27:17.000Z'
                        Description: API Gateway created by postman
                        Name: Inventory
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://ehgeomsfug.execute-api.us-east-1.amazonaws.com'
                        ApiId: ehgeomsfug
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T11:19:29.000Z'
                        Description: API Gateway created by postman
                        Name: test api 02
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://f5u9sfyym0.execute-api.us-east-1.amazonaws.com'
                        ApiId: f5u9sfyym0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:54:44.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual-entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://fcffa4xd1e.execute-api.us-east-1.amazonaws.com'
                        ApiId: fcffa4xd1e
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-20T13:15:29.000Z'
                        Description: API Gateway created by postman
                        Name: testing gateways for bug
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://fqshs4r01j.execute-api.us-east-1.amazonaws.com'
                        ApiId: fqshs4r01j
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:40:50.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://fxaxeclif8.execute-api.us-east-1.amazonaws.com'
                        ApiId: fxaxeclif8
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-10T10:26:54.000Z'
                        Description: API Documentation for managing Schema
                        Name: 'Schema Service #reference--test-new-api-creation'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1.0'
                      - ApiEndpoint: 'https://fyjyakwbrj.execute-api.us-east-1.amazonaws.com'
                        ApiId: fyjyakwbrj
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-11-27T07:48:37.000Z'
                        Name: Test2
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1.1'
                      - ApiEndpoint: 'https://g9sstmj9x2.execute-api.us-east-1.amazonaws.com'
                        ApiId: g9sstmj9x2
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:32:41.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://goftkvp41c.execute-api.us-east-1.amazonaws.com'
                        ApiId: goftkvp41c
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T12:32:42.000Z'
                        Description: API Gateway created by postman
                        Name: Nishant-test
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://h2tsi3q3qa.execute-api.us-east-1.amazonaws.com'
                        ApiId: h2tsi3q3qa
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-30T12:06:41.000Z'
                        Description: API Gateway created by postman
                        Name: new API 1.0.9
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://hhx33xiagf.execute-api.us-east-1.amazonaws.com'
                        ApiId: hhx33xiagf
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-17T09:36:00.000Z'
                        Description: API Gateway created by postman
                        Name: Simple Ecommerce
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://icluqlb2rf.execute-api.us-east-1.amazonaws.com'
                        ApiId: icluqlb2rf
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-17T09:21:22.000Z'
                        Description: API Gateway created by postman
                        Name: midnight api
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://if3zznad2e.execute-api.us-east-1.amazonaws.com'
                        ApiId: if3zznad2e
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-10T10:17:00.000Z'
                        Description: API Documentation for managing Schema
                        Name: 'Schema Service #reference--test-new-api-creation'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1.0'
                      - ApiEndpoint: 'https://igqv8jsnnb.execute-api.us-east-1.amazonaws.com'
                        ApiId: igqv8jsnnb
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:07:58.000Z'
                        Description: API Gateway created by postman
                        Name: test#manual
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://ii2xp006wf.execute-api.us-east-1.amazonaws.com'
                        ApiId: ii2xp006wf
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-11T05:54:26.000Z'
                        Description: API Documentation for managing Schema
                        Name: 'Schema Service #reference--test-new-api-creation'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1.0'
                      - ApiEndpoint: 'https://iwnwqnwegg.execute-api.us-east-1.amazonaws.com'
                        ApiId: iwnwqnwegg
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T10:42:40.000Z'
                        Description: API Gateway created by postman
                        Name: Manually created api gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://jtxl8szs3f.execute-api.us-east-1.amazonaws.com'
                        ApiId: jtxl8szs3f
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-07-16T19:04:54.000Z'
                        Description: API Gateway created by postman
                        Name: Swagger PET
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://kg02yd1evh.execute-api.us-east-1.amazonaws.com'
                        ApiId: kg02yd1evh
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:03:31.000Z'
                        Description: API Gateway created by postman
                        Name: Dummy API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://kjdkgtmd7i.execute-api.us-east-1.amazonaws.com'
                        ApiId: kjdkgtmd7i
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-11-10T12:17:47.000Z'
                        Description: API Gateway created by postman
                        Name: Inventory
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://kpv44h1crj.execute-api.us-east-1.amazonaws.com'
                        ApiId: kpv44h1crj
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-26T15:06:26.000Z'
                        Description: API Gateway created by postman
                        Name: test-schema-trigger
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://ktecmc3za0.execute-api.us-east-1.amazonaws.com'
                        ApiId: ktecmc3za0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CorsConfiguration:
                          AllowCredentials: false
                          AllowHeaders:
                            - content-type
                            - x-amz-date
                            - authorization
                            - x-api-key
                            - x-amz-security-token
                          AllowMethods:
                            - OPTIONS
                            - POST
                          AllowOrigins:
                            - '*'
                          MaxAge: 36000
                        CreatedDate: '2020-07-29T08:19:51.000Z'
                        Name: SendHarvestedData
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://l1t69dzpa3.execute-api.us-east-1.amazonaws.com'
                        ApiId: l1t69dzpa3
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-08T11:03:15.000Z'
                        Description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman
                        Name: Simple Ecommerce
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://l7wser5771.execute-api.us-east-1.amazonaws.com'
                        ApiId: l7wser5771
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:35:42.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://lwjfo11v99.execute-api.us-east-1.amazonaws.com'
                        ApiId: lwjfo11v99
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T09:43:27.000Z'
                        Description: API Gateway created by postman
                        Name: 'Imported on 2020-06-29T07:51:43Z'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://lwq4ucbvlk.execute-api.us-east-1.amazonaws.com'
                        ApiId: lwq4ucbvlk
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-01T13:06:54.000Z'
                        Description: API Gateway created by postman
                        Name: Petstore
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://mojdz5p0nl.execute-api.us-east-1.amazonaws.com'
                        ApiId: mojdz5p0nl
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:49:21.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual-entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://mwjfpq1nwc.execute-api.us-east-1.amazonaws.com'
                        ApiId: mwjfpq1nwc
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:04:09.000Z'
                        Description: API Gateway created by postman
                        Name: testing integration flow gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://mxg7fdteeb.execute-api.us-east-1.amazonaws.com'
                        ApiId: mxg7fdteeb
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:57:12.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual-entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://o6qptv53t0.execute-api.us-east-1.amazonaws.com'
                        ApiId: o6qptv53t0
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-07-06T06:32:30.000Z'
                        Description: API Gateway created by postman
                        Name: test new
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '0.1'
                      - ApiEndpoint: 'https://p6xp48ammf.execute-api.us-east-1.amazonaws.com'
                        ApiId: p6xp48ammf
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T06:58:00.000Z'
                        Description: API Gateway created by postman
                        Name: 'testing aws api gateway. #ManualEntry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://pb74o7l21f.execute-api.us-east-1.amazonaws.com'
                        ApiId: pb74o7l21f
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-11T10:57:55.000Z'
                        Description: string
                        Name: Alekhyas api
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: '1'
                      - ApiEndpoint: 'https://q9h8iboyce.execute-api.us-east-1.amazonaws.com'
                        ApiId: q9h8iboyce
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T06:40:48.000Z'
                        Description: API Gateway created by postman
                        Name: 'testing aws api gateway. #ManualEntry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://s80rfox60h.execute-api.us-east-1.amazonaws.com'
                        ApiId: s80rfox60h
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-25T05:38:30.000Z'
                        Description: API Gateway created by postman
                        Name: yml-schema
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: beta
                      - ApiEndpoint: 'https://sk0mi1f140.execute-api.us-east-1.amazonaws.com'
                        ApiId: sk0mi1f140
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-12T09:40:04.000Z'
                        Name: artemis-downloaded-API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://sq4e04w8db.execute-api.us-east-1.amazonaws.com'
                        ApiId: sq4e04w8db
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-21T08:35:37.000Z'
                        Description: API Gateway created by postman
                        Name: 'new integration '
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://t18xrxlt6i.execute-api.us-east-1.amazonaws.com'
                        ApiId: t18xrxlt6i
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-05-11T07:00:53.000Z'
                        Description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman
                        Name: SimpleKart E-commerce API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://t1s5eykgr2.execute-api.us-east-1.amazonaws.com'
                        ApiId: t1s5eykgr2
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-15T17:26:59.000Z'
                        Description: API Gateway created by postman
                        Name: gateway#beta
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://ti9myzxdpd.execute-api.us-east-1.amazonaws.com'
                        ApiId: ti9myzxdpd
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-19T09:42:49.000Z'
                        Name: My-aws-gateway
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://u2sw9f7e4b.execute-api.us-east-1.amazonaws.com'
                        ApiId: u2sw9f7e4b
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:42:51.000Z'
                        Description: API Gateway created by postman
                        Name: '#newentry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://u4xug650tg.execute-api.us-east-1.amazonaws.com'
                        ApiId: u4xug650tg
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-11T10:56:33.000Z'
                        Description: API Gateway created by postman
                        Name: Inventory
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://uwy22v1ucf.execute-api.us-east-1.amazonaws.com'
                        ApiId: uwy22v1ucf
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-20T13:15:36.000Z'
                        Description: API Gateway created by postman
                        Name: testing gateways for bug
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://v0267tsc48.execute-api.us-east-1.amazonaws.com'
                        ApiId: v0267tsc48
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:40:59.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://v6ywqykuw6.execute-api.us-east-1.amazonaws.com'
                        ApiId: v6ywqykuw6
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CorsConfiguration:
                          AllowCredentials: false
                          AllowHeaders:
                            - '*'
                          AllowMethods:
                            - GET
                            - OPTIONS
                          AllowOrigins:
                            - '*'
                          MaxAge: 0
                        CreatedDate: '2020-09-15T03:28:31.000Z'
                        Description: Created by AWS Lambda
                        Name: api-dev-code-badge-API
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags:
                          resource-name: api-gateway
                          resource-env: playground
                          resource-group: code-badge
                          resource-domain: api-dev-platform
                      - ApiEndpoint: 'https://vkp754006l.execute-api.us-east-1.amazonaws.com'
                        ApiId: vkp754006l
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T10:49:09.000Z'
                        Description: API Gateway created by postman
                        Name: Swagger Petstore
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://vl8nx1zzy8.execute-api.us-east-1.amazonaws.com'
                        ApiId: vl8nx1zzy8
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-15T07:13:33.000Z'
                        Description: API Gateway created by postman
                        Name: Inventory
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 1.0.0
                      - ApiEndpoint: 'https://vw7sjrral9.execute-api.us-east-1.amazonaws.com'
                        ApiId: vw7sjrral9
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-05T09:44:17.000Z'
                        Description: API Gateway created by postman
                        Name: testing-manual-input
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://vx5sky1vfc.execute-api.us-east-1.amazonaws.com'
                        ApiId: vx5sky1vfc
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:41:04.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://wci2q80xhl.execute-api.us-east-1.amazonaws.com'
                        ApiId: wci2q80xhl
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T08:32:41.000Z'
                        Description: API Gateway created by postman
                        Name: '#manual#entry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://wd4pydv888.execute-api.us-east-1.amazonaws.com'
                        ApiId: wd4pydv888
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-06-15T18:17:14.000Z'
                        Description: API Gateway created by postman
                        Name: Simple API overview
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                        Version: 2.0.0
                      - ApiEndpoint: 'https://wl51usdceb.execute-api.us-east-1.amazonaws.com'
                        ApiId: wl51usdceb
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2021-04-21T07:37:30.000Z'
                        Description: API Gateway created by postman
                        Name: '#manualentry'
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                      - ApiEndpoint: 'https://wlb2fs6aej.execute-api.us-east-1.amazonaws.com'
                        ApiId: wlb2fs6aej
                        ApiKeySelectionExpression: $request.header.x-api-key
                        CreatedDate: '2020-08-17T11:05:11.000Z'
                        Description: API Gateway created by postman
                        Name: gateway#beta
                        ProtocolType: HTTP
                        RouteSelectionExpression: $request.method $request.path
                        Tags: {}
                Example2:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - scm: git
                        website: null
                        has_wiki: false
                        uuid: '{ae0a2f7b-5c59-4ad1-bc1f-ebf0e6e32cfe}'
                        links:
                          watchers:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/watchers
                          branches:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/refs/branches
                          tags:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/refs/tags
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/commits
                          clone:
                            - href: >-
                                https://vinit-shahdeo@bitbucket.org/postmanlabs/wdio-json-reporter.git
                              name: https
                            - href: >-
                                git@bitbucket.org:postmanlabs/wdio-json-reporter.git
                              name: ssh
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter
                          source:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/src
                          html:
                            href: >-
                              https://bitbucket.org/postmanlabs/wdio-json-reporter
                          avatar:
                            href: >-
                              https://bytebucket.org/ravatar/%7Bae0a2f7b-5c59-4ad1-bc1f-ebf0e6e32cfe%7D?ts=default
                          hooks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/hooks
                          forks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/forks
                          downloads:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/downloads
                          pullrequests:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/wdio-json-reporter/pullrequests
                        fork_policy: no_public_forks
                        full_name: postmanlabs/wdio-json-reporter
                        name: wdio-json-reporter
                        project:
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs/projects/QE
                            html:
                              href: >-
                                https://bitbucket.org/postmanlabs/workspace/projects/QE
                            avatar:
                              href: >-
                                https://bitbucket.org/account/user/postmanlabs/projects/QE/avatar/32?ts=1595353432
                          type: project
                          name: Quality Engineering
                          key: QE
                          uuid: '{6443d820-bc18-4f77-8224-c01e07ae0a9c}'
                        language: ''
                        created_on: '2021-05-13T21:06:19.930294+00:00'
                        mainbranch:
                          type: branch
                          name: master
                        workspace:
                          slug: postmanlabs
                          type: workspace
                          name: Postman
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs
                            html:
                              href: 'https://bitbucket.org/postmanlabs/'
                            avatar:
                              href: >-
                                https://bitbucket.org/workspaces/postmanlabs/avatar/?ts=1543632694
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                        has_issues: false
                        owner:
                          username: postmanlabs
                          display_name: Postman
                          type: team
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/teams/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D
                            html:
                              href: >-
                                https://bitbucket.org/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D/
                            avatar:
                              href: >-
                                https://bitbucket.org/account/postmanlabs/avatar/
                        updated_on: '2021-05-14T15:49:14.513963+00:00'
                        size: 1170728
                        type: repository
                        slug: wdio-json-reporter
                        is_private: true
                        description: ''
                      - scm: git
                        website: null
                        has_wiki: false
                        uuid: '{514b1688-e35c-4ce8-97d3-e702fea935ca}'
                        links:
                          watchers:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/watchers
                          branches:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/refs/branches
                          tags:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/refs/tags
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/commits
                          clone:
                            - href: >-
                                https://vinit-shahdeo@bitbucket.org/postmanlabs/support-content-sandbox.git
                              name: https
                            - href: >-
                                git@bitbucket.org:postmanlabs/support-content-sandbox.git
                              name: ssh
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox
                          source:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/src
                          html:
                            href: >-
                              https://bitbucket.org/postmanlabs/support-content-sandbox
                          avatar:
                            href: >-
                              https://bytebucket.org/ravatar/%7B514b1688-e35c-4ce8-97d3-e702fea935ca%7D?ts=default
                          hooks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/hooks
                          forks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/forks
                          downloads:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/downloads
                          pullrequests:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/support-content-sandbox/pullrequests
                        fork_policy: no_public_forks
                        full_name: postmanlabs/support-content-sandbox
                        name: support-content-sandbox
                        project:
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs/projects/PRODSUP
                            html:
                              href: >-
                                https://bitbucket.org/postmanlabs/workspace/projects/PRODSUP
                            avatar:
                              href: >-
                                https://bitbucket.org/account/user/postmanlabs/projects/PRODSUP/avatar/32?ts=1597187068
                          type: project
                          name: Product Support
                          key: PRODSUP
                          uuid: '{315ea99d-8012-40b3-9935-23af8286e2be}'
                        language: ''
                        created_on: '2021-05-20T03:34:01.269168+00:00'
                        mainbranch:
                          type: branch
                          name: main
                        workspace:
                          slug: postmanlabs
                          type: workspace
                          name: Postman
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs
                            html:
                              href: 'https://bitbucket.org/postmanlabs/'
                            avatar:
                              href: >-
                                https://bitbucket.org/workspaces/postmanlabs/avatar/?ts=1543632694
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                        has_issues: false
                        owner:
                          username: postmanlabs
                          display_name: Postman
                          type: team
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/teams/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D
                            html:
                              href: >-
                                https://bitbucket.org/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D/
                            avatar:
                              href: >-
                                https://bitbucket.org/account/postmanlabs/avatar/
                        updated_on: '2021-05-20T03:34:03.585667+00:00'
                        size: 58752
                        type: repository
                        slug: support-content-sandbox
                        is_private: true
                        description: ''
                      - scm: git
                        website: null
                        has_wiki: false
                        uuid: '{a6378adf-0e52-4cd4-b4c9-407cab5b7e2a}'
                        links:
                          watchers:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/watchers
                          branches:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/refs/branches
                          tags:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/refs/tags
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/commits
                          clone:
                            - href: >-
                                https://vinit-shahdeo@bitbucket.org/postmanlabs/starship-electron.git
                              name: https
                            - href: >-
                                git@bitbucket.org:postmanlabs/starship-electron.git
                              name: ssh
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron
                          source:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/src
                          html:
                            href: >-
                              https://bitbucket.org/postmanlabs/starship-electron
                          avatar:
                            href: >-
                              https://bytebucket.org/ravatar/%7Ba6378adf-0e52-4cd4-b4c9-407cab5b7e2a%7D?ts=2823675
                          hooks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/hooks
                          forks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/forks
                          downloads:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/downloads
                          pullrequests:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/starship-electron/pullrequests
                        fork_policy: no_public_forks
                        full_name: postmanlabs/starship-electron
                        name: starship-electron
                        project:
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs/projects/CF
                            html:
                              href: >-
                                https://bitbucket.org/postmanlabs/workspace/projects/CF
                            avatar:
                              href: >-
                                https://bitbucket.org/account/user/postmanlabs/projects/CF/avatar/32?ts=1588584679
                          type: project
                          name: Client Foundation
                          key: CF
                          uuid: '{541fdb45-d159-4eb7-920a-875e8e237f5e}'
                        language: c++
                        created_on: '2021-05-20T19:47:44.540928+00:00'
                        mainbranch:
                          type: branch
                          name: master
                        workspace:
                          slug: postmanlabs
                          type: workspace
                          name: Postman
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs
                            html:
                              href: 'https://bitbucket.org/postmanlabs/'
                            avatar:
                              href: >-
                                https://bitbucket.org/workspaces/postmanlabs/avatar/?ts=1543632694
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                        has_issues: false
                        owner:
                          username: postmanlabs
                          display_name: Postman
                          type: team
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/teams/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D
                            html:
                              href: >-
                                https://bitbucket.org/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D/
                            avatar:
                              href: >-
                                https://bitbucket.org/account/postmanlabs/avatar/
                        updated_on: '2021-05-26T12:51:58.447961+00:00'
                        size: 7340089
                        type: repository
                        slug: starship-electron
                        is_private: true
                        description: >-
                          A POSIX-based development environment to maintain an
                          Electron.js variant for the Starship project.
                      - scm: git
                        website: null
                        has_wiki: false
                        uuid: '{959044d1-8972-43cb-8332-bbc86a0cc7d2}'
                        links:
                          watchers:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/watchers
                          branches:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/refs/branches
                          tags:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/refs/tags
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/commits
                          clone:
                            - href: >-
                                https://vinit-shahdeo@bitbucket.org/postmanlabs/universal-search-qus.git
                              name: https
                            - href: >-
                                git@bitbucket.org:postmanlabs/universal-search-qus.git
                              name: ssh
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus
                          source:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/src
                          html:
                            href: >-
                              https://bitbucket.org/postmanlabs/universal-search-qus
                          avatar:
                            href: >-
                              https://bytebucket.org/ravatar/%7B959044d1-8972-43cb-8332-bbc86a0cc7d2%7D?ts=python
                          hooks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/hooks
                          forks:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/forks
                          downloads:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/downloads
                          pullrequests:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/postmanlabs/universal-search-qus/pullrequests
                        fork_policy: no_public_forks
                        full_name: postmanlabs/universal-search-qus
                        name: universal-search-qus
                        project:
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs/projects/SERVICE
                            html:
                              href: >-
                                https://bitbucket.org/postmanlabs/workspace/projects/SERVICE
                            avatar:
                              href: >-
                                https://bitbucket.org/account/user/postmanlabs/projects/SERVICE/avatar/32?ts=1526283967
                          type: project
                          name: Postman Services
                          key: SERVICE
                          uuid: '{c10625e5-ffd1-4104-b8ef-b46c4a92d53f}'
                        language: python
                        created_on: '2021-05-25T09:43:21.272700+00:00'
                        mainbranch:
                          type: branch
                          name: develop
                        workspace:
                          slug: postmanlabs
                          type: workspace
                          name: Postman
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/workspaces/postmanlabs
                            html:
                              href: 'https://bitbucket.org/postmanlabs/'
                            avatar:
                              href: >-
                                https://bitbucket.org/workspaces/postmanlabs/avatar/?ts=1543632694
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                        has_issues: false
                        owner:
                          username: postmanlabs
                          display_name: Postman
                          type: team
                          uuid: '{7835da64-4ff8-4c33-8f7e-7e99989f0128}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/teams/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D
                            html:
                              href: >-
                                https://bitbucket.org/%7B7835da64-4ff8-4c33-8f7e-7e99989f0128%7D/
                            avatar:
                              href: >-
                                https://bitbucket.org/account/postmanlabs/avatar/
                        updated_on: '2021-05-25T18:18:21.948950+00:00'
                        size: 10082719
                        type: repository
                        slug: universal-search-qus
                        is_private: true
                        description: Query understanding for universal search searvice
                Example3:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - name: contrib/IS/BB
                        links:
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commits/contrib/IS/BB
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/refs/branches/contrib/IS/BB
                          html:
                            href: >-
                              https://bitbucket.org/vinit-shahdeo/dummy/branch/contrib/IS/BB
                        default_merge_strategy: merge_commit
                        merge_strategies:
                          - merge_commit
                          - squash
                          - fast_forward
                        type: branch
                        target:
                          hash: bed21228186a38885460ad379b410a2c74eab50f
                          repository:
                            links:
                              self:
                                href: >-
                                  https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy
                              html:
                                href: 'https://bitbucket.org/vinit-shahdeo/dummy'
                              avatar:
                                href: >-
                                  https://bytebucket.org/ravatar/%7B1c2b9ab1-f320-4d65-b125-c651a10f45d7%7D?ts=default
                            type: repository
                            name: dummy
                            full_name: vinit-shahdeo/dummy
                            uuid: '{1c2b9ab1-f320-4d65-b125-c651a10f45d7}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/bed21228186a38885460ad379b410a2c74eab50f
                            comments:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/bed21228186a38885460ad379b410a2c74eab50f/comments
                            patch:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/patch/bed21228186a38885460ad379b410a2c74eab50f
                            html:
                              href: >-
                                https://bitbucket.org/vinit-shahdeo/dummy/commits/bed21228186a38885460ad379b410a2c74eab50f
                            diff:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/diff/bed21228186a38885460ad379b410a2c74eab50f
                            approve:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/bed21228186a38885460ad379b410a2c74eab50f/approve
                            statuses:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/bed21228186a38885460ad379b410a2c74eab50f/statuses
                          author:
                            raw: Vinit Shahdeo <vinit.shahdeo@postman.com>
                            type: author
                            user:
                              display_name: Vinit Shahdeo
                              uuid: '{5d1dbce0-5a31-422e-930f-4a504741bae2}'
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/users/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D
                                html:
                                  href: >-
                                    https://bitbucket.org/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D/
                                avatar:
                                  href: >-
                                    https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/VS-5.png
                              type: user
                              nickname: Vinit Shahdeo
                              account_id: 5c1737386158cb25b06f39aa
                          parents:
                            - hash: d126cb68a49c49c25c5cfd4cd0751a1b0dcd3cf7
                              type: commit
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/d126cb68a49c49c25c5cfd4cd0751a1b0dcd3cf7
                                html:
                                  href: >-
                                    https://bitbucket.org/vinit-shahdeo/dummy/commits/d126cb68a49c49c25c5cfd4cd0751a1b0dcd3cf7
                          date: '2020-10-08T07:07:52+00:00'
                          message: Committing via Postman Bitbucket Integration
                          type: commit
                      - name: master
                        links:
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commits/master
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/refs/branches/master
                          html:
                            href: >-
                              https://bitbucket.org/vinit-shahdeo/dummy/branch/master
                        default_merge_strategy: merge_commit
                        merge_strategies:
                          - merge_commit
                          - squash
                          - fast_forward
                        type: branch
                        target:
                          hash: eea02b93a481da88e14a6eb400a05aff76320308
                          repository:
                            links:
                              self:
                                href: >-
                                  https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy
                              html:
                                href: 'https://bitbucket.org/vinit-shahdeo/dummy'
                              avatar:
                                href: >-
                                  https://bytebucket.org/ravatar/%7B1c2b9ab1-f320-4d65-b125-c651a10f45d7%7D?ts=default
                            type: repository
                            name: dummy
                            full_name: vinit-shahdeo/dummy
                            uuid: '{1c2b9ab1-f320-4d65-b125-c651a10f45d7}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/eea02b93a481da88e14a6eb400a05aff76320308
                            comments:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/eea02b93a481da88e14a6eb400a05aff76320308/comments
                            patch:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/patch/eea02b93a481da88e14a6eb400a05aff76320308
                            html:
                              href: >-
                                https://bitbucket.org/vinit-shahdeo/dummy/commits/eea02b93a481da88e14a6eb400a05aff76320308
                            diff:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/diff/eea02b93a481da88e14a6eb400a05aff76320308
                            approve:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/eea02b93a481da88e14a6eb400a05aff76320308/approve
                            statuses:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/eea02b93a481da88e14a6eb400a05aff76320308/statuses
                          author:
                            raw: Vinit Shahdeo <vinit.shahdeo@postman.com>
                            type: author
                            user:
                              display_name: Vinit Shahdeo
                              uuid: '{5d1dbce0-5a31-422e-930f-4a504741bae2}'
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/users/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D
                                html:
                                  href: >-
                                    https://bitbucket.org/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D/
                                avatar:
                                  href: >-
                                    https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/VS-5.png
                              type: user
                              nickname: Vinit Shahdeo
                              account_id: 5c1737386158cb25b06f39aa
                          parents:
                            - hash: bd5ee100a8b4eae46a0c29adf3d3113062ca882c
                              type: commit
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/bd5ee100a8b4eae46a0c29adf3d3113062ca882c
                                html:
                                  href: >-
                                    https://bitbucket.org/vinit-shahdeo/dummy/commits/bd5ee100a8b4eae46a0c29adf3d3113062ca882c
                          date: '2021-05-07T07:14:20+00:00'
                          message: Committing via Postman Bitbucket Integration
                          type: commit
                      - name: develop
                        links:
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commits/develop
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/refs/branches/develop
                          html:
                            href: >-
                              https://bitbucket.org/vinit-shahdeo/dummy/branch/develop
                        default_merge_strategy: merge_commit
                        merge_strategies:
                          - merge_commit
                          - squash
                          - fast_forward
                        type: branch
                        target:
                          hash: 6bce60a12a5b611dd1cdcf0eac2558a3a544688f
                          repository:
                            links:
                              self:
                                href: >-
                                  https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy
                              html:
                                href: 'https://bitbucket.org/vinit-shahdeo/dummy'
                              avatar:
                                href: >-
                                  https://bytebucket.org/ravatar/%7B1c2b9ab1-f320-4d65-b125-c651a10f45d7%7D?ts=default
                            type: repository
                            name: dummy
                            full_name: vinit-shahdeo/dummy
                            uuid: '{1c2b9ab1-f320-4d65-b125-c651a10f45d7}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/6bce60a12a5b611dd1cdcf0eac2558a3a544688f
                            comments:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/6bce60a12a5b611dd1cdcf0eac2558a3a544688f/comments
                            patch:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/patch/6bce60a12a5b611dd1cdcf0eac2558a3a544688f
                            html:
                              href: >-
                                https://bitbucket.org/vinit-shahdeo/dummy/commits/6bce60a12a5b611dd1cdcf0eac2558a3a544688f
                            diff:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/diff/6bce60a12a5b611dd1cdcf0eac2558a3a544688f
                            approve:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/6bce60a12a5b611dd1cdcf0eac2558a3a544688f/approve
                            statuses:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/6bce60a12a5b611dd1cdcf0eac2558a3a544688f/statuses
                          author:
                            raw: Vinit Shahdeo <vinit.shahdeo@postman.com>
                            type: author
                            user:
                              display_name: Vinit Shahdeo
                              uuid: '{5d1dbce0-5a31-422e-930f-4a504741bae2}'
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/users/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D
                                html:
                                  href: >-
                                    https://bitbucket.org/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D/
                                avatar:
                                  href: >-
                                    https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/VS-5.png
                              type: user
                              nickname: Vinit Shahdeo
                              account_id: 5c1737386158cb25b06f39aa
                          parents:
                            - hash: 3a61ad7233c0b68c78646ccc2431b066ec1a82d5
                              type: commit
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/3a61ad7233c0b68c78646ccc2431b066ec1a82d5
                                html:
                                  href: >-
                                    https://bitbucket.org/vinit-shahdeo/dummy/commits/3a61ad7233c0b68c78646ccc2431b066ec1a82d5
                          date: '2020-10-05T13:18:09+00:00'
                          message: Committing via Postman Bitbucket Integration
                          type: commit
                      - name: feature/integration
                        links:
                          commits:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commits/feature/integration
                          self:
                            href: >-
                              https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/refs/branches/feature/integration
                          html:
                            href: >-
                              https://bitbucket.org/vinit-shahdeo/dummy/branch/feature/integration
                        default_merge_strategy: merge_commit
                        merge_strategies:
                          - merge_commit
                          - squash
                          - fast_forward
                        type: branch
                        target:
                          hash: 4cc071911899dbe4ed5eb1d38122d970f8edfba5
                          repository:
                            links:
                              self:
                                href: >-
                                  https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy
                              html:
                                href: 'https://bitbucket.org/vinit-shahdeo/dummy'
                              avatar:
                                href: >-
                                  https://bytebucket.org/ravatar/%7B1c2b9ab1-f320-4d65-b125-c651a10f45d7%7D?ts=default
                            type: repository
                            name: dummy
                            full_name: vinit-shahdeo/dummy
                            uuid: '{1c2b9ab1-f320-4d65-b125-c651a10f45d7}'
                          links:
                            self:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/4cc071911899dbe4ed5eb1d38122d970f8edfba5
                            comments:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/4cc071911899dbe4ed5eb1d38122d970f8edfba5/comments
                            patch:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/patch/4cc071911899dbe4ed5eb1d38122d970f8edfba5
                            html:
                              href: >-
                                https://bitbucket.org/vinit-shahdeo/dummy/commits/4cc071911899dbe4ed5eb1d38122d970f8edfba5
                            diff:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/diff/4cc071911899dbe4ed5eb1d38122d970f8edfba5
                            approve:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/4cc071911899dbe4ed5eb1d38122d970f8edfba5/approve
                            statuses:
                              href: >-
                                https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/4cc071911899dbe4ed5eb1d38122d970f8edfba5/statuses
                          author:
                            raw: Vinit Shahdeo <vinit.shahdeo@postman.com>
                            type: author
                            user:
                              display_name: Vinit Shahdeo
                              uuid: '{5d1dbce0-5a31-422e-930f-4a504741bae2}'
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/users/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D
                                html:
                                  href: >-
                                    https://bitbucket.org/%7B5d1dbce0-5a31-422e-930f-4a504741bae2%7D/
                                avatar:
                                  href: >-
                                    https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/VS-5.png
                              type: user
                              nickname: Vinit Shahdeo
                              account_id: 5c1737386158cb25b06f39aa
                          parents:
                            - hash: c6df54b3e69b375faffd24e3f2a80bda67c2bfdb
                              type: commit
                              links:
                                self:
                                  href: >-
                                    https://api.bitbucket.org/2.0/repositories/vinit-shahdeo/dummy/commit/c6df54b3e69b375faffd24e3f2a80bda67c2bfdb
                                html:
                                  href: >-
                                    https://bitbucket.org/vinit-shahdeo/dummy/commits/c6df54b3e69b375faffd24e3f2a80bda67c2bfdb
                          date: '2020-10-05T14:41:31+00:00'
                          message: Committing via Postman Bitbucket Integration
                          type: commit
                Example4:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - id: 125718436
                        node_id: xxxxxxxxx
                        name: DummyProject
                        full_name: postmanlabs/DummyProject
                        private: false
                        owner:
                          login: postmanlabs
                          id: 20594326
                          node_id: MDQ6VXNlcjIwNTk0MzI2
                          avatar_url: >-
                            https://avatars0.githubusercontent.com/u/20594326?v=4
                          gravatar_id: ''
                          url: 'https://api.github.com/users/postmanlabs'
                          html_url: 'https://github.com/postmanlabs'
                          followers_url: 'https://api.github.com/users/postmanlabs/followers'
                          following_url: >-
                            https://api.github.com/users/postmanlabs/following{/other_user}
                          gists_url: >-
                            https://api.github.com/users/postmanlabs/gists{/gist_id}
                          starred_url: >-
                            https://api.github.com/users/postmanlabs/starred{/owner}{/repo}
                          subscriptions_url: >-
                            https://api.github.com/users/postmanlabs/subscriptions
                          organizations_url: 'https://api.github.com/users/postmanlabs/orgs'
                          repos_url: 'https://api.github.com/users/postmanlabs/repos'
                          events_url: >-
                            https://api.github.com/users/postmanlabs/events{/privacy}
                          received_events_url: >-
                            https://api.github.com/users/postmanlabs/received_events
                          type: User
                          site_admin: false
                        html_url: 'https://github.com/postmanlabs/DummyProject'
                        description: freelance work
                        fork: false
                        url: 'https://api.github.com/repos/postmanlabs/DummyProject'
                        forks_url: >-
                          https://api.github.com/repos/postmanlabs/DummyProject/forks
                        keys_url: >-
                          https://api.github.com/repos/postmanlabs/DummyProject/keys{/key_id}
                        created_at: '2018-03-18T11:34:37Z'
                        updated_at: '2018-04-09T18:02:45Z'
                        pushed_at: '2018-04-09T18:02:44Z'
                        git_url: 'git://github.com/postmanlabs/DummyProject.git'
                        ssh_url: 'git@github.com:postmanlabs/DummyProject.git'
                        clone_url: 'https://github.com/postmanlabs/DummyProject.git'
                        svn_url: 'https://github.com/postmanlabs/DummyProject'
                        homepage: 'https://postmanlabs.github.io/DummyProject/'
                        size: 138
                        stargazers_count: 0
                        watchers_count: 0
                        language: PHP
                        has_issues: true
                        has_projects: true
                        has_downloads: true
                        has_wiki: true
                        has_pages: true
                        forks_count: 0
                        mirror_url: null
                        archived: false
                        disabled: false
                        open_issues_count: 0
                        license:
                          key: mit
                          name: MIT License
                          spdx_id: MIT
                          url: 'https://api.github.com/licenses/mit'
                          node_id: MDc6TGljZW5zZTEz
                        forks: 0
                        open_issues: 0
                        watchers: 0
                        default_branch: master
                Example5:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - name: development
                        commit:
                          sha: 481ab58439f37f6957006fb3d97a6e2627ff04
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/481ab58439f37f6957006fb3d97a6e2627ff04
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/development/protection
                      - name: master
                        commit:
                          sha: 90691ae522c1ce9d1981021c780fcf8125463d
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/90691ae522c1ce9d1981021c780fcf8125463d
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/master/protection
                      - name: test
                        commit:
                          sha: 4d398bc7f424fa3c835d814048075fee42cd68
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/4d398bc7f424fa3c835d814048075fee42cd68
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/test/protection
                Example6:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - id: 1
                        description: ''
                        name: node templates
                        name_with_namespace: Postman / node templates
                        path: node-templates
                        path_with_namespace: postman/node-templates
                        created_at: '2020-07-14T10:34:20.626Z'
                        default_branch: null
                        tag_list: []
                        ssh_url_to_repo: 'git@gitlab.com:postman/node-templates.git'
                        http_url_to_repo: 'https://gitlab.com/postman/node-templates.git'
                        web_url: 'https://gitlab.com/postman/node-templates'
                        readme_url: null
                        avatar_url: null
                        forks_count: 0
                        star_count: 0
                        last_activity_at: '2020-07-14T10:34:20.626Z'
                        namespace:
                          id: 8546299
                          name: Postman
                          path: postman
                          kind: user
                          full_path: postman
                          parent_id: null
                          avatar_url: >-
                            https://secure.gravatar.com/avatar/4218642591d5b03bdb0103736ca29b29?s=80&d=identicon
                          web_url: 'https://gitlab.com/postman'
                      - id: 1
                        description: ''
                        name: test-repo
                        name_with_namespace: Postman / Test repo
                        path: test-repo
                        path_with_namespace: postman/test-repo
                        created_at: '2020-07-14T10:34:20.626Z'
                        default_branch: null
                        tag_list: []
                        ssh_url_to_repo: 'git@gitlab.com:postman/test-repo.git'
                        http_url_to_repo: 'https://gitlab.com/postman/test-repo.git'
                        web_url: 'https://gitlab.com/postman/test-repo'
                        readme_url: null
                        avatar_url: null
                        forks_count: 0
                        star_count: 0
                        last_activity_at: '2020-07-14T10:34:20.626Z'
                        namespace:
                          id: 8546299
                          name: Postman
                          path: postman
                          kind: user
                          full_path: postman
                          parent_id: null
                          avatar_url: >-
                            https://secure.gravatar.com/avatar/4218642591d5b03bdb0103736ca29b29?s=80&d=identicon
                          web_url: 'https://gitlab.com/postman'
                Example7:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - name: develop
                        commit:
                          id: eab02a57a4774c5bf2e3921c5281bfcb34886e71
                          short_id: eab02a57
                          created_at: '2020-05-14T12:39:59.000+00:00'
                          parent_ids: null
                          title: Initialized from \'Android\' project template
                          message: Initialized from \'Android\' project template
                          author_name: GitLab
                          author_email: root@localhost
                          authored_date: '2020-05-14T12:39:59.000+00:00'
                          committer_name: Dmitriy Zaporozhets
                          committer_email: dmitriy.zaporozhets@gmail.com
                          committed_date: '2020-05-14T12:39:59.000+00:00'
                          web_url: >-
                            https://gitlab.com/postman/android-app/-/commit/eab02a57a4774c5bf2e3921c5281bfcb34886e71
                        merged: false
                        protected: false
                        developers_can_push: false
                        developers_can_merge: false
                        can_push: true
                        default: false
                        web_url: 'https://gitlab.com/postman/android-app/-/tree/develop'
                      - name: develop
                        commit:
                          id: eab02a57a4774c5bf2e3921c5281bfcb34886e71
                          short_id: eab02a57
                          created_at: '2020-05-14T12:39:59.000+00:00'
                          parent_ids: null
                          title: Initialized from \'Android\' project template
                          message: Initialized from \'Android\' project template
                          author_name: GitLab
                          author_email: root@localhost
                          authored_date: '2020-05-14T12:39:59.000+00:00'
                          committer_name: Dmitriy Zaporozhets
                          committer_email: dmitriy.zaporozhets@gmail.com
                          committed_date: '2020-05-14T12:39:59.000+00:00'
                          web_url: >-
                            https://gitlab.com/postman/android-app/-/commit/eab02a57a4774c5bf2e3921c5281bfcb34886e71
                        merged: false
                        protected: false
                        developers_can_push: false
                        developers_can_merge: false
                        can_push: true
                        default: false
                        web_url: 'https://gitlab.com/postman/android-app/-/tree/develop'
                Example8:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - id: wngds96q23pn
                        created_at: '2021-02-05T16:46:12Z'
                        updated_at: '2021-05-20T06:32:30Z'
                        name: Postman
                        page_description: null
                        headline: null
                        branding: basic
                        subdomain: postman1
                        domain: null
                        url: null
                        support_url: null
                        hidden_from_search: false
                        allow_page_subscribers: true
                        allow_incident_subscribers: true
                        allow_email_subscribers: true
                        allow_sms_subscribers: true
                        allow_rss_atom_feeds: true
                        allow_webhook_subscribers: false
                        notifications_from_email: null
                        notifications_email_footer: >-
                          You received this email because you are subscribed to
                          Postman's service status notifications.
                        activity_score: 169
                        twitter_username: null
                        viewers_must_be_team_members: false
                        ip_restrictions: null
                        city: null
                        state: null
                        country: null
                        time_zone: UTC
                        css_body_background_color: ffffff
                        css_font_color: '333333'
                        css_light_font_color: AAAAAA
                        css_greens: 2fcc66
                        css_yellows: f1c40f
                        css_oranges: e67e22
                        css_blues: 3498DB
                        css_reds: e74c3c
                        css_border_color: E0E0E0
                        css_graph_color: 3498db
                        css_link_color: 3498db
                        css_no_data: b3bac5
                        favicon_logo:
                          updated_at: null
                          size: null
                          url: ''
                        transactional_logo:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        hero_cover:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        email_logo:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        twitter_logo:
                          updated_at: null
                          size: null
                          url: ''
                      - id: l9fwvp9ty6z3
                        created_at: '2021-03-22T22:57:25Z'
                        updated_at: '2021-03-29T18:25:19Z'
                        name: Test Service
                        page_description: null
                        headline: null
                        branding: basic
                        subdomain: testservice1
                        domain: null
                        url: null
                        support_url: null
                        hidden_from_search: false
                        allow_page_subscribers: true
                        allow_incident_subscribers: true
                        allow_email_subscribers: true
                        allow_sms_subscribers: true
                        allow_rss_atom_feeds: true
                        allow_webhook_subscribers: false
                        notifications_from_email: null
                        notifications_email_footer: >-
                          You received this email because you are subscribed to
                          Test Service's service status notifications.
                        activity_score: 15
                        twitter_username: null
                        viewers_must_be_team_members: false
                        ip_restrictions: null
                        city: null
                        state: null
                        country: null
                        time_zone: UTC
                        css_body_background_color: ffffff
                        css_font_color: '333333'
                        css_light_font_color: AAAAAA
                        css_greens: 2fcc66
                        css_yellows: f1c40f
                        css_oranges: e67e22
                        css_blues: 3498DB
                        css_reds: e74c3c
                        css_border_color: E0E0E0
                        css_graph_color: 3498db
                        css_link_color: 3498db
                        css_no_data: b3bac5
                        favicon_logo:
                          updated_at: null
                          size: null
                          url: ''
                        transactional_logo:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        hero_cover:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        email_logo:
                          updated_at: null
                          original_url: ''
                          size: null
                          normal_url: ''
                          retina_url: ''
                        twitter_logo:
                          updated_at: null
                          size: null
                          url: ''
                Example9:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - id: 7fn5d90b2fbf
                        page_id: wngds96q23pn
                        group_id: ms3qlt2yr8h0
                        created_at: '2021-02-05T16:47:55Z'
                        updated_at: '2021-05-20T06:32:30Z'
                        group: false
                        name: SyncServer
                        description: null
                        position: 1
                        status: partial_outage
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+d68fe5bd-c5ba-403b-a046-d6febdaaa48e@notifications.statuspage.io
                        start_date: '2021-02-05'
                      - id: 6dr67dh27mwn
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-05T16:46:12Z'
                        updated_at: '2021-03-29T17:52:07Z'
                        group: false
                        name: API (example)
                        description: null
                        position: 1
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+f562083f-519a-4faa-904f-b625232ee721@notifications.statuspage.io
                        start_date: '2021-02-05'
                      - id: zt4b2qq4xhft
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-05T16:46:12Z'
                        updated_at: '2021-03-29T17:36:33Z'
                        group: false
                        name: Management Portal (example)
                        description: null
                        position: 2
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+395c660d-43d3-4d00-9951-25b74b2bd4b0@notifications.statuspage.io
                        start_date: '2021-02-05'
                      - id: ms3qlt2yr8h0
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-05T16:47:55Z'
                        updated_at: '2021-02-05T16:47:55Z'
                        group: true
                        name: Backend
                        description: null
                        position: 3
                        status: partial_outage
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+bb709130-d462-4359-9c51-9825751bb4e4@notifications.statuspage.io
                        start_date: null
                      - id: t7nd23r1h1v3
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-08T15:06:20Z'
                        updated_at: '2021-02-08T15:06:20Z'
                        group: false
                        name: Apigee Adapter for Envoy
                        description: null
                        position: 4
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+dc27b69c-9eac-4ae0-8ec4-e17351b2655e@notifications.statuspage.io
                        start_date: null
                      - id: b8gdn0y5hcd9
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-08T15:06:28Z'
                        updated_at: '2021-02-08T15:06:28Z'
                        group: false
                        name: Apigee API Monitoring
                        description: null
                        position: 5
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+1127dc80-62a5-4752-be66-09b2c007753b@notifications.statuspage.io
                        start_date: null
                      - id: fhdggb9y4ytx
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-08T15:10:34Z'
                        updated_at: '2021-02-08T15:10:34Z'
                        group: false
                        name: AWS amplify-ap-northeast-1
                        description: null
                        position: 6
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+057cbe13-0316-4041-a260-ba153595c0ba@notifications.statuspage.io
                        start_date: null
                      - id: mvfgc9396mfq
                        page_id: wngds96q23pn
                        group_id: null
                        created_at: '2021-02-24T08:01:33Z'
                        updated_at: '2021-03-29T17:59:41Z'
                        group: false
                        name: Integrations Service
                        description: null
                        position: 8
                        status: operational
                        showcase: false
                        only_show_if_degraded: false
                        automation_email: >-
                          component+d1102450-7f8d-4075-a6e9-2f7baf2900bb@notifications.statuspage.io
                        start_date: '2021-02-24'
                Example10:
                  value:
                    model_id: '2636'
                    meta:
                      model: integration
                      action: performActions
                    data:
                      - name: development
                        commit:
                          sha: 481ab58439f37f6957006fb3d97a6e2627ff04
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/481ab58439f37f6957006fb3d97a6e2627ff04
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/development/protection
                      - name: master
                        commit:
                          sha: 90691ae522c1ce9d1981021c780fcf8125463d
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/90691ae522c1ce9d1981021c780fcf8125463d
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/master/protection
                      - name: test
                        commit:
                          sha: 4d398bc7f424fa3c835d814048075fee42cd68
                          url: >-
                            https://api.github.com/repos/AbhiramHPostman/HelloWorld/commits/4d398bc7f424fa3c835d814048075fee42cd68
                        protected: false
                        protection:
                          enabled: false
                          required_status_checks:
                            enforcement_level: 'off'
                            contexts: []
                        protection_url: >-
                          https://api.github.com/repos/AbhiramHPostman/HelloWorld/branches/test/protection
          description: 200 - fetchAWSGatewayAPIs
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:40:04 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=47a33aaa23ccf069
            x-srv-span:
              schema:
                type: string
              example: v=1;s=b46b3a16b0aadf73
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"526-YkJsgmtBGZm9//xry/hK/Q"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              example:
                error:
                  name: invalidParamsError
                  message: The specified parameter is in an invalid format
                  details:
                    param: type
          description: 400 - invalid action type
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:42:37 GMT'
            Content-Length:
              schema:
                type: integer
              example: 126
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=7c38a598477113bd
            x-srv-span:
              schema:
                type: string
              example: v=1;s=82c9d6d63998cd8a
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"7e-OxFK/4n1De4fWCdOewT0dw"
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '2363'
                    owner: '485374'
          description: 404 - Integration Not Found
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 12:42:10 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=51fd97e42e24d28b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=13dc5afc13fba0c2
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"b1-xXLITk9yHO+/ANNZ61KX1w"
            Content-Encoding:
              schema:
                type: string
              example: gzip

  # Integrations Connected Accounts endpoints
  /connected-accounts:
    post:
      tags:
        - Connected Account
        - Integrations Internal
      summary: Create connected account
      description: >-
        Create a new connected account that can be used by team members to quickly create new integrations
      security:
        - authToken: []
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scope
                - service
                - name
                - auth
              properties:
                service:
                  type: string
                name:
                  type: string
                scope:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                auth:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ConnectedAccount'
        '400':
          description: '400 - bad request sent to create a connected acocunt'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: object
              examples:
                Example1:
                  value:
                    $ref: '#/components/responses/ParamMissingError'
                Example2:
                  value:
                    $ref: '#/components/responses/InvalidParamsError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    get:
      tags:
        - Connected Account
        - Integrations Internal
      summary: Get connected accounts
      description: >-
        Gets the list of connected accounts configured for the team
      security:
        - authToken: []
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
            example: '{{accessToken}}'
        - name: service
          in: query
          schema:
            type: string
            example: 'slack'
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConnectedAccount'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /connected-accounts/{connectedAccountId}:
    put:
      tags:
        - Connected Account
        - Integrations Internal
      summary: Update a connected account
      description: >-
        Update a particular connected account
      security:
        - authToken: []
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                auth:
                  type: object
                data:
                  type: object
      responses:
        '200':
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ConnectedAccount'
        '400':
          description: '400 - bad request sent to create a connected acocunt'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    $ref: '#/components/responses/ParamMissingError'
                Example2:
                  value:
                    $ref: '#/components/responses/InvalidParamsError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    delete:
      tags:
        - Connected Account
        - Integrations Internal
      summary: Delete a connected account
      description: >-
        Delete a connected account
      security:
        - authToken: []
      parameters:
        - name: x-access-token
          in: header
          schema:
            type: string
            example: '{{accessToken}}'
      responses:
        200:
          description: '200 OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: object
                    example: null
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          description: 404 - Instance not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFoundError'
              examples:
                404 - Instance not found:
                  value:
                    error:
                      details:
                        model: 'connectedaccount'
                        model_id: '123'
                        owner: '453663'
                      message: We could not find the connected account you are looking for
                      name: instanceNotFoundError
    parameters:
      - name: connectedAccountId
        in: path
        schema:
          type: string
        required: true
        description: ID of the integration class that needs to be fetched
        example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
  # Manifest endpoints (CRUD on integration classes, services, categories and client categories)
  /integration-classes:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: List Integration Classes
      description: Get a list of integration classes.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: disabled
          in: query
          schema:
            type: boolean
          description: Adds disabled integration classes to the response
          example: true
        - name: internal
          in: query
          schema:
            type: boolean
          description: Adds internal classes to the response
          example: true
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationClassWithServices'
    post:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Create Integration Class
      description: Create integration class.
      security:
        - basicAuth: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IntegrationClassBasic'
                - type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: integer
                    clientCategories:
                      type: array
                      items:
                        type: integer
                    services:
                      type: array
                      items:
                        type: string
                    inputs:
                      type: array
                      items:
                        $ref: '#/components/schemas/IntegrationClassInputRequestBody'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassBasic'
  /integration-classes/{integrationClassId}:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Fetch Integration Class
      description: Get details of an integration class.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class that needs to be fetched
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassFull'
    put:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Update Integration Class
      description: Update integration class.
      security:
        - basicAuth: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/IntegrationClassBasic'
                - type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: integer
                    clientCategories:
                      type: array
                      items:
                        type: integer
                    services:
                      type: array
                      items:
                        type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassBasic'
  /integration-classes/{integrationClassId}/inputs:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: List Inputs of an Integration Class
      description: Get a list of inputs given an integration class.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class to which the inputs belongs
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntegrationClassInput'
    post:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Create Integration Class Input
      description: Add an input to an integration class.
      security:
        - basicAuth: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class to which the input belongs
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationClassInputRequestBody'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassInput'
  /integration-classes/{integrationClassId}/inputs/{inputId}:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Fetch Input
      description: Get details of an integration class input.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class to which the input belongs
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: inputId
          in: path
          schema:
            type: string
          required: true
          description: ID of the input that needs to be fetched
          example: 'e48c1588-ea4a-462b-bd32-b3678dd3b453'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassInput'
    put:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Update Input
      description: Update input of an integration class.
      security:
        - basicAuth: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: inputId
          in: path
          schema:
            type: string
          required: true
          description: ID of the input that needs to be updated
          example: 'e48c1588-ea4a-462b-bd32-b3678dd3b453'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationClassInputRequestBody'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassInput'
    delete:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Delete an Input
      description: Remove an integration class input.
      security:
        - basicAuth: []
      parameters:
        - name: integrationClassId
          in: path
          schema:
            type: string
          required: true
          description: ID of the integration class to which the input belongs
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: inputId
          in: path
          schema:
            type: string
          required: true
          description: ID of the input that needs to be deleted
          example: 'e48c1588-ea4a-462b-bd32-b3678dd3b453'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/IntegrationClassInput'
  /services:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: List Services
      description: Get a list of services.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: integrationClass
          in: query
          schema:
            type: string
          description: Filters results by provided integrationClassId
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: category
          in: query
          schema:
            type: integer
          description: Filters results by provided categoryId
          example: 1
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceWithCategories'
    post:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Create Service
      description: Create new service.
      security:
        - basicAuth: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ServiceBasic'
                - type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: integer
                    integrationClasses:
                      type: array
                      items:
                        type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ServiceBasic'
  /services/{serviceId}:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Fetch Service
      description: Get details of a service.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: serviceId
          in: path
          schema:
            type: string
          required: true
          description: ID of the service that needs to be fetched
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ServiceWithIntegrationClasses'
    put:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Update Service
      description: Update service.
      security:
        - basicAuth: []
      parameters:
        - name: serviceId
          in: path
          schema:
            type: string
          required: true
          description: ID of the service that is to be updated
          example: 'd25c1588-ea4a-462b-bd32-b3678dd3b00c'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ServiceBasic'
                - type: object
                  properties:
                    categories:
                      type: array
                      items:
                        type: integer
                    integrationClasses:
                      type: array
                      items:
                        type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ServiceBasic'
  /categories:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: List Categories
      description: List all categories.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryBasic'
    post:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Create Category
      description: Create a new category.
      security:
        - basicAuth: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/CategoryBasic'
  /categories/{categoryId}:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Fetch Category
      description: Get details of a category.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: categoryId
          in: path
          schema:
            type: integer
          required: true
          description: ID of the category that needs to be fetched
          example: 1
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/CategoryFull'
    put:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Update Category
      description: Update a given category.
      security:
        - basicAuth: []
      parameters:
        - name: categoryId
          in: path
          schema:
            type: integer
          required: true
          description: ID of the category that is to be updated
          example: 2
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/CategoryBasic'
  /client-categories:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: List Client Categories
      description: List all client categories.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ClientCategoryBasic'
    post:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Create Client Category
      description: Create a new client category.
      security:
        - basicAuth: []
      parameters:
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ClientCategoryBasic'
  /client-categories/{clientCategoryId}:
    get:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Fetch Client Category
      description: Get details of a client category.
      security:
        - basicAuth: []
        - authToken: []
      parameters:
        - name: clientCategoryId
          in: path
          schema:
            type: integer
          required: true
          description: ID of the client category that needs to be fetched
          example: 1
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ClientCategoryFull'
    put:
      tags:
        - Manifest APIs
        - Integrations Internal
        - Support APIs
      summary: Update Client Category
      description: Update a given client category.
      security:
        - basicAuth: []
      parameters:
        - name: clientCategoryId
          in: path
          schema:
            type: integer
          required: true
          description: ID of the client category that is to be updated
          example: 2
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{x-support-secret}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
      responses:
        '200':
          description: '200 response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  data:
                    $ref: '#/components/schemas/ClientCategoryBasic'

  # Internal OAuth endpoints
  /oauth/session:
    post:
      tags:
        - OAuth internal
        - Integrations Internal
      summary: Create session
      description: >-
        This is the first step of the Authorization process. It tells the server
        that the client wants to initiate an OAuth flow and hence create a
        session for the same.


        |Param|Description|

        |-----|-----------|

        |service|The 3rd party service for which the authorization needs to be
        done. Currently supported services - github, bitbucket, slack, dropbox|

        |tokenType|The type of the token that will be stored in the DB. There
        are two types of token supported now, **bulk_import** and
        **api_repository**|


        - **tokenType = bulk_import** -> The token used in the GitHub and
        Bitbucket bulk import flows.This is a non persistent token, stored in
        plain text in DB and cleared after every 3 hours by a cron job

        - **tokenType = api_repository** -> The token used in API Git
        integration flows. This is a persistent token and stored in an encrypted
        form in the DB.


        The server proceeds to verify the authenticity of the user, and the
        params and then creates a short lived session. The server then responds
        with a unique session id which will be used for the further call to get
        the token back from server.


        <h4> Note : </h4>

        For supporting backwards compatibility with older Apps (v7) there are
        two things done here


        1. Because there was no /authorize call used in v7 Apps, the
        authorization URL of 3rd party service was constructed manually on
        client side. Hence, this endpoint will return the information about
        registered OAuth app like client id and other information like state and
        scope to construct the URL

        2. If the tokenType parameter is omitted, by default we will assume it
        to be of type bulk_import. This again is to maintain backwards
        compatibility as v7 apps did not use to send any tokenType parameter.
      parameters:
        - name: service
          in: query
          schema:
            type: string
          description: 'values - github, bitbucket, dropbox, slack'
          example: '{{service}}'
        - name: tokenType
          in: query
          schema:
            type: string
          description: 'values - bulk_import, api_repository'
          example: '{{tokenType}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  message:
                    type: string
                  details:
                    type: object
                    required:
                      - param
                    properties:
                      param:
                        type: string
              examples:
                Example1:
                  value:
                    name: paramMissingError
                    message: Parameter is missing in the request.
                    details:
                      param: service
                Example2:
                  value:
                    name: invalidParamsError
                    message: The specified parameter is in an invalid format
                    details:
                      param: service
                Example3:
                  value:
                    name: invalidParamsError
                    message: The specified parameter is in an invalid format
                    details:
                      param: tokenType
          description: 400 - service missing
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: Something went wrong with the server
          description: 500 - internal server error
        default:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/createSessiondefaultResponseSubSchema'
                  - type: object
                    properties:
                      scope:
                        type: string
              example:
                sessionId: The id of the session
                clientId: The client Id of the registered github App
                state: The unique state hash to prevent man in the middle attacks
                scope: 'The scope to be asked to the provider, e.g. `repo`'
                oauthUrl: >-
                  The oauth url the the client needs to redirect the user to
                  authorize
                redirectUrl: The URL the provider needs to send information to
          description: 200 - success
  /oauth/session/{id}:
    get:
      tags:
        - OAuth internal
        - Integrations Internal
      summary: Get session information
      description: >-
        The id in the path param denotes the session id received in the create
        session call. This endpoint is used to fetch the session information
        (and token) from the server. The response varies based on the tokenType
        that we sent in the previous call


        If **token_type = bulk_import** -> the response contains the actual
        access token


        If **token_type = api_repository** -> the response contains the id of
        the token stored in the OAuth token table, which can be used later in
        API Git flows.
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/getSessionInformation200ResponseSubSchema
                  - type: object
                    properties:
                      createdAt:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                        format: color
                      updatedAt:
                        type: string
                        format: date-time
                      id:
                        type: string
              examples:
                Example1:
                  value:
                    createdAt: '2021-05-24T06:09:38.000Z'
                    createdBy: '477932'
                    expiresIn: 300000
                    updatedAt: '2021-05-24T06:09:45.000Z'
                    id: c79b9de6-5a2b-41d2-9886-b443a2be3895
                    token:
                      accessToken: 123-34435-fwef-qwd-f
                      createdAt: '2021-05-24T06:09:45.000Z'
                      createdBy: '477932'
                      expiresIn: null
                      scope: repo
                      service: github
                      type: bulk_import
                      updatedAt: '2021-05-24T06:09:45.000Z'
                      variables: null
                Example2:
                  value:
                    createdAt: '2021-05-24T06:09:38.000Z'
                    createdBy: '477932'
                    expiresIn: 300000
                    updatedAt: '2021-05-24T06:09:45.000Z'
                    id: c79b9de6-5a2b-41d2-9886-b443a2be3895
                    tokenId: 1456
          description: 200 success bulk_import tokenType
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: sessionExpired
                  message: The session expired for the provided session id
          description: 400 - session expired
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
          description: 403 - forbidden error (authenticated user does not own the session)
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: sessionNotFound
                  message: The requested session could not be found.
          description: 404 - session not found

  # API Git integration endpoints (Pre connection, CRUD, and Post connection APIs)
  /git/api-repository:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get an API Repository link
      description: Get an API Repository link
      operationId: getAnApiRepositoryLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  api:
                    type: string
                    example: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                  apiVersion:
                    type: string
                    example: 1d2-c2ec234ec-c123e12d2w-12d
                  createdAt:
                    type: string
                    example: "2021-03-17T10:31:10.000Z"
                  createdBy:
                    type: string
                    example: "477932"
                  id:
                    type: number
                    example: 73
                  releaseTags:
                    type: array
                    items:
                      type: object
                      properties:
                        apiVersionRepository:
                          type: string
                          example: "21"
                        createdAt:
                          type: string
                          example: "2021-02-26T17:08:11.000Z"
                        createdBy:
                          type: string
                          example: "644823"
                        id:
                          type: string
                          example: "1"
                        lastUpdatedBy:
                          type: string
                          example: "644823"
                        release:
                          type: string
                          example: 12ed-2x23d2-3d23w
                        tag:
                          type: string
                          example: 1.0.0
                        updatedAt:
                          type: string
                          example: "2021-02-26T17:08:11.000Z"
                    example:
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "1"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d23w
                        tag: 1.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "2"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d2d12
                        tag: 2.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "3"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-1332s
                        tag: 3.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                  repository:
                    type: object
                    properties:
                      createdAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                      createdBy:
                        type: string
                        example: "477932"
                      customDomain:
                        nullable: true
                        example: ~
                      id:
                        type: number
                        example: 73
                      info:
                        type: object
                        properties:
                          id:
                            type: string
                            example: test
                          name:
                            type: string
                            example: test
                          owner:
                            type: object
                            properties:
                              id:
                                type: string
                                example: shreys7
                              name:
                                type: string
                                example: shreys7
                      links:
                        type: object
                        properties:
                          branch_url:
                            type: string
                            example: "https://github.com/shreys7/test/tree/develop"
                          repository_url:
                            type: string
                            example: "https://github.com/shreys7/test"
                      service:
                        type: string
                        example: github
                      team:
                        type: number
                        example: 1
                      transactionId:
                        nullable: true
                        example: ~
                      updatedAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                  state:
                    type: string
                    example: active
                  tokenId:
                    type: number
                    example: 1842
                  token_state:
                    type: string
                    example: active
                  transactionId:
                    nullable: true
                    example: ~
                  updatedAt:
                    type: string
                    example: "2021-03-18T18:36:27.000Z"
                  updatedBy:
                    type: string
                    example: "477932"
                  userConfig:
                    type: object
                    properties:
                      branches:
                        type: object
                        properties:
                          develop:
                            type: string
                            example: develop
                          main:
                            type: string
                            example: master
                      entities:
                        type: object
                        properties:
                          collections:
                            type: object
                            properties:
                              entityFileMap:
                                type: object
                                properties:
                                  C1:
                                    type: string
                                    example: C1_1MB.txt
                                  C2:
                                    type: string
                                    example: C2_5MB.txt
                              rootDirectory:
                                type: string
                                example: postman/collections
                          schemas:
                            type: object
                            properties:
                              entityFileMap:
                                type: object
                                properties:
                                  S1:
                                    type: string
                                    example: S1_1MB.txt
                              rootDirectory:
                                type: string
                                example: postman/schemas
              examples:
                200 OK:
                  value:
                    api: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                    apiVersion: 1d2-c2ec234ec-c123e12d2w-12d
                    createdAt: "2021-03-17T10:31:10.000Z"
                    createdBy: "477932"
                    id: 73
                    releaseTags:
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "1"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d23w
                        tag: 1.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "2"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d2d12
                        tag: 2.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "3"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-1332s
                        tag: 3.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                    repository:
                      createdAt: "2021-03-17T10:31:10.000Z"
                      createdBy: "477932"
                      customDomain: ~
                      id: 73
                      info:
                        id: test
                        name: test
                        owner:
                          id: shreys7
                          name: shreys7
                      links:
                        branch_url: "https://github.com/shreys7/test/tree/develop"
                        repository_url: "https://github.com/shreys7/test"
                      service: github
                      team: 1
                      transactionId: ~
                      updatedAt: "2021-03-17T10:31:10.000Z"
                    state: active
                    tokenId: 1842
                    token_state: active
                    transactionId: ~
                    updatedAt: "2021-03-18T18:36:27.000Z"
                    updatedBy: "477932"
                    userConfig:
                      branches:
                        develop: develop
                        main: master
                      entities:
                        collections:
                          entityFileMap:
                            C1: C1_1MB.txt
                            C2: C2_5MB.txt
                          rootDirectory: postman/collections
                        schemas:
                          entityFileMap:
                            S1: S1_1MB.txt
                          rootDirectory: postman/schemas
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    put:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Update an API Repository link
      description: Update an API Repository link
      operationId: updateAnApiRepositoryLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                branches:
                  type: string
                  example: "an object with key as the branch key, and values as the original branch name"
                entityFileMap:
                  type: object
                  properties:
                    link:
                      type: array
                      items:
                        type: object
                        properties:
                          entityId:
                            type: string
                            example: entity id
                          entityName:
                            type: string
                            example: entity name
                          entityType:
                            type: string
                            example: entity type
                      example:
                        - entityId: entity id
                          entityName: entity name
                          entityType: entity type
                    unlink:
                      type: array
                      items:
                        type: object
                        properties:
                          entityId:
                            type: string
                            example: entity id
                          entityType:
                            type: string
                            example: entity type
                      example:
                        - entityId: entity id
                          entityType: entity type
                paths:
                  type: object
                  properties:
                    collection:
                      type: string
                      example: the path where we should sync collections
                    schema:
                      type: string
                      example: the path where we should sync schemas
                    stub:
                      type: string
                      example: the path where we should sync server stubs
                tokenId:
                  type: string
                  example: "the id of the token to attach to the repository, can be used while reauthorizing"
            example:
              branches: "an object with key as the branch key, and values as the original branch name"
              entityFileMap:
                link:
                  - entityId: entity id
                    entityName: entity name
                    entityType: entity type
                unlink:
                  - entityId: entity id
                    entityType: entity type
              paths:
                collection: the path where we should sync collections
                schema: the path where we should sync schemas
                stub: the path where we should sync server stubs
              tokenId: "the id of the token to attach to the repository, can be used while reauthorizing"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiRepository:
                    type: object
                    properties:
                      api:
                        type: string
                        example: xsax-123-cssdc-234234asfs
                      apiVersion:
                        type: string
                        example: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                      createdBy:
                        type: string
                        example: "12324"
                      id:
                        type: string
                        example: "1"
                      releaseTags:
                        type: array
                        items: {}
                        example: []
                      repository:
                        type: object
                        properties:
                          createdAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                          createdBy:
                            type: string
                            example: "477932"
                          id:
                            type: number
                            example: 73
                          info:
                            type: object
                            properties:
                              id:
                                type: string
                                example: test
                              name:
                                type: string
                                example: test
                              owner:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: shreys7
                                  name:
                                    type: string
                                    example: shreys7
                          service:
                            type: string
                            example: github
                          tokenId:
                            type: number
                            example: 1842
                          transactionId:
                            nullable: true
                            example: ~
                          updatedAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                      state:
                        type: string
                        example: active
                      transactionId:
                        nullable: true
                        example: ~
                      updatedAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                      updatedBy:
                        type: string
                        example: "21212"
                      userConfig:
                        type: object
                        properties:
                          branches:
                            type: object
                            properties:
                              develop:
                                type: string
                                example: develop
                              featureBranch:
                                type: string
                                example: feature/A
                              main:
                                type: string
                                example: master
                          entities:
                            type: object
                            properties:
                              collection:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      1ed12-12dqwx-12d12d1:
                                        type: string
                                        example: payments_monitor.json
                                      1edwq-12dqwd-12e12el:
                                        type: string
                                        example: payments_documentation.json
                                      c12-123-123-dq2d-12:
                                        type: string
                                        example: document.json
                                  rootDirectory:
                                    type: string
                                    example: /collections/paymentsv1/collections
                              schema:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      1edwq-12dqwd-12e12el:
                                        type: string
                                        example: payments_schema.yml
                                  rootDirectory:
                                    type: string
                                    example: /postman/schemas
                              stub:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      api-1edwq-12dqwd-12e12e-stub:
                                        type: string
                                        example: payments_stub.js
                                  rootDirectory:
                                    type: string
                                    example: /postman/stubs
                  result:
                    type: boolean
                    example: true
              examples:
                200 OK:
                  value:
                    apiRepository:
                      api: xsax-123-cssdc-234234asfs
                      apiVersion: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt: "2021-02-26T17:08:11.000Z"
                      createdBy: "12324"
                      id: "1"
                      releaseTags: []
                      repository:
                        createdAt: "2021-03-17T10:31:10.000Z"
                        createdBy: "477932"
                        id: 73
                        info:
                          id: test
                          name: test
                          owner:
                            id: shreys7
                            name: shreys7
                        service: github
                        tokenId: 1842
                        transactionId: ~
                        updatedAt: "2021-03-17T10:31:10.000Z"
                      state: active
                      transactionId: ~
                      updatedAt: "2021-02-26T17:08:11.000Z"
                      updatedBy: "21212"
                      userConfig:
                        branches:
                          develop: develop
                          featureBranch: feature/A
                          main: master
                        entities:
                          collection:
                            entityFileMap:
                              1ed12-12dqwx-12d12d1: payments_monitor.json
                              1edwq-12dqwd-12e12el: payments_documentation.json
                              c12-123-123-dq2d-12: document.json
                            rootDirectory: /collections/paymentsv1/collections
                          schema:
                            entityFileMap:
                              1edwq-12dqwd-12e12el: payments_schema.yml
                            rootDirectory: /postman/schemas
                          stub:
                            entityFileMap:
                              api-1edwq-12dqwd-12e12e-stub: payments_stub.js
                            rootDirectory: /postman/stubs
                    result: true
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "403":
          description: 403 no access to edit API
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: You do not have access to perform this action on the API
                          model:
                            type: string
                            example: apirepository
                          owner:
                            type: string
                            example: shreys7
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 no access to edit API:
                  value:
                    error:
                      details:
                        message: You do not have access to perform this action on the API
                        model: apirepository
                        owner: shreys7
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Link an API to a Repository
      description: Link an API to a Repository
      operationId: linkAnApiToARepository
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api:
                  type: string
                  example: API id
                apiVersion:
                  type: string
                  example: API version id
                customDomain:
                  type: string
                  example: "Optional, the URL for the on-prem integrations"
                repository:
                  type: object
                  properties:
                    id:
                      type: string
                      example: id of the selected repository
                    name:
                      type: string
                      example: name of the selected repository
                    owner:
                      type: object
                      properties:
                        id:
                          type: string
                          example: the id of the owner
                        name:
                          type: string
                          example: the name of the owner
                service:
                  type: string
                  example: "3rd party service provider, e.g. github"
                tokenId:
                  type: string
                  example: the id of the OAuth token
                userConfig:
                  type: object
                  properties:
                    branches:
                      type: object
                      properties:
                        develop:
                          type: string
                          example: the development branch used for pushing/pulling the changes
                        main:
                          type: string
                          example: the main branch used for tracking releases
                    paths:
                      type: object
                      properties:
                        collection:
                          type: string
                          example: the path where we should sync collections
                        schema:
                          type: string
                          example: the path where we should sync schemas
                        stub:
                          type: string
                          example: the path where we should sync server stubs
            example:
              api: API id
              apiVersion: API version id
              customDomain: "Optional, the URL for the on-prem integrations"
              repository:
                id: id of the selected repository
                name: name of the selected repository
                owner:
                  id: the id of the owner
                  name: the name of the owner
              service: "3rd party service provider, e.g. github"
              tokenId: the id of the OAuth token
              userConfig:
                branches:
                  develop: the development branch used for pushing/pulling the changes
                  main: the main branch used for tracking releases
                paths:
                  collection: the path where we should sync collections
                  schema: the path where we should sync schemas
                  stub: the path where we should sync server stubs
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiRepository:
                    type: object
                    properties:
                      api:
                        type: string
                        example: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                      apiVersion:
                        type: string
                        example: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                      createdBy:
                        type: string
                        example: "477932"
                      id:
                        type: number
                        example: 73
                      releaseTags:
                        type: array
                        items: {}
                        example: []
                      repository:
                        type: object
                        properties:
                          createdAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                          createdBy:
                            type: string
                            example: "477932"
                          id:
                            type: number
                            example: 73
                          info:
                            type: object
                            properties:
                              id:
                                type: string
                                example: test
                              name:
                                type: string
                                example: test
                              owner:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: shreys7
                                  name:
                                    type: string
                                    example: shreys7
                          service:
                            type: string
                            example: github
                          tokenId:
                            type: number
                            example: 1842
                          transactionId:
                            nullable: true
                            example: ~
                          updatedAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                      state:
                        type: string
                        example: active
                      transactionId:
                        nullable: true
                        example: ~
                      updatedAt:
                        type: string
                        example: "2021-03-18T18:36:27.000Z"
                      updatedBy:
                        type: string
                        example: "477932"
                      userConfig:
                        type: object
                        properties:
                          branches:
                            type: object
                            properties:
                              develop:
                                type: string
                                example: develop
                              main:
                                type: string
                                example: master
                          entities:
                            type: object
                            properties:
                              collections:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      C1:
                                        type: string
                                        example: C1_1MB.txt
                                      C2:
                                        type: string
                                        example: C2_5MB.txt
                                  rootDirectory:
                                    type: string
                                    example: postman/collections
                              schemas:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      S1:
                                        type: string
                                        example: S1_1MB.txt
                                  rootDirectory:
                                    type: string
                                    example: postman/schemas
                  result:
                    type: boolean
                    example: true
              examples:
                200 OK:
                  value:
                    apiRepository:
                      api: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                      apiVersion: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt: "2021-03-17T10:31:10.000Z"
                      createdBy: "477932"
                      id: 73
                      releaseTags: []
                      repository:
                        createdAt: "2021-03-17T10:31:10.000Z"
                        createdBy: "477932"
                        id: 73
                        info:
                          id: test
                          name: test
                          owner:
                            id: shreys7
                            name: shreys7
                        service: github
                        tokenId: 1842
                        transactionId: ~
                        updatedAt: "2021-03-17T10:31:10.000Z"
                      state: active
                      transactionId: ~
                      updatedAt: "2021-03-18T18:36:27.000Z"
                      updatedBy: "477932"
                      userConfig:
                        branches:
                          develop: develop
                          main: master
                        entities:
                          collections:
                            entityFileMap:
                              C1: C1_1MB.txt
                              C2: C2_5MB.txt
                            rootDirectory: postman/collections
                          schemas:
                            entityFileMap:
                              S1: S1_1MB.txt
                            rootDirectory: postman/schemas
                    result: true
        "400":
          description: 400 repository+branch combination linked to an API Version from a different API
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This repository/branch is already link to an API version from different API
                      message:
                        type: string
                        example: This repository/branch is already link to an API version from different API
                      name:
                        type: string
                        example: repositoryAlreadyLinkedError
              examples:
                400 repository+branch combination linked to an API Version from a different API:
                  value:
                    error:
                      details:
                        message: This repository/branch is already link to an API version from different API
                      message: This repository/branch is already link to an API version from different API
                      name: repositoryAlreadyLinkedError
        "403":
          description: 403 - IDOR check - Not enough permissions.
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 04:54:46 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"d5-cw7+s2eTIn+bfpqXD5DFKg\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=688515f74d5ec079
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=a57dcd0e26285ffc
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: You do not have access to perform this operation
                          model:
                            type: string
                            example: apiversionrepository
                          owner:
                            type: string
                            example: "462940"
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 - IDOR check - Not enough permissions.:
                  value:
                    error:
                      details:
                        message: You do not have access to perform this operation
                        model: apiversionrepository
                        owner: "462940"
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 token not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: object
                    properties:
                      model:
                        type: string
                        example: OAuthToken
                      model_id:
                        type: number
                        example: 9999
                  message:
                    type: string
                    example: We could not find the OAuth token you are looking for
                  name:
                    type: string
                    example: instanceNotFoundError
              examples:
                404 token not found:
                  value:
                    details:
                      model: OAuthToken
                      model_id: 9999
                    message: We could not find the OAuth token you are looking for
                    name: instanceNotFoundError
    delete:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Unlink an API from a Repository
      description: Unlink an API from a Repository
      operationId: unlinkAnApiFromARepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "true"
              examples:
                200 OK:
                  value:
                    result: "true"
        "403":
          description: 403 no access to edit API
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: You do not have access to perform this action on the API
                          model:
                            type: string
                            example: apirepository
                          owner:
                            type: string
                            example: shreys7
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 no access to edit API:
                  value:
                    error:
                      details:
                        message: You do not have access to perform this action on the API
                        model: apirepository
                        owner: shreys7
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/api-repository/branches:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: List branches of a linked repository
      description: List branches of a linked repository
      operationId: listBranchesOfALinkedRepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  branches:
                    type: array
                    items:
                      type: object
                      properties:
                        commit:
                          type: string
                          example: d23234
                        link:
                          type: string
                          example: "https://github.com/shubhamjoshi/repository/tree/master"
                        name:
                          type: string
                          example: master
                    example:
                      - commit: d23234
                        link: "https://github.com/shubhamjoshi/repository/tree/master"
                        name: master
                      - commit: dd2314
                        link: "https://github.com/shubhamjoshi/repository/tree/develop"
                        name: develop
                      - commit: c2q121
                        link: "https://github.com/shubhamjoshi/repository/tree/feature/api-backup"
                        name: feature/api-backup
              examples:
                200 OK:
                  value:
                    branches:
                      - commit: d23234
                        link: "https://github.com/shubhamjoshi/repository/tree/master"
                        name: master
                      - commit: dd2314
                        link: "https://github.com/shubhamjoshi/repository/tree/develop"
                        name: develop
                      - commit: c2q121
                        link: "https://github.com/shubhamjoshi/repository/tree/feature/api-backup"
                        name: feature/api-backup
        "404":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: abc
                      message:
                        type: string
                        example: We could not find the repository you are looking for
                      name:
                        type: string
                        example: repositoryNotFoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      details:
                        name: abc
                      message: We could not find the repository you are looking for
                      name: repositoryNotFoundError
  /git/api-repository/changes:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Pull the contents from a repository
      description: Pull the contents from a repository
      operationId: pullTheContentsFromARepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: "the branch to pull the changes from, which is tracked in userConfig"
        - name: tag
          in: query
          schema:
            type: string
            example: "{{tag}}"
          description: the tag name to pull the changes from
        - name: commit
          in: query
          schema:
            type: string
            example: "{{commit}}"
          description: the commit sha to pull the changes from
      responses:
        "200":
          description: 200 Feature branch
          content:
            text/plain:
              examples:
                200 Feature branch:
                  value: "{\n\"commit\": {\n    \"sha\": \"2c8d64313a828f0f4ba1d917691692f64e551d5c\",\n    \"message\": \"Commit via the commit function for Bitbucket LOCALHOST\",\n    \"date\": \"2021-03-23T08:19:25+00:00\",\n    \"author_name\": \"Shubham Joshi\",\n    // author_username may or may not appear in the response\n    \"author_username\": \"Shubham Joshi <shubham.joshi@postman.com>\",\n    \"committer_name\": \"Shubham Joshi\",\n    // committer_username may or may not appear in the response\n    \"committer_username\": \"Shubham Joshi <shubham.joshi@postman.com>\",\n    \"parents\": [\n        \"6d5bef77198ce695fdb2852ab783f0c67fcc4f59\"\n    ],\n    \"link\": \"https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443\"\n  },  \n  \"collections\": {\n    \"files\": [\n      {\n        \"name\": \"payments_documentation.json\",\n        \"path\": \"postman/collections/payments_documentation.json\",\n        \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json\"\n      },\n      {\n        \"name\": \"payments_monitor.json\",\n        \"path\": \"postman/collections/payments_monitor.json\",\n        \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json\"\n      },\n      {\n        \"name\": \"payments_tests.json\",\n        \"path\": \"postman/collections/payments_tests.json\",\n        \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/collections/payments_tests.json\"\n      }\n    ]\n  },\n  \"schemas\": {\n    \"files\": [\n      {\n        \"name\": \"payments_schema.yml\",\n        \"path\": \"postman/schemas/payments_schema.yml\",\n        \"download_url\":\"https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml\"\n      }\n    ]\n  },\n  \"stubs\": {\n    \"files\": [\n      {\n        \"name\": \"payments_code.js\",\n        \"path\": \"postman/stubs/payments_stub.js\",\n        \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js\"\n      }\n    ]\n  }\n}"
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "404":
          description: "404 - Tag doesn't exist"
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 06:28:01 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"a9-H0QTOb1AAt4TVheeopfvvQ\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=609b2c5a7bf91fb2
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=7b38a05c7d938a9e
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalid
                      message:
                        type: string
                        example: We could not find the tag you are looking for. The tag may have been deleted or renamed.
                      name:
                        type: string
                        example: tagNotFoundError
              examples:
                "404 - Tag doesn't exist":
                  value:
                    error:
                      details:
                        params: invalid
                      message: We could not find the tag you are looking for. The tag may have been deleted or renamed.
                      name: tagNotFoundError
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Create/update/delete files in a repository branch
      description: Create/update/delete files in a repository branch
      operationId: createUpdateDeleteFilesInARepositoryBranch
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: the branch to which the changes needs to be pushed to
      requestBody:
        content:
          text/plain:
            example: "{\n  \"commitMessage\": \"The commit message while performing the action\",\n  \"lastCommit\": \"The commit id which the consumer has last pulled off from\",\n  \"actions\": {\n    \"create\": [\n      {\n        \"entityType\": \"the type of entity\",\n        \"entityId\": \"the id of the entity\",\n        \"entityName\": \"the name of the file to be created on 3rd party service\",\n        \"file\": {\n          \"type\": \"raw/link\",\n          \"contents\": \"actual content if the type is raw, else a link\"\n        }\n      }\n      // ... more files to be created\n    ],\n    \"update\": [\n      {\n        \"entityType\": \"the type of entity\",\n        \"entityId\": \"the id of the entity\",\n        \"file\": {\n          \"type\": \"raw/link\",\n          \"contents\": \"actual content if the type is raw, else a link\"\n        }\n      }\n      // ... more files to be updated\n    ],\n    \"delete\": [\n      {\n        \"entityType\": \"the type of entity\",\n        \"entityId\": \"the id of the entity\"\n      }\n      // ... more files to be deleted\n    ] \n  }\n}"
      responses:
        "200":
          description: 200 OK - for feature branches
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    type: object
                    properties:
                      link:
                        type: string
                        example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message:
                        type: string
                        example: Added payments schema
                      sha:
                        type: string
                        example: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
              examples:
                200 OK - for feature branches:
                  value:
                    commit:
                      link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message: Added payments schema
                      sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
        "400":
          description: 400 invalid commitMessage
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: commitMessage
                      message:
                        type: string
                        example: The parameter is in an invalid format
                      name:
                        type: string
                        example: invalidParamsError
              examples:
                400 invalid commitMessage:
                  value:
                    error:
                      details:
                        param: commitMessage
                      message: The parameter is in an invalid format
                      name: invalidParamsError
        "409":
          description: 409 Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: string
                        example: Conflicts encountered while committing the files.
                      message:
                        type: string
                        example: error message
                      name:
                        type: string
                        example: githubConflictError
              examples:
                409 Conflict:
                  value:
                    error:
                      details: Conflicts encountered while committing the files.
                      message: error message
                      name: githubConflictError
  /git/api-repository/commits:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Fetch commits of a repository
      description: Fetch commits of a repository
      operationId: fetchCommitsOfARepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
      responses:
        "200":
          description: 200 OK
          content:
            text/plain:
              examples:
                200 OK:
                  value: "{\n    \"commits\": [\n        {\n            \"sha\": \"cd435nf\",\n            \"message\": \"Update payments schema\",\n            \"date\": \"2012-05-28T04:42:42-07:00\",\n            \"author_name\": \"shreys7\",\n            // author_username may or may not appear in the response\n            \"author_username\": \"the username of the author\",\n            \"committer_name\": \"shreys7\",\n            // committer_username may or may not appear in the response\n            \"committer_username\": \"the username of the author\",\n            \"link\": \"https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443\",\n            \"parents\": [\n                \"c5b97d5\"\n            ]\n        },\n        {\n            \"sha\": \"2neqw2\",\n            \"message\": \"Add /user to payments schema\",\n            \"date\": \"2012-05-28T04:42:42-07:00\",\n            \"author_name\": \"shreys7\",\n            \"committer_name\": \"shreys7\",\n            \"link\": \"https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443\",\n            \"parents\": [\n                \"c5b97d5\"\n            ]\n        }\n    ]\n}"
        "400":
          description: 400 branch not tracked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: random
                      message:
                        type: string
                        example: We could not find the branch you are looking for. The branch may have been deleted or renamed.
                      name:
                        type: string
                        example: branchNotFoundError
              examples:
                400 branch not tracked:
                  value:
                    error:
                      details:
                        params: random
                      message: We could not find the branch you are looking for. The branch may have been deleted or renamed.
                      name: branchNotFoundError
        "404":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/api-repository/commits/compare/{commit}:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Compare commit
      description: Compare commit
      operationId: compareCommit
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: Optional; defaults to develop when not sent - the branch to which the commit needs to be compared to.
      responses:
        "200":
          description: 200 OK - Feature branch
          content:
            application/json:
              schema:
                type: object
                properties:
                  commits:
                    type: array
                    items:
                      type: object
                      properties:
                        author_name:
                          type: string
                          example: Shrey Shah
                        author_username:
                          type: string
                          example: Shrey Shah
                        committer_name:
                          type: string
                          example: Shrey Shah
                        committer_username:
                          type: string
                          example: shreys7
                        date:
                          type: string
                          example: "2012-05-28T04:42:42-07:00"
                        files:
                          type: array
                          items:
                            type: object
                            properties:
                              additions:
                                type: string
                                example: "1"
                              changes:
                                type: string
                                example: "2"
                              deletions:
                                type: string
                                example: "1"
                              download_url:
                                type: string
                                example: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                              full_name:
                                type: string
                                example: postman/collections/paymets_documentation.json
                              name:
                                type: string
                                example: payments_stub.js
                              path:
                                type: string
                                example: postman/stubs/payments_stub.js
                              status:
                                type: string
                                example: added
                          example:
                            - additions: "1"
                              changes: "2"
                              deletions: "1"
                              download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                              name: payments_stub.js
                              path: postman/stubs/payments_stub.js
                              status: added
                            - additions: "1"
                              changes: "2"
                              deletions: "1"
                              download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                              full_name: postman/collections/paymets_documentation.json
                              name: paymets_documentation.json
                              status: modified
                            - additions: "1"
                              changes: "2"
                              deletions: "1"
                              download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                              full_name: postman/collections/payments_monitor.json
                              name: payments_monitor.json
                              status: removed
                        link:
                          type: string
                          example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                        message:
                          type: string
                          example: Update via api
                        parents:
                          type: array
                          items:
                            type: string
                            example: aasd678
                          example:
                            - aasd678
                        sha:
                          type: string
                          example: cd435nf
                        stats:
                          type: object
                          properties:
                            additions:
                              type: number
                              example: 2
                            deletions:
                              type: number
                              example: 1
                            total:
                              type: number
                              example: 3
                    example:
                      - author_name: Shrey Shah
                        author_username: Shrey Shah
                        committer_name: Shrey Shah
                        committer_username: shreys7
                        date: "2012-05-28T04:42:42-07:00"
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                            name: payments_stub.js
                            path: postman/stubs/payments_stub.js
                            status: added
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                            full_name: postman/collections/paymets_documentation.json
                            name: paymets_documentation.json
                            status: modified
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                            full_name: postman/collections/payments_monitor.json
                            name: payments_monitor.json
                            status: removed
                        link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                        message: Update via api
                        parents:
                          - aasd678
                        sha: cd435nf
                        stats:
                          additions: 2
                          deletions: 1
                          total: 3
                      - author_name: Shrey Shah
                        author_username: Shrey Shah
                        committer_name: Shrey Shah
                        committer_username: shreys7
                        date: "2012-05-27T04:42:42-07:00"
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                            full_name: postman/schemas/payments_schema.yml
                            name: payments_schema.yml
                            status: modified
                        link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                        message: Update payments schema
                        parents:
                          - c5b97d5
                        sha: aasd678
                        stats:
                          additions: 1
                          deletions: 0
                          total: 1
                  entities:
                    type: object
                    properties:
                      collections:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                additions:
                                  type: string
                                  example: "1"
                                changes:
                                  type: string
                                  example: "2"
                                deletions:
                                  type: string
                                  example: "1"
                                download_url:
                                  type: string
                                  example: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                                name:
                                  type: string
                                  example: paymets_documentation.json
                                path:
                                  type: string
                                  example: postman/collections/paymets_documentation.json
                                status:
                                  type: string
                                  example: modified
                            example:
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                                name: paymets_documentation.json
                                path: postman/collections/paymets_documentation.json
                                status: modified
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                                name: payments_monitor.json
                                path: postman/collections/payments_monitor.json
                                status: removed
                          rootDirectory:
                            type: string
                            example: postman/collections
                      schemas:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                additions:
                                  type: string
                                  example: "1"
                                changes:
                                  type: string
                                  example: "2"
                                deletions:
                                  type: string
                                  example: "1"
                                download_url:
                                  type: string
                                  example: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                                name:
                                  type: string
                                  example: payments_stub.js
                                path:
                                  type: string
                                  example: postman/stubs/payments_stub.js
                                status:
                                  type: string
                                  example: added
                            example:
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                                name: payments_stub.js
                                path: postman/stubs/payments_stub.js
                                status: added
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                                name: payments_schema.yml
                                path: postman/schemas/payments_schema.yml
                                status: modified
                          rootDirectory:
                            type: string
                            example: postman/schemas
                      stubs:
                        type: object
                        properties:
                          rootDirectory:
                            type: string
                            example: postman/stubs
                  remote_head:
                    type: object
                    properties:
                      author_name:
                        type: string
                        example: Shrey Shah
                      author_username:
                        type: string
                        example: Shrey Shah
                      committer_name:
                        type: string
                        example: Shrey Shah
                      committer_username:
                        type: string
                        example: shreys7
                      date:
                        type: string
                        example: "2012-05-28T04:42:42-07:00"
                      link:
                        type: string
                        example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message:
                        type: string
                        example: Update via api
                      parents:
                        type: array
                        items:
                          type: string
                          example: aasd678
                        example:
                          - aasd678
                      sha:
                        type: string
                        example: cd435nf
                      stats:
                        type: object
                        properties:
                          additions:
                            type: number
                            example: 1
                          deletions:
                            type: number
                            example: 0
                          total:
                            type: number
                            example: 1
              examples:
                200 OK - Feature branch:
                  value:
                    commits:
                      - author_name: Shrey Shah
                        author_username: Shrey Shah
                        committer_name: Shrey Shah
                        committer_username: shreys7
                        date: "2012-05-28T04:42:42-07:00"
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                            name: payments_stub.js
                            path: postman/stubs/payments_stub.js
                            status: added
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                            full_name: postman/collections/paymets_documentation.json
                            name: paymets_documentation.json
                            status: modified
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                            full_name: postman/collections/payments_monitor.json
                            name: payments_monitor.json
                            status: removed
                        link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                        message: Update via api
                        parents:
                          - aasd678
                        sha: cd435nf
                        stats:
                          additions: 2
                          deletions: 1
                          total: 3
                      - author_name: Shrey Shah
                        author_username: Shrey Shah
                        committer_name: Shrey Shah
                        committer_username: shreys7
                        date: "2012-05-27T04:42:42-07:00"
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                            full_name: postman/schemas/payments_schema.yml
                            name: payments_schema.yml
                            status: modified
                        link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                        message: Update payments schema
                        parents:
                          - c5b97d5
                        sha: aasd678
                        stats:
                          additions: 1
                          deletions: 0
                          total: 1
                    entities:
                      collections:
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                            name: paymets_documentation.json
                            path: postman/collections/paymets_documentation.json
                            status: modified
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                            name: payments_monitor.json
                            path: postman/collections/payments_monitor.json
                            status: removed
                        rootDirectory: postman/collections
                      schemas:
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                            name: payments_stub.js
                            path: postman/stubs/payments_stub.js
                            status: added
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                            name: payments_schema.yml
                            path: postman/schemas/payments_schema.yml
                            status: modified
                        rootDirectory: postman/schemas
                      stubs:
                        rootDirectory: postman/stubs
                    remote_head:
                      author_name: Shrey Shah
                      author_username: Shrey Shah
                      committer_name: Shrey Shah
                      committer_username: shreys7
                      date: "2012-05-28T04:42:42-07:00"
                      link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message: Update via api
                      parents:
                        - aasd678
                      sha: cd435nf
                      stats:
                        additions: 1
                        deletions: 0
                        total: 1
        "400":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: abc
                      message:
                        type: string
                        example: We could not find the repository/commit you are looking for
                      name:
                        type: string
                        example: repositoryNotFoundError/commitNotfoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      details:
                        name: abc
                      message: We could not find the repository/commit you are looking for
                      name: repositoryNotFoundError/commitNotfoundError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    parameters:
      - name: commit
        in: path
        required: true
        schema:
          type: string
          example: ""
  /git/api-repository/commits/{commit}:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Fetch a single commit
      description: Fetch a single commit
      operationId: fetchASingleCommit
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            text/plain:
              examples:
                200 OK:
                  value: "{\n    \"sha\": \"cd435nf\",\n    \"message\": \"Update payments schema\",\n    \"date\": \"2012-05-28T04:42:42-07:00\",\n    \"author_name\": \"Shrey Shah\",\n    // author_username may or may not appear in the response\n    \"author_username\": \"Shrey Shah\",\n    \"committer_name\": \"Shrey Shah\",\n    // committer_username may or may not appear in the response\n    \"committer_username\": \"shreys7\",\n    \"parents\": [\"c5b97d5\"],\n    \"link\": \"https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443\",\n    \"stats\": {\n        \"total\": 1,\n        \"additions\": 1,\n        \"deletions\": 0\n    },\n    \"files\": [\n        {\n          \"name\": \"payments_stub.js\",\n          \"path\": \"postman/stubs/payments_stub.js\",\n          \"status\": \"added\",\n          \"additions\": \"1\",\n          \"deletions\": \"1\",\n          \"changes\": \"2\",\n          \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js\"\n        },\n        {\n          \"name\": \"paymets_documentation.json\",\n          \"full_name\": \"postman/collections/paymets_documentation.json\",\n          \"status\": \"modified\",\n          \"additions\": \"1\",\n          \"deletions\": \"1\",\n          \"changes\": \"2\",\n          \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json\"\n        },\n        {\n          \"name\": \"payments_monitor.json\",\n          \"full_name\": \"postman/collections/payments_monitor.json\",\n          \"status\": \"removed\",\n          \"additions\": \"1\",\n          \"deletions\": \"1\",\n          \"changes\": \"2\",\n          \"download_url\": \"https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json\"\n        }\n    ]\n}"
        "400":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: abc
                      message:
                        type: string
                        example: We could not find the repository/commit you are looking for
                      name:
                        type: string
                        example: repositoryNotFoundError/commitNotfoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      details:
                        name: abc
                      message: We could not find the repository/commit you are looking for
                      name: repositoryNotFoundError/commitNotfoundError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    parameters:
      - name: commit
        in: path
        required: true
        schema:
          type: string
          example: ""
  /git/api-repository/contents:
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get the contents of files
      description: Get the contents of files
      operationId: getTheContentsOfFiles
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    example: path1
                  example:
                    - path1
                    - path2
            example:
              files:
                - path1
                - path2
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        commit:
                          type: object
                          properties:
                            author_name:
                              type: string
                              example: Shubham Joshi
                            author_username:
                              type: string
                              example: Shubham Joshi <shubham.joshi@postman.com>
                            committer_name:
                              type: string
                              example: Shubham Joshi
                            committer_username:
                              type: string
                              example: Shubham Joshi <shubham.joshi@postman.com>
                            date:
                              type: string
                              example: "2021-03-23T08:19:25+00:00"
                            link:
                              type: string
                              example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                            message:
                              type: string
                              example: Commit via the commit function for Bitbucket LOCALHOST
                            parents:
                              type: array
                              items:
                                type: string
                                example: 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                              example:
                                - 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                            sha:
                              type: string
                              example: 2c8d64313a828f0f4ba1d917691692f64e551d5c
                            stats:
                              type: object
                              properties:
                                additions:
                                  type: number
                                  example: 1
                                deletions:
                                  type: number
                                  example: 0
                                total:
                                  type: number
                                  example: 1
                        file:
                          type: object
                          properties:
                            download_url:
                              type: string
                              example: "https://raw.githubusercontent/postman/schema.json"
                            name:
                              type: string
                              example: schema.json
                            path:
                              type: string
                              example: postman/schema.json
                    example:
                      - commit:
                          author_name: Shubham Joshi
                          author_username: Shubham Joshi <shubham.joshi@postman.com>
                          committer_name: Shubham Joshi
                          committer_username: Shubham Joshi <shubham.joshi@postman.com>
                          date: "2021-03-23T08:19:25+00:00"
                          link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                          message: Commit via the commit function for Bitbucket LOCALHOST
                          parents:
                            - 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                          sha: 2c8d64313a828f0f4ba1d917691692f64e551d5c
                          stats:
                            additions: 1
                            deletions: 0
                            total: 1
                        file:
                          download_url: "https://raw.githubusercontent/postman/schema.json"
                          name: schema.json
                          path: postman/schema.json
              examples:
                "200":
                  value:
                    files:
                      - commit:
                          author_name: Shubham Joshi
                          author_username: Shubham Joshi <shubham.joshi@postman.com>
                          committer_name: Shubham Joshi
                          committer_username: Shubham Joshi <shubham.joshi@postman.com>
                          date: "2021-03-23T08:19:25+00:00"
                          link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                          message: Commit via the commit function for Bitbucket LOCALHOST
                          parents:
                            - 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                          sha: 2c8d64313a828f0f4ba1d917691692f64e551d5c
                          stats:
                            additions: 1
                            deletions: 0
                            total: 1
                        file:
                          download_url: "https://raw.githubusercontent/postman/schema.json"
                          name: schema.json
                          path: postman/schema.json
        "400":
          description: 400 invalid files
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: files
                      message:
                        type: string
                        example: Required param missing in the request
                      name:
                        type: string
                        example: invalidParamsError
              examples:
                400 invalid files:
                  value:
                    error:
                      details:
                        param: files
                      message: Required param missing in the request
                      name: invalidParamsError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/api-repository/release-tag:
    put:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Update a release <> tag link
      description: Update a release <> tag link
      operationId: updateAReleaseTagLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                release:
                  type: string
                  example: the release id
                tag:
                  type: string
                  example: the tag name
            example:
              release: the release id
              tag: the tag name
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  releaseTag:
                    type: object
                    properties:
                      apiVersionRepository:
                        type: string
                        example: "21"
                      createdAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                      createdBy:
                        type: string
                        example: "644823"
                      id:
                        type: string
                        example: "1"
                      lastUpdatedBy:
                        type: string
                        example: "123232"
                      release:
                        type: string
                        example: 12ed-2x23d2-3d23w
                      tag:
                        type: string
                        example: v1.0.0
                      updatedAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                  result:
                    type: string
                    example: "true"
              examples:
                200 OK:
                  value:
                    releaseTag:
                      apiVersionRepository: "21"
                      createdAt: "2021-02-26T17:08:11.000Z"
                      createdBy: "644823"
                      id: "1"
                      lastUpdatedBy: "123232"
                      release: 12ed-2x23d2-3d23w
                      tag: v1.0.0
                      updatedAt: "2021-02-26T17:08:11.000Z"
                    result: "true"
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "404":
          description: 404 no release exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This release is not linked to a tag
                      name:
                        type: string
                        example: releaseTagNotFoundError
              examples:
                404 no release exists:
                  value:
                    error:
                      message: This release is not linked to a tag
                      name: releaseTagNotFoundError
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Create a release <> tag link
      description: Create a release <> tag link
      operationId: createAReleaseTagLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                release:
                  type: string
                  example: the release id
                tag:
                  type: string
                  example: the tag name
            example:
              release: the release id
              tag: the tag name
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  releaseTag:
                    type: object
                    properties:
                      apiVersionRepository:
                        type: string
                        example: "21"
                      createdAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                      createdBy:
                        type: string
                        example: "644823"
                      id:
                        type: string
                        example: "1"
                      lastUpdatedBy:
                        type: string
                        example: "644823"
                      release:
                        type: string
                        example: 12ed-2x23d2-3d23w
                      tag:
                        type: string
                        example: 1.0.0
                      updatedAt:
                        type: string
                        example: "2021-02-26T17:08:11.000Z"
                  result:
                    type: string
                    example: "true"
              examples:
                200 OK:
                  value:
                    releaseTag:
                      apiVersionRepository: "21"
                      createdAt: "2021-02-26T17:08:11.000Z"
                      createdBy: "644823"
                      id: "1"
                      lastUpdatedBy: "644823"
                      release: 12ed-2x23d2-3d23w
                      tag: 1.0.0
                      updatedAt: "2021-02-26T17:08:11.000Z"
                    result: "true"
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    delete:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Delete a release <> tag link
      description: Delete a release <> tag link
      operationId: deleteAReleaseTagLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                release:
                  type: string
                  example: the release id
            example:
              release: the release id
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "true"
              examples:
                200 OK:
                  value:
                    result: "true"
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "404":
          description: 404 no release exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This release is not linked to a tag
                      name:
                        type: string
                        example: releaseTagNotFoundError
              examples:
                404 no release exists:
                  value:
                    error:
                      message: This release is not linked to a tag
                      name: releaseTagNotFoundError
  /git/api-repository/repository:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get the linked repository
      description: Get the linked repository
      operationId: getTheLinkedRepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGitGetRepository'
              examples:
                200 OK:
                  value:
                    default_branch: develop
                    full_name: Atishay4294/postman-collection-sync-test
                    id: postman-collection-sync-test
                    name: postman-collection-sync-test
                    owner:
                      id: Atishay4294
                      name: Atishay4294
                    url: "https://github.com/Atishay4294/postman-collection-sync-test"
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/api-repository/repository/tree:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get repository tree
      description: Get repository tree
      operationId: getRepositoryTree1
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: path
          in: query
          schema:
            type: string
            example: "{{path}}"
          description: "optional, pass this if files and folders at a specific path needs to be fetched"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: the name of the branch being tracked in userConfig
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tree:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiGitGetRepositoryTree'
        "400":
          description: 400 branch not tracked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalid
                      message:
                        type: string
                        example: Branch not found
                      name:
                        type: string
                        example: branchNotFoundError
              examples:
                400 branch not tracked:
                  value:
                    error:
                      details:
                        params: invalid
                      message: Branch not found
                      name: branchNotFoundError
        "404":
          description: 404 Directory not found
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 05:36:56 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"bc-CIBMVyLKRDAIMWBPTP1osQ\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=6f813af5598a7510
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=62836617fbb62d19
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalidPath
                      message:
                        type: string
                        example: We could not find the directory you are looking for. The directory may have been deleted or renamed.
                      name:
                        type: string
                        example: directoryNotFoundError
              examples:
                404 Directory not found:
                  value:
                    error:
                      details:
                        params: invalidPath
                      message: We could not find the directory you are looking for. The directory may have been deleted or renamed.
                      name: directoryNotFoundError
  /git/api-repository/tags:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Fetch tags of a repository
      description: Fetch tags of a repository
      operationId: fetchTagsOfARepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        commit:
                          type: string
                          example: sd003d
                        link:
                          type: string
                          example: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                        name:
                          type: string
                          example: v1.0.0
                    example:
                      - commit: sd003d
                        link: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                        name: v1.0.0
                      - commit: as234qwe
                        link: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                        name: v1.1.0
              examples:
                200 OK:
                  value:
                    tags:
                      - commit: sd003d
                        link: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                        name: v1.0.0
                      - commit: as234qwe
                        link: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                        name: v1.1.0
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/api-repository/tags/{tag}:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Fetch a single tag
      description: Fetch a single tag
      operationId: fetchASingleTag
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    type: object
                    properties:
                      author_name:
                        type: string
                        example: Shubham Joshi
                      author_username:
                        type: string
                        example: Shubham Joshi <shubham.joshi@postman.com>
                      committer_name:
                        type: string
                        example: Shubham Joshi
                      committer_username:
                        type: string
                        example: Shubham Joshi <shubham.joshi@postman.com>
                      date:
                        type: string
                        example: "2012-05-28T04:42:42-07:00"
                      link:
                        type: string
                        example: "https://github.com/smartron1/Amritha/commit/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message:
                        type: string
                        example: Release v1.0.0
                      parents:
                        type: array
                        items:
                          type: string
                          example: 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                        example:
                          - 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                      sha:
                        type: string
                        example: cd435nf
                      stats:
                        type: object
                        properties:
                          additions:
                            type: number
                            example: 2
                          deletions:
                            type: number
                            example: 1
                          total:
                            type: number
                            example: 5
                  link:
                    type: string
                    example: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                  name:
                    type: string
                    example: v1.0.0
              examples:
                200 OK:
                  value:
                    commit:
                      author_name: Shubham Joshi
                      author_username: Shubham Joshi <shubham.joshi@postman.com>
                      committer_name: Shubham Joshi
                      committer_username: Shubham Joshi <shubham.joshi@postman.com>
                      date: "2012-05-28T04:42:42-07:00"
                      link: "https://github.com/smartron1/Amritha/commit/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message: Release v1.0.0
                      parents:
                        - 6d5bef77198ce695fdb2852ab783f0c67fcc4f59
                      sha: cd435nf
                      stats:
                        additions: 2
                        deletions: 1
                        total: 5
                    link: "https://github.com/smartron1/Amritha/releases/tag/2.0.0"
                    name: v1.0.0
        "404":
          description: 404 not found  (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: We could not find the linked repository you are looking for
                      name:
                        type: string
                        example: repositoryNotFoundError
              examples:
                404 not found  (3rd party service):
                  value:
                    error:
                      message: We could not find the linked repository you are looking for
                      name: repositoryNotFoundError
    parameters:
      - name: tag
        in: path
        required: true
        schema:
          type: string
          example: ""
  /git/api-repository/user:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get user details
      description: Get user details
      operationId: getUserDetails1
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGitGetUser'
              examples:
                200 OK:
                  value:
                    avatar: "https://logo.shreys7.com"
                    id: "1233"
                    name: Shrey Shah
                    username: shreys7
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
  /git/check-create-integration:
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Create integration checks
      description: Create integration checks
      operationId: createIntegrationChecks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api:
                  type: string
                  example: the api id
                apiVersion:
                  type: string
                  example: the api version id
                branches:
                  type: string
                  example: An array of branch names
                owner:
                  type: string
                  example: "the owner of the repository, an org or user"
                repositories:
                  type: string
                  example: An array of repository names
                service:
                  type: string
                  example: "the 3rd party service, i.e. github, bitbucket"
            example:
              api: the api id
              apiVersion: the api version id
              branches: An array of branch names
              owner: "the owner of the repository, an org or user"
              repositories: An array of repository names
              service: "the 3rd party service, i.e. github, bitbucket"
      responses:
        "200":
          description: 200 OK branch contraints
          content:
            application/json:
              schema:
                type: object
                properties:
                  branches:
                    type: object
                    properties:
                      develop:
                        type: object
                        properties:
                          allowed:
                            type: boolean
                            example: true
                          warning:
                            type: string
                            example: his integration will lock the integration on API Version api2V2
                      feature/A:
                        type: object
                        properties:
                          allowed:
                            type: boolean
                            example: true
                      feature/B:
                        type: object
                        properties:
                          allowed:
                            type: boolean
                            example: true
                      main:
                        type: object
                        properties:
                          allowed:
                            type: boolean
                            example: false
                          reason:
                            type: string
                            example: This branch is already used by an API Version from different API
              examples:
                200 OK branch contraints:
                  value:
                    branches:
                      develop:
                        allowed: true
                        warning: his integration will lock the integration on API Version api2V2
                      feature/A:
                        allowed: true
                      feature/B:
                        allowed: true
                      main:
                        allowed: false
                        reason: This branch is already used by an API Version from different API
        "400":
          description: 400 param missing branch constraints
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: "api, apiVersion and repository parameters are required in the request to check branch constraints"
                      message:
                        type: string
                        example: Required param missing in the request
                      name:
                        type: string
                        example: paramMissingError
              examples:
                400 param missing branch constraints:
                  value:
                    error:
                      details:
                        param: "api, apiVersion and repository parameters are required in the request to check branch constraints"
                      message: Required param missing in the request
                      name: paramMissingError
  /git/integration:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get Git integration details
      description: Get Git integration details
      operationId: getGitIntegrationDetails
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: ""
          in: query
          schema:
            type: string
            example: "{{gitIntegrationId}}"
      responses:
        "200":
          description: 200 OK
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 05:27:53 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"341-O822DRBV6AaRnaclrunkpg\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=4beb10e9010d9e16
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=c1ff1f6696ed8399
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      api:
                        type: string
                        example: 19f70e63-95d7-4f80-aad7-47dd36000d64
                      createdAt:
                        type: string
                        example: "2021-09-29T05:13:03.000Z"
                      createdBy:
                        type: string
                        example: "462940"
                      entity:
                        type: string
                        example: apiversion
                      executor:
                        type: string
                        example: 18a3cee7-07fa-453e-b884-9fa3e96b0e1c
                      id:
                        type: string
                        example: api-git-1377
                      lastUpdatedBy:
                        type: string
                        example: "462940"
                      name:
                        type: string
                        example: atishay test activity log1 (12)
                      rule:
                        type: string
                        example: apiversion_repository_github
                      status:
                        type: string
                        example: created
                      team:
                        type: string
                        example: "1"
                      updatedAt:
                        type: string
                        example: "2021-09-29T05:13:15.000Z"
                      variables:
                        type: object
                        properties:
                          branches:
                            type: object
                            properties:
                              develop:
                                type: string
                                example: develop
                              main:
                                type: string
                                example: develop
                          entities:
                            type: object
                            properties:
                              collections:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties: {}
                                  rootDirectory:
                                    type: string
                                    example: postman/collections
                              schemas:
                                type: object
                                properties:
                                  entityFileMap:
                                    type: object
                                    properties:
                                      17b1e808-356b-4302-8419-b0250b3ece87:
                                        type: string
                                        example: schema.yaml
                                  rootDirectory:
                                    type: string
                                    example: postman/schemas
                          postman_api_id:
                            type: string
                            example: 19f70e63-95d7-4f80-aad7-47dd36000d64
                  meta:
                    type: object
                    properties:
                      action:
                        type: string
                        example: find
                      allowedActions:
                        type: object
                        properties:
                          delete:
                            type: boolean
                            example: true
                          update:
                            type: boolean
                            example: false
                      model:
                        type: string
                        example: apiversionrepository
                  model_id:
                    type: string
                    example: api-git-1377
              examples:
                200 OK:
                  value:
                    data:
                      api: 19f70e63-95d7-4f80-aad7-47dd36000d64
                      createdAt: "2021-09-29T05:13:03.000Z"
                      createdBy: "462940"
                      entity: apiversion
                      executor: 18a3cee7-07fa-453e-b884-9fa3e96b0e1c
                      id: api-git-1377
                      lastUpdatedBy: "462940"
                      name: atishay test activity log1 (12)
                      rule: apiversion_repository_github
                      status: created
                      team: "1"
                      updatedAt: "2021-09-29T05:13:15.000Z"
                      variables:
                        branches:
                          develop: develop
                          main: develop
                        entities:
                          collections:
                            entityFileMap: {}
                            rootDirectory: postman/collections
                          schemas:
                            entityFileMap:
                              17b1e808-356b-4302-8419-b0250b3ece87: schema.yaml
                            rootDirectory: postman/schemas
                        postman_api_id: 19f70e63-95d7-4f80-aad7-47dd36000d64
                    meta:
                      action: find
                      allowedActions:
                        delete: true
                        update: false
                      model: apiversionrepository
                    model_id: api-git-1377
        "400":
          description: 400 param missing
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: "185"
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 05:25:55 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"b9-pnG9JOCMpMqNyEOSSyjCjA\""
            Server:
              schema:
                type: string
                example: nginx
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=51556ff77bbe62b0
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=d5feb61e555198a5
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: At least one of apiVersion or id is required to fetch the linked repository
                      message:
                        type: string
                        example: Parameter is missing in the request.
                      name:
                        type: string
                        example: paramMissingError
              examples:
                400 param missing:
                  value:
                    error:
                      details:
                        param: At least one of apiVersion or id is required to fetch the linked repository
                      message: Parameter is missing in the request.
                      name: paramMissingError
  /git/orgs:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get user orgs
      description: Get user orgs
      operationId: getUserOrgs
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orgs:
                    type: array
                    items:
                      type: object
                      properties:
                        avatar:
                          type: string
                          example: "https://logo.shreys7.com"
                        description:
                          type: string
                          nullable: true
                          example: Hello I am an org
                        id:
                          type: string
                          example: TestOrganisation1
                        name:
                          type: string
                          example: Testing purpose
                    example:
                      - avatar: "https://logo.shreys7.com"
                        description: Hello I am an org
                        id: TestOrganisation1
                        name: Testing purpose
                      - avatar: "https://logo.shreys7.com"
                        description: ~
                        id: TestOrganisation2
                        name: Testing purpose 2
                      - avatar: "https://logo.postmanlabs.com"
                        description: Postman org
                        id: postmanlabs
                        name: Postman
              examples:
                200 OK:
                  value:
                    orgs:
                      - avatar: "https://logo.shreys7.com"
                        description: Hello I am an org
                        id: TestOrganisation1
                        name: Testing purpose
                      - avatar: "https://logo.shreys7.com"
                        description: ~
                        id: TestOrganisation2
                        name: Testing purpose 2
                      - avatar: "https://logo.postmanlabs.com"
                        description: Postman org
                        id: postmanlabs
                        name: Postman
        "400":
          description: 400 invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please check if the access token is valid and has the appropriate permissions
                      name:
                        type: string
                        example: invalidGitTokenError
              examples:
                400 invalid token:
                  value:
                    error:
                      message: Please check if the access token is valid and has the appropriate permissions
                      name: invalidGitTokenError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 4908
                          owner:
                            type: string
                            example: "462940"
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        model: oauthtoken
                        model_id: 4908
                        owner: "462940"
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 Not found (3rd party)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: We could not find the user you are looking for
                      name:
                        type: string
                        example: userNotFoundError
              examples:
                404 Not found (3rd party):
                  value:
                    error:
                      message: We could not find the user you are looking for
                      name: userNotFoundError
  /git/repositories:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: List repositories
      description: List repositories
      operationId: listRepositories
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
        - name: owner
          in: query
          schema:
            type: string
            example: "{{owner}}"
          description: the username/orgname who owns the repository
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  repositories:
                    type: array
                    items:
                      type: object
                      properties:
                        full_name:
                          type: string
                          example: postmanlabs/openapi-to-postman
                        id:
                          type: string
                          example: openapi-to-postman
                        name:
                          type: string
                          example: openapi-to-postman
                        owner:
                          type: object
                          properties:
                            id:
                              type: string
                              example: postmanlabs
                            name:
                              type: string
                              example: Postman
                    example:
                      - full_name: postmanlabs/openapi-to-postman
                        id: openapi-to-postman
                        name: openapi-to-postman
                        owner:
                          id: postmanlabs
                          name: Postman
                      - full_name: postmanlabs/test-repository
                        id: test-repository
                        name: test-repository
                        owner:
                          id: postmanlabs
                          name: Postman
                      - full_name: postmanlabs/codegen-curl
                        id: codegen-curl
                        name: codegen-curl
                        owner:
                          id: postmanlabs
                          name: Postman
              examples:
                200 OK:
                  value:
                    repositories:
                      - full_name: postmanlabs/openapi-to-postman
                        id: openapi-to-postman
                        name: openapi-to-postman
                        owner:
                          id: postmanlabs
                          name: Postman
                      - full_name: postmanlabs/test-repository
                        id: test-repository
                        name: test-repository
                        owner:
                          id: postmanlabs
                          name: Postman
                      - full_name: postmanlabs/codegen-curl
                        id: codegen-curl
                        name: codegen-curl
                        owner:
                          id: postmanlabs
                          name: Postman
        "400":
          description: 400 invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please check if the access token is valid and has the appropriate permissions
                      name:
                        type: string
                        example: invalidGitTokenError
              examples:
                400 invalid token:
                  value:
                    error:
                      message: Please check if the access token is valid and has the appropriate permissions
                      name: invalidGitTokenError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 4908
                          owner:
                            type: string
                            example: "462940"
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        model: oauthtoken
                        model_id: 4908
                        owner: "462940"
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 Unknown owner
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Tue, 28 Sep 2021 02:27:48 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"c6-41crmw1vJ8fIRUHns0cAvQ\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=76a83e0b82cd2beb
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=2f63bf9e70649130
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: owner
                      message:
                        type: string
                        example: We could not find the organisation you are looking for. The organisation may have been deleted or renamed.
                      name:
                        type: string
                        example: organisationNotFoundError
              examples:
                404 Unknown owner:
                  value:
                    error:
                      details:
                        params: owner
                      message: We could not find the organisation you are looking for. The organisation may have been deleted or renamed.
                      name: organisationNotFoundError
  /git/repositories/{repository}:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get a repository
      description: Get a repository
      operationId: getARepository
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
        - name: owner
          in: query
          schema:
            type: string
            example: "{{owner}}"
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGitGetRepository'
              examples:
                200 OK:
                  value:
                    default_branch: master
                    full_name: postmanlabs/codegen-curl
                    id: codegen-curl
                    name: codegen-curl
                    owner:
                      id: postmanlabs
                      name: postmanlabs
                    url: "https://github.com/postmanlabs/codegen-curl"
        "400":
          description: 400 invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please check if the access token is valid and has the appropriate access
                      name:
                        type: string
                        example: invalidGitTokenError
              examples:
                400 invalid token:
                  value:
                    error:
                      message: Please check if the access token is valid and has the appropriate access
                      name: invalidGitTokenError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 1
                          owner:
                            type: number
                            example: 1
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        model: oauthtoken
                        model_id: 1
                        owner: 1
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 token not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: We could not find the token you are looking for
                      name:
                        type: string
                        example: tokenNotFoundError
              examples:
                404 token not found:
                  value:
                    error:
                      message: We could not find the token you are looking for
                      name: tokenNotFoundError
    parameters:
      - name: repository
        in: path
        required: true
        schema:
          type: string
          example: ""
  /git/repositories/{repository}/branches:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: List branches of a repository
      description: List branches of a repository
      operationId: listBranchesOfARepository
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: owner
          in: query
          schema:
            type: string
            example: "{{owner}}"
          description: the username/orgname who owns the repository
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  branches:
                    type: array
                    items:
                      type: object
                      properties:
                        commit:
                          type: string
                          example: d23234
                        link:
                          type: string
                          example: "https://github.com/shubhamjoshi/repository/tree/master"
                        name:
                          type: string
                          example: master
                    example:
                      - commit: d23234
                        link: "https://github.com/shubhamjoshi/repository/tree/master"
                        name: master
                      - commit: dd2314
                        link: "https://github.com/shubhamjoshi/repository/tree/develop"
                        name: develop
                      - commit: c2q121
                        link: "https://github.com/shubhamjoshi/repository/tree/feature/api-backup"
                        name: feature/api-backup
              examples:
                200 OK:
                  value:
                    branches:
                      - commit: d23234
                        link: "https://github.com/shubhamjoshi/repository/tree/master"
                        name: master
                      - commit: dd2314
                        link: "https://github.com/shubhamjoshi/repository/tree/develop"
                        name: develop
                      - commit: c2q121
                        link: "https://github.com/shubhamjoshi/repository/tree/feature/api-backup"
                        name: feature/api-backup
        "400":
          description: 400 invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please check if the access token is valid and has the appropriate access
                      name:
                        type: string
                        example: invalidGitTokenError
              examples:
                400 invalid token:
                  value:
                    error:
                      message: Please check if the access token is valid and has the appropriate access
                      name: invalidGitTokenError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 1
                          owner:
                            type: number
                            example: 1
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        model: oauthtoken
                        model_id: 1
                        owner: 1
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalid-repo
                      message:
                        type: string
                        example: We could not find the repository you are looking for. The repository may have been deleted or renamed.
                      name:
                        type: string
                        example: repositoryNotFoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      details:
                        params: invalid-repo
                      message: We could not find the repository you are looking for. The repository may have been deleted or renamed.
                      name: repositoryNotFoundError
    parameters:
      - name: repository
        in: path
        required: true
        schema:
          type: string
          example: ""
  /git/repositories/{repository}/tree:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get repository tree
      description: Get repository tree
      operationId: getRepositoryTree
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: the branch for which the tree needs to be fetched
        - name: path
          in: query
          schema:
            type: string
            example: "{{path}}"
          description: "optional, pass this if files and folders at a specific path needs to be fetched"
        - name: owner
          in: query
          schema:
            type: string
            example: "{{owner}}"
          description: the user/org who is the owner of this repository
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tree:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiGitGetRepositoryTree'
        "400":
          description: 400 branch missing
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: "116"
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 04:36:14 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"74-BECAYd6PSjHm98bwLqIWtQ\""
            Server:
              schema:
                type: string
                example: nginx
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=1b4f30f0b4983a1a
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=eacb4d07b64ef97b
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: branch
                      message:
                        type: string
                        example: Parameter is missing in the request.
                      name:
                        type: string
                        example: paramMissingError
              examples:
                400 branch missing:
                  value:
                    error:
                      details:
                        param: branch
                      message: Parameter is missing in the request.
                      name: paramMissingError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 1
                          owner:
                            type: number
                            example: 1
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        model: oauthtoken
                        model_id: 1
                        owner: 1
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 not found  (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalid-repository
                      message:
                        type: string
                        example: We could not find the repository you are looking for. The repository may have been deleted or renamed.
                      name:
                        type: string
                        example: repositoryNotFoundError
              examples:
                404 not found  (3rd party service):
                  value:
                    error:
                      details:
                        params: invalid-repository
                      message: We could not find the repository you are looking for. The repository may have been deleted or renamed.
                      name: repositoryNotFoundError
    parameters:
      - name: repository
        in: path
        required: true
        schema:
          type: string
          example: codegen-curl
  /git/user:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get user details
      description: Get user details
      operationId: getUserDetails
      parameters:
        - name: tokenId
          in: query
          schema:
            type: string
            example: "{{token_id}}"
          description: the id of OAuth token
        - name: customDomain
          in: query
          schema:
            type: string
            example: "{{custom_domain}}"
          description: the custom domain to be used for on-prem integration
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGitGetUser'
              examples:
                200 OK:
                  value:
                    avatar: "https://logo.shreys7.com"
                    id: "1233"
                    name: Shrey Shah
                    username: shreys7
        "400":
          description: 400 invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please check if the access token is valid and has the appropriate permissions
                      name:
                        type: string
                        example: invalidGitTokenError
              examples:
                400 invalid token:
                  value:
                    error:
                      message: Please check if the access token is valid and has the appropriate permissions
                      name: invalidGitTokenError
        "403":
          description: 403 forbidden (tokenId not owned by the user)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: You are not allowed to access this OAuth token
                          model:
                            type: string
                            example: oauthtoken
                          model_id:
                            type: number
                            example: 1
                          owner:
                            type: number
                            example: 1
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 forbidden (tokenId not owned by the user):
                  value:
                    error:
                      details:
                        message: You are not allowed to access this OAuth token
                        model: oauthtoken
                        model_id: 1
                        owner: 1
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 token not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: We could not find the OAuth token you are looking for
                      name:
                        type: string
                        example: tokenNotFoundError
              examples:
                404 token not found:
                  value:
                    error:
                      message: We could not find the OAuth token you are looking for
                      name: tokenNotFoundError

  # V2 Endpoints for API<>Git Integration
  /v2/git/api-repository:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Get an API Repository link (v2)
      description: Get an API Repository link (v2)
      operationId: getAnApiRepositoryLink
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
      requestBody:
        content:
          text/plain:
            example: ""
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  api:
                    type: string
                    example: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                  apiVersion:
                    type: string
                    example: 1d2-c2ec234ec-c123e12d2w-12d
                  createdAt:
                    type: string
                    example: "2021-03-17T10:31:10.000Z"
                  createdBy:
                    type: string
                    example: "477932"
                  id:
                    type: number
                    example: 73
                  releaseTags:
                    type: array
                    items:
                      type: object
                      properties:
                        apiVersionRepository:
                          type: string
                          example: "21"
                        createdAt:
                          type: string
                          example: "2021-02-26T17:08:11.000Z"
                        createdBy:
                          type: string
                          example: "644823"
                        id:
                          type: string
                          example: "1"
                        lastUpdatedBy:
                          type: string
                          example: "644823"
                        release:
                          type: string
                          example: 12ed-2x23d2-3d23w
                        tag:
                          type: string
                          example: 1.0.0
                        updatedAt:
                          type: string
                          example: "2021-02-26T17:08:11.000Z"
                    example:
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "1"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d23w
                        tag: 1.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "2"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d2d12
                        tag: 2.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "3"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-1332s
                        tag: 3.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                  repository:
                    type: object
                    properties:
                      createdAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                      createdBy:
                        type: string
                        example: "477932"
                      customDomain:
                        nullable: true
                        example: ~
                      id:
                        type: number
                        example: 73
                      version:
                        type: string
                        example: v2
                      info:
                        type: object
                        properties:
                          id:
                            type: string
                            example: test
                          name:
                            type: string
                            example: test
                          owner:
                            type: object
                            properties:
                              id:
                                type: string
                                example: shreys7
                              name:
                                type: string
                                example: shreys7
                      branches:
                        type: object
                        properties:
                          initial:
                            type: object
                            properties:
                              name:
                                type: string
                                example: main
                              error:
                                type: boolean
                                example: false
                              commit:
                                type: object
                                properties:
                                  sha:
                                    type: string
                                    example: "60953d499be74b5b9d64ca3842c21eecf9bbab3e"
                                  message:
                                    type: string
                                    example: "create a new file"
                      service:
                        type: string
                        example: github
                      team:
                        type: number
                        example: 1
                      transactionId:
                        nullable: true
                        example: ~
                      updatedAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                  state:
                    type: string
                    example: active
                  tokenId:
                    type: number
                    example: 1842
                  token_state:
                    type: string
                    example: active
                  transactionId:
                    nullable: true
                    example: ~
                  updatedAt:
                    type: string
                    example: "2021-03-18T18:36:27.000Z"
                  updatedBy:
                    type: string
                    example: "477932"
                  userConfig:
                    type: object
                    properties:
                      branches:
                        type: object
                        properties:
                          initial:
                            type: string
                            example: develop
                      entities:
                        type: object
                        properties:
                          collections:
                            type: object
                            properties:
                              rootDirectory:
                                type: string
                                example: postman/collections
                          schemas:
                            type: object
                            properties:
                              rootDirectory:
                                type: string
                                example: postman/schemas
              examples:
                200 OK:
                  value:
                    api: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                    apiVersion: 1d2-c2ec234ec-c123e12d2w-12d
                    createdAt: "2021-03-17T10:31:10.000Z"
                    createdBy: "477932"
                    id: 73
                    releaseTags:
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "1"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d23w
                        tag: 1.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "2"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-3d2d12
                        tag: 2.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                      - apiVersionRepository: "21"
                        createdAt: "2021-02-26T17:08:11.000Z"
                        createdBy: "644823"
                        id: "3"
                        lastUpdatedBy: "644823"
                        release: 12ed-2x23d2-1332s
                        tag: 3.0.0
                        updatedAt: "2021-02-26T17:08:11.000Z"
                    repository:
                      createdAt: "2021-03-17T10:31:10.000Z"
                      createdBy: "477932"
                      customDomain: ~
                      id: 73
                      info:
                        id: test
                        name: test
                        owner:
                          id: shreys7
                          name: shreys7
                      links:
                        branch_url: "https://github.com/shreys7/test/tree/develop"
                        repository_url: "https://github.com/shreys7/test"
                      service: github
                      team: 1
                      transactionId: ~
                      updatedAt: "2021-03-17T10:31:10.000Z"
                    state: active
                    tokenId: 1842
                    token_state: active
                    transactionId: ~
                    updatedAt: "2021-03-18T18:36:27.000Z"
                    updatedBy: "477932"
                    userConfig:
                      branches:
                        initial: develop
                      entities:
                        collections:
                          rootDirectory: postman/collections
                        schemas:
                          rootDirectory: postman/schemas
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Link an API to a Repository (v2)
      description: Link an API to a Repository (v2)
      operationId: linkAnApiToARepository
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api:
                  type: string
                  example: API id
                apiVersion:
                  type: string
                  example: API version id
                customDomain:
                  type: string
                  example: "Optional, the URL for the on-prem integrations"
                repository:
                  type: object
                  properties:
                    id:
                      type: string
                      example: id of the selected repository
                    name:
                      type: string
                      example: name of the selected repository
                    owner:
                      type: object
                      properties:
                        id:
                          type: string
                          example: the id of the owner
                        name:
                          type: string
                          example: the name of the owner
                service:
                  type: string
                  example: "3rd party service provider, e.g. github"
                tokenId:
                  type: string
                  example: the id of the OAuth token
                userConfig:
                  type: object
                  properties:
                    branches:
                      type: object
                      properties:
                        initial:
                          type: string
                          example: the initial branch used during setup of integration
                    paths:
                      type: object
                      properties:
                        collections:
                          type: string
                          example: the path where we should sync collections
                        schemas:
                          type: string
                          example: the path where we should sync schemas
            example:
              api: API id
              apiVersion: API version id
              customDomain: "Optional, the URL for the on-prem integrations"
              repository:
                id: id of the selected repository
                name: name of the selected repository
                owner:
                  id: the id of the owner
                  name: the name of the owner
              service: "3rd party service provider, e.g. github"
              tokenId: the id of the OAuth token
              userConfig:
                branches:
                  intial: the initial branch used during setup of integration
                paths:
                  collection: the path where we should sync collections
                  schema: the path where we should sync schemas
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiRepository:
                    type: object
                    properties:
                      api:
                        type: string
                        example: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                      apiVersion:
                        type: string
                        example: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt:
                        type: string
                        example: "2021-03-17T10:31:10.000Z"
                      createdBy:
                        type: string
                        example: "477932"
                      id:
                        type: number
                        example: 73
                      version:
                        type: string
                        example: "v2"
                      releaseTags:
                        type: array
                        items: {}
                        example: []
                      repository:
                        type: object
                        properties:
                          createdAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                          createdBy:
                            type: string
                            example: "477932"
                          id:
                            type: number
                            example: 73
                          info:
                            type: object
                            properties:
                              id:
                                type: string
                                example: test
                              name:
                                type: string
                                example: test
                              owner:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: shreys7
                                  name:
                                    type: string
                                    example: shreys7
                          branches:
                            type: object
                            properties:
                              initial:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: main
                                  error:
                                    type: boolean
                                    example: false
                                  commit:
                                    type: object
                                    properties:
                                      sha:
                                        type: string
                                        example: "60953d499be74b5b9d64ca3842c21eecf9bbab3e"
                                      message:
                                        type: string
                                        example: "create a new file"
                          service:
                            type: string
                            example: github
                          tokenId:
                            type: number
                            example: 1842
                          transactionId:
                            nullable: true
                            example: ~
                          updatedAt:
                            type: string
                            example: "2021-03-17T10:31:10.000Z"
                      state:
                        type: string
                        example: active
                      transactionId:
                        nullable: true
                        example: ~
                      updatedAt:
                        type: string
                        example: "2021-03-18T18:36:27.000Z"
                      updatedBy:
                        type: string
                        example: "477932"
                      userConfig:
                        type: object
                        properties:
                          branches:
                            type: object
                            properties:
                              initial:
                                type: string
                                example: main
                          entities:
                            type: object
                            properties:
                              collections:
                                type: object
                                properties:
                                  rootDirectory:
                                    type: string
                                    example: postman/collections
                              schemas:
                                type: object
                                properties:
                                  rootDirectory:
                                    type: string
                                    example: postman/schemas
                  result:
                    type: boolean
                    example: true
              examples:
                200 OK:
                  value:
                    apiRepository:
                      api: f8cac5b1-c6a0-4058-98fc-a7799631ac1e
                      apiVersion: 1d2-c2ec234ec-c123e12d2w-12d
                      createdAt: "2021-03-17T10:31:10.000Z"
                      createdBy: "477932"
                      id: 73
                      releaseTags: []
                      repository:
                        createdAt: "2021-03-17T10:31:10.000Z"
                        createdBy: "477932"
                        id: 73
                        info:
                          id: test
                          name: test
                          owner:
                            id: shreys7
                            name: shreys7
                        service: github
                        tokenId: 1842
                        transactionId: ~
                        updatedAt: "2021-03-17T10:31:10.000Z"
                      state: active
                      transactionId: ~
                      updatedAt: "2021-03-18T18:36:27.000Z"
                      updatedBy: "477932"
                      userConfig:
                        branches:
                          initial: develop
                        entities:
                          collections:
                            rootDirectory: postman/collections
                          schemas:
                            rootDirectory: postman/schemas
                    result: true
        "400":
          description: 400 repository linked to an API Version from a different API
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This repository is already link to an API version from different API
                      message:
                        type: string
                        example: This repository is already link to an API version from different API
                      name:
                        type: string
                        example: repositoryAlreadyLinkedError
              examples:
                400 repository+branch combination linked to an API Version from a different API:
                  value:
                    error:
                      details:
                        message: This repository is already link to an API version from different API
                      message: This repository is already link to an API version from different API
                      name: repositoryAlreadyLinkedError
        "403":
          description: 403 - IDOR check - Not enough permissions.
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 04:54:46 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"d5-cw7+s2eTIn+bfpqXD5DFKg\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=688515f74d5ec079
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=a57dcd0e26285ffc
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: You do not have access to perform this operation
                          model:
                            type: string
                            example: apiversionrepository
                          owner:
                            type: string
                            example: "462940"
                      message:
                        type: string
                        example: You are not permitted to perform the action.
                      name:
                        type: string
                        example: forbiddenError
              examples:
                403 - IDOR check - Not enough permissions.:
                  value:
                    error:
                      details:
                        message: You do not have access to perform this operation
                        model: apiversionrepository
                        owner: "462940"
                      message: You are not permitted to perform the action.
                      name: forbiddenError
        "404":
          description: 404 token not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  details:
                    type: object
                    properties:
                      model:
                        type: string
                        example: OAuthToken
                      model_id:
                        type: number
                        example: 9999
                  message:
                    type: string
                    example: We could not find the OAuth token you are looking for
                  name:
                    type: string
                    example: instanceNotFoundError
              examples:
                404 token not found:
                  value:
                    details:
                      model: OAuthToken
                      model_id: 9999
                    message: We could not find the OAuth token you are looking for
                    name: instanceNotFoundError

  /v2/git/api-repository/changes:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Pull the contents from a repository
      description: Pull the contents from a repository
      operationId: pullTheContentsFromARepository
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: "the branch to pull the changes from"
        - name: tag
          in: query
          schema:
            type: string
            example: "{{tag}}"
          description: the tag name to pull the changes from
        - name: commit
          in: query
          schema:
            type: string
            example: "{{commit}}"
          description: the commit sha to pull the changes from
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    type: object
                    properties:
                      sha:
                        type: string
                      message:
                        type: string
                      date:
                        type: string
                      author_name:
                        type: string
                      committer_name:
                        type: string
                      link:
                        type: string
                      parents:
                        type: array
                        items:
                          type: string
                      tree:
                        type: object
                        properties:
                          sha:
                            type: string
                          url:
                            type: string
                        required:
                        - sha
                        - url
                    required:
                    - sha
                    - message
                    - date
                    - author_name
                    - committer_name
                    - link
                    - parents
                    - tree
                  collections:
                    type: object
                    properties:
                      files:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                          required:
                          - name
                          - path
                    required:
                    - files
                  schemas:
                    type: object
                    properties:
                      files:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                          required:
                          - name
                          - path
                    required:
                    - files
                  configs:
                    type: object
                    properties:
                      files:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                          required:
                          - name
                          - path
                    required:
                    - files
                required:
                - commit
                - collections
                - schemas
                - configs
              examples:
                200 ok:
                  value:
                    commit:
                      sha: 5aee8f72b7f0a8a8fd1c50463ec044310526095b
                      message: Create deep.json
                      date: '2022-07-20T09:40:01Z'
                      author_name: Nishant Garg
                      committer_name: GitHub
                      link: https://github.com/gitstarnishant/backup-collections/commit/5aee8f72b7f0a8a8fd1c50463ec044310526095b
                      parents:
                      - 2b037ca3e09ef892c3745975d86f8ab1a12b328d
                      tree:
                        sha: 2eacafd192f4ac3e18eac94e240496efaaf57258
                        url: https://api.github.com/repos/gitstarnishant/backup-collections/git/trees/2eacafd192f4ac3e18eac94e240496efaaf57258
                    collections:
                      files:
                      - name: testiner_b66a8b1d-5728-4c7c-acca-66915190953a.json
                        path: postman/collections/testiner_b66a8b1d-5728-4c7c-acca-66915190953a.json
                    schemas:
                      files:
                      - name: schema.json
                        path: postman/schemas/schema.json
                    configs:
                      files:
                      - name: config.json
                        path: ".postman/config.json"
        "400":
          description: 400 integration locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          message:
                            type: string
                            example: This action cannot be performed because the integration is in a locked state
                      message:
                        type: string
                        example: This action cannot be performed because the integration is in a locked state
                      name:
                        type: string
                        example: integrationLockedError
              examples:
                400 integration locked:
                  value:
                    error:
                      details:
                        message: This action cannot be performed because the integration is in a locked state
                      message: This action cannot be performed because the integration is in a locked state
                      name: integrationLockedError
        "404":
          description: "404 - Tag doesn't exist"
          headers:
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Date:
              schema:
                type: string
                example: "Wed, 29 Sep 2021 06:28:01 GMT"
            ETag:
              schema:
                type: string
                example: "W/\"a9-H0QTOb1AAt4TVheeopfvvQ\""
            Server:
              schema:
                type: string
                example: nginx
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            strict-transport-security:
              schema:
                type: string
                example: max-age=63072000; includeSubDomains
            x-srv-span:
              schema:
                type: string
                example: v=1;s=609b2c5a7bf91fb2
            x-srv-trace:
              schema:
                type: string
                example: v=1;t=7b38a05c7d938a9e
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          params:
                            type: string
                            example: invalid
                      message:
                        type: string
                        example: We could not find the tag you are looking for. The tag may have been deleted or renamed.
                      name:
                        type: string
                        example: tagNotFoundError
              examples:
                "404 - Tag doesn't exist":
                  value:
                    error:
                      details:
                        params: invalid
                      message: We could not find the tag you are looking for. The tag may have been deleted or renamed.
                      name: tagNotFoundError
    post:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Create/update/delete files in a repository branch
      description: Create/update/delete files in a repository branch
      operationId: createUpdateDeleteFilesInARepositoryBranch
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: the branch to which the changes needs to be pushed to
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commitMessage:
                  type: string
                lastCommit:
                  type: string
                actions:
                  type: object
                  properties:
                    create:
                      type: array
                      items:
                        type: object
                        properties:
                          entityPath:
                            type: string
                          file:
                            type: object
                            properties:
                              type:
                                type: string
                              contents:
                                type: string
                            required:
                            - type
                            - contents
                        required:
                        - entityPath
                        - file
                    update:
                      type: array
                      items:
                        type: object
                        properties:
                          entityPath:
                            type: string
                          file:
                            type: object
                            properties:
                              type:
                                type: string
                              contents:
                                type: string
                            required:
                            - type
                            - contents
                        required:
                        - entityPath
                        - file
                  required:
                  - create
                  - update
              required:
              - commitMessage
              - lastCommit
              - actions
            example:
              commitMessage: The commit message while performing the action
              lastCommit: "fwefew"
              actions:
                create:
                - entityPath: ".postman/config.json"
                  file:
                    type: raw
                    contents: keklfmklewfkwe
                update:
                - entityPath: postman/schemas/schema.json
                  file:
                    type: raw
                    contents: actual content if the type is raw, else a link
                delete:
                - entityPath: postman/schemas/schema.json
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    type: object
                    properties:
                      link:
                        type: string
                        example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message:
                        type: string
                        example: Added payments schema
                      sha:
                        type: string
                        example: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
              examples:
                200 OK:
                  value:
                    commit:
                      link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message: Added payments schema
                      sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
        "400":
          description: 400 invalid commitMessage
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          param:
                            type: string
                            example: commitMessage
                      message:
                        type: string
                        example: The parameter is in an invalid format
                      name:
                        type: string
                        example: invalidParamsError
              examples:
                400 invalid commitMessage:
                  value:
                    error:
                      details:
                        param: commitMessage
                      message: The parameter is in an invalid format
                      name: invalidParamsError
        "409":
          description: 409 Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: string
                        example: Conflicts encountered while committing the files.
                      message:
                        type: string
                        example: error message
                      name:
                        type: string
                        example: githubConflictError
              examples:
                409 Conflict:
                  value:
                    error:
                      details: Conflicts encountered while committing the files.
                      message: error message
                      name: githubConflictError

  /v2/git/api-repository/commits/compare/{commit}:
    get:
      tags:
        - API Git Interface
        - Integrations Internal
      summary: Compare commit
      description: Compare commit
      operationId: compareCommit
      parameters:
        - name: apiVersion
          in: query
          schema:
            type: string
            example: "{{apiVersion_id}}"
        - name: branch
          in: query
          schema:
            type: string
            example: "{{branch}}"
          description: the branch to which the commit needs to be compared to.
      responses:
        "200":
          description: 200 OK - Feature branch
          content:
            application/json:
              schema:
                type: object
                properties:
                  entities:
                    type: object
                    properties:
                      collections:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                additions:
                                  type: string
                                  example: "1"
                                changes:
                                  type: string
                                  example: "2"
                                deletions:
                                  type: string
                                  example: "1"
                                download_url:
                                  type: string
                                  example: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                                name:
                                  type: string
                                  example: paymets_documentation.json
                                path:
                                  type: string
                                  example: postman/collections/paymets_documentation.json
                                status:
                                  type: string
                                  example: modified
                            example:
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                                name: paymets_documentation.json
                                path: postman/collections/paymets_documentation.json
                                status: modified
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                                name: payments_monitor.json
                                path: postman/collections/payments_monitor.json
                                status: removed
                          rootDirectory:
                            type: string
                            example: postman/collections
                      schemas:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                additions:
                                  type: string
                                  example: "1"
                                changes:
                                  type: string
                                  example: "2"
                                deletions:
                                  type: string
                                  example: "1"
                                download_url:
                                  type: string
                                  example: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                                name:
                                  type: string
                                  example: payments_stub.js
                                path:
                                  type: string
                                  example: postman/stubs/payments_stub.js
                                status:
                                  type: string
                                  example: added
                            example:
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                                name: payments_stub.js
                                path: postman/stubs/payments_stub.js
                                status: added
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                                name: payments_schema.yml
                                path: postman/schemas/payments_schema.yml
                                status: modified
                          rootDirectory:
                            type: string
                            example: postman/schemas
                  remote_head:
                    type: object
                    properties:
                      author_name:
                        type: string
                        example: Shrey Shah
                      author_username:
                        type: string
                        example: Shrey Shah
                      committer_name:
                        type: string
                        example: Shrey Shah
                      committer_username:
                        type: string
                        example: shreys7
                      date:
                        type: string
                        example: "2012-05-28T04:42:42-07:00"
                      link:
                        type: string
                        example: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message:
                        type: string
                        example: Update via api
                      parents:
                        type: array
                        items:
                          type: string
                          example: aasd678
                        example:
                          - aasd678
                      sha:
                        type: string
                        example: cd435nf
                      stats:
                        type: object
                        properties:
                          additions:
                            type: number
                            example: 1
                          deletions:
                            type: number
                            example: 0
                          total:
                            type: number
                            example: 1
                  configs:
                        type: object
                        properties:
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                additions:
                                  type: string
                                  example: "1"
                                changes:
                                  type: string
                                  example: "2"
                                deletions:
                                  type: string
                                  example: "1"
                                download_url:
                                  type: string
                                  example: "https://raw.githubusercontent.com/user-repo/postman/.postman/config.js"
                                name:
                                  type: string
                                  example: config.js
                                path:
                                  type: string
                                  example: .postman/config.js
                                status:
                                  type: string
                                  example: added
                            example:
                              - additions: "1"
                                changes: "2"
                                deletions: "1"
                                download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                                name: config.js
                                path: .postman/config.js
                                status: added
                          rootDirectory:
                            type: string
                            example: .postman
              examples:
                200 OK:
                  value:
                    entities:
                      collections:
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_documentation.json"
                            name: paymets_documentation.json
                            path: postman/collections/paymets_documentation.json
                            status: modified
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/collections/payments_monitor.json"
                            name: payments_monitor.json
                            path: postman/collections/payments_monitor.json
                            status: removed
                        rootDirectory: postman/collections
                      schemas:
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/stubs/payments_stub.js"
                            name: payments_stub.js
                            path: postman/stubs/payments_stub.js
                            status: added
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/schemas/payments_schema.yml"
                            name: payments_schema.yml
                            path: postman/schemas/payments_schema.yml
                            status: modified
                        rootDirectory: postman/schemas
                    remote_head:
                      author_name: Shrey Shah
                      author_username: Shrey Shah
                      committer_name: Shrey Shah
                      committer_username: shreys7
                      date: "2012-05-28T04:42:42-07:00"
                      link: "https://bitbucket.org/postmanlabs/postman-sync-server/commits/3f86f5de75d96401e75363e55d7867ee4950e443"
                      message: Update via api
                      parents:
                        - aasd678
                      sha: cd435nf
                      stats:
                        additions: 1
                        deletions: 0
                        total: 1
                    configs:
                        files:
                          - additions: "1"
                            changes: "2"
                            deletions: "1"
                            download_url: "https://raw.githubusercontent.com/user-repo/postman/.postman/config.js"
                            name: config.js
                            path: .postman/configs.js
                            status: added
                        rootDirectory: .postman
        "400":
          description: 404 not found (3rd party service)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: abc
                      message:
                        type: string
                        example: We could not find the repository/commit you are looking for
                      name:
                        type: string
                        example: repositoryNotFoundError/commitNotfoundError
              examples:
                404 not found (3rd party service):
                  value:
                    error:
                      details:
                        name: abc
                      message: We could not find the repository/commit you are looking for
                      name: repositoryNotFoundError/commitNotfoundError
        "404":
          description: 404 no link exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: This API version is not linked to a repository
                      name:
                        type: string
                        example: apiRepositoryNotFoundError
              examples:
                404 no link exists:
                  value:
                    error:
                      message: This API version is not linked to a repository
                      name: apiRepositoryNotFoundError
    parameters:
      - name: commit
        in: path
        required: true
        schema:
          type: string
          example: ""

  /v2/git/api-repository/branches:
    post:
      tags:
         - API Git Interface
         - Integrations Internal
      summary: Create branch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - apiVersion
                - newBranch
                - sourceBranch
              properties:
                apiVersion:
                  type: string
                newBranch:
                  type: string
                sourceBranch:
                  type: string
              example:
                apiVersion: Api version
                newBranch: New branch name
                sourceBranch: >-
                  Source branch name - from where the new branch needs to be
                  created
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties :
                  branch :
                    type : object
                    required:
                      - branch
                      - commit
                      - url
                    properties:
                      branch:
                        type : string
                      commit:
                        type: object
                        required:
                          - sha
                        properties:
                          sha:
                            type: string
                      url:
                        type : string

              example:
                branch:
                  name: test-branch
                  commit:
                    sha: df3f26bf5e75564e9448b104746dbe985f383645
                  url: >-
                    https://bitbucket.org/koder/api-git-test/branch/test-branch
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - name
                          - message
                        properties:
                          name:
                            type: string
                          message:
                            type: string
              examples:
                example-0:
                  summary: 400 - Incorrect source branch
                  value:
                    error:
                      name: badRequestError
                      message: Invalid payload sent in the request.
                      details:
                        name: badRequestError
                        message: Invalid payload sent in the request.
                example-1:
                  summary: 400 - Incorrect destination branch
                  value:
                    error:
                      name: incorrectBranchError
                      message: >-
                        Action cannot be completed because the branch already
                        exists or is incorrect
                      details:
                        name: incorrectBranchError
                        details: >-
                          Action cannot be completed because the branch already
                          exists or is incorrect
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: apiRepositoryNotFoundError
                  message: This API version is not linked to a repository

  # Public Service endpoints
  # Integration run status update, proxy and webhook handler endpoints
  /integration-runs/{integrationRunId}/started:
    post:
      tags:
        - Integration Run State Change APIs
        - Integrations Public
      summary: Started
      description: >-
        Mark Integratation Run as started.


        This API needs to be called as the first API of an Integration
        collection.

        ### Payload

        None
      parameters:
        - name: integrationRunId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationRunId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/started200ResponseSubSchema'
                  - type: object
                    properties:
                      id:
                        type: string
                      integration:
                        type: string
                      extraData:
                        type: string
                        nullable: true
              example:
                id: '{{integrationRunId}}'
                status: running
                integration: '{{integration_id}}'
                statusMessage: null
                extraData: null
                updatedAt: '2020-02-20T14:23:29Z'
                createdAt: '2020-02-20T14:22:13Z'
          description: '200'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - currentState
                          - requestedState
                        properties:
                          currentState:
                            type: string
                          requestedState:
                            type: string
              example:
                error:
                  name: stateTransitionNotAllowed
                  message: The requested state transition is not allowed.
                  details:
                    currentState: success
                    requestedState: running
          description: 400 - Invalid State Transition
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          message:
                            type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
                  details:
                    model: integrationrun
                    model_id: '{{integrationRunId}}'
                    message: >-
                      You do not have the necessary permissions to perform this
                      action
          description: '403'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '404'
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
              example:
                error:
                  name: serverError
                  message: Something went wrong with the server.
                  details: {}
          description: '500'
  /integration-runs/{integrationRunId}/failed:
    post:
      tags:
        - Integration Run State Change APIs
        - Integrations Public
      summary: Failed
      description: >-
        Mark Integratation Run as failed. A failed state means that a known
        exception / error occurred and was caught.


        ### Payload

        | Key     | Mandatory | Description |

        | ------------- |-------------| -----|

        | statusMessage | No          | Attach a message to this state
        transition. This messages is meant to be viewed by the user     |

        | extraData     | No          | Any extra JSON context that you may want
        to send back. This can be anything that you want. This JSON can allow
        you to capture data specific to your use-case that will help you
        determine statuses for your specific use case. This will be returned
        back in the API that allows you to consume runs.     |
      parameters:
        - name: integrationRunId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationRunId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                statusMessage:
                  type: string
                extraData:
                  type: object
                  required:
                    - v1
                  properties:
                    v1:
                      type: object
                      required:
                        - status
                        - message
                        - details
                      properties:
                        status:
                          type: string
                        message:
                          type: string
                        details:
                          type: object
                          required:
                            - branch
                            - runAt
                          properties:
                            branch:
                              type: string
                            runAt:
                              type: string
                              format: date-time
            example:
              statusMessage: The run failed as the Github branch does not exist.
              extraData:
                v1:
                  status: failed
                  message: Github branch does not exist
                  details:
                    branch: develop
                    runAt: '2020-02-24T12:22:43Z'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: '200'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - currentState
                          - field
                          - limit
                          - requestedState
                        properties:
                          currentState:
                            type: string
                          requestedState:
                            type: string
                          field:
                            type: string
                          limit:
                            type: integer
              examples:
                Example1:
                  value:
                    error:
                      name: stateTransitionNotAllowed
                      message: The requested state transition is not allowed.
                      details:
                        currentState: success
                        requestedState: failed
                Example2:
                  value:
                    error:
                      name: fieldSizeLimitExceeded
                      message: The field statusMessage exceeds size limit of 1024
                      details:
                        field: statusMessage
                        limit: 1024
          description: 400 - Invalid State Transition
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          message:
                            type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
                  details:
                    model: integrationrun
                    model_id: '{{integrationRunId}}'
                    message: >-
                      You do not have the necessary permissions to perform this
                      action
          description: '403'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            nullable: true
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integrationrun you are looking for.
                  details:
                    model: IntegrationRun
                    model_id: '{{integrationRunId}}'
                    owner: null
          description: '404'
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
              example:
                error:
                  name: serverError
                  message: Something went wrong with the server.
                  details: {}
          description: '500'
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              example:
                error:
                  name: invalidParamsError
                  message: The specified parameter is in an invalid format
                  details:
                    param: extraData
          description: >-
            400 - Invalid params error - when invalid JSON is passed to
            extraData
  /integration-runs/{integrationRunId}/succeeded:
    post:
      tags:
        - Integration Run State Change APIs
        - Integrations Public
      summary: Succeeded
      description: >-
        Mark Integration Run as succeeded.


        This state signifies that the integration run has completed
        successfully.


        ### Payload

        | Key     | Mandatory | Description |

        | ------------- |-------------| -----|

        | statusMessage | No          | Attach a message to this state
        transition. This messages is meant to be viewed by the user     |

        | extraData     | No          | Any extra JSON context that you may want
        to send back. This can be anything that you want. This JSON can allow
        you to capture data specific to your use-case that will help you
        determine statuses for your specific use case. This will be returned
        back in the API that allows you to consume runs.         |
      parameters:
        - name: integrationRunId
          in: path
          schema:
            type: string
          required: true
          example: '{{integrationRunId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                statusMessage:
                  type: string
                extraData:
                  type: object
                  required:
                    - v1
                  properties:
                    v1:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
            example:
              statusMessage: The run completed successfully!
              extraData:
                v1:
                  status: success
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/started200ResponseSubSchema'
                  - type: object
                    properties:
                      id:
                        type: string
                      integration:
                        type: integer
                      extraData:
                        type: object
                        required:
                          - v1
                        properties:
                          v1:
                            type: object
                            required:
                              - status
                            properties:
                              status:
                                type: string
              example:
                id: '{{integrationRunId}}'
                status: succeeded
                integration: 1
                statusMessage: The run completed successfully!
                extraData:
                  v1:
                    status: success
                updatedAt: '2020-02-20T14:23:29Z'
                createdAt: '2020-02-20T14:22:13Z'
          description: '200'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - currentState
                          - field
                          - limit
                          - param
                          - requestedState
                        properties:
                          field:
                            type: string
                          limit:
                            type: integer
                          currentState:
                            type: string
                          requestedState:
                            type: string
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: fieldSizeLimitExceeded
                      message: The field statusMessage exceeds size limit of 1024
                      details:
                        field: statusMessage
                        limit: 1024
                Example2:
                  value:
                    error:
                      name: stateTransitionNotAllowed
                      message: The requested state transition is not allowed.
                      details:
                        currentState: failed
                        requestedState: succeeded
                Example3:
                  value:
                    error:
                      name: invalidParamsError
                      message: The specified parameter is in an invalid format
                      details:
                        param: extraData
          description: 400 - statusMessage exceeds allowed size
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          message:
                            type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
                  details:
                    model: integrationrun
                    model_id: '{{integrationRunId}}'
                    message: >-
                      You do not have the necessary permissions to perform this
                      action.
          description: '403'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            nullable: true
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integrationrun you are looking for.
                  details:
                    model: integrationrun
                    model_id: '{{integrationRunId}}'
                    owner: null
          description: '404'
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
              example:
                error:
                  name: serverError
                  message: Something went wrong with the server.
                  details: {}
          description: '500'
  /integration-runs/{integrationRunId}/proxy/monitoring/jobs/{job_id}/runLog:
    get:
      tags:
        - Integrations Public
      summary: Proxy API to fetch Monitor Job's run logs
      description: >-
        Fetches the run logs for all the runs from monitoring for the given job
        id
      parameters:
        - name: integrationRunId
          in: path
          schema:
            type: string
          required: true
        - name: job_id
          in: path
          schema:
            type: string
          required: true
        - name: ''
          in: query
          schema:
            type: string
          example: ''
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/proxyApiToFetchMonitorJobsRunLogs200ResponseSubSchema
                  - type: object
                    properties:
                      id:
                        type: string
              example:
                job: <uuid>
                id: <uuid>
                region: <string>
                startedAt: <timestamp>
                finishedAt: <timestamp>
                status:
                  state: <string>
                  healthy: <boolean>
                  aborted: <boolean>
                results:
                  errorCount: <number>
                  warningCount: <number>
                  passedTestCount: <number>
                  failedTestCount: <number>
                  requestCount: <number>
                  responseLatency: <number>
                  responseSize: <number>
                log:
                  - id: <uid>
                    event: <string>
                    timestamp: <timestamp>
                    job: <uid>
                    run: <uid>
                    args: <object>
                  - id: <uid>
                    event: <string>
                    timestamp: <timestamp>
                    job: <uid>
                    run: <uid>
                    args: <object>
          description: '200'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
              examples:
                Example1:
                  value:
                    code: <integer>
                    message: <string>
                Example2:
                  value:
                    code: <integer>
                    message: <string>
          description: '400'
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
              example:
                code: <integer>
                message: <string>
          description: '403'
      servers:
        - url: 'https://integrate.postman.com'
  /integration-runs/{id}/proxy/monitoring/jobs/{jobId}:
    get:
      tags:
        - Integration Helper APIs
      summary: Fetch monitor job details
      description: "API which returns the monitor job meta, metrics. The API authenticates the request by validating the short-lived integration run access token with the given run Id in params."
      operationId: fetchMonitorJobDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        "200":
          description: 200 - OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  job:
                    type: object
                    properties:
                      collection:
                        type: string
                        example: 532277-7678d704-2835-4722-a2ee-4fb4d81b44d5
                      createdAt:
                        type: string
                        example: "2021-08-09T12:19:41.392Z"
                      createdBy:
                        type: number
                        example: 532277
                      environment:
                        type: string
                        example: 532277-9df7564f-d515-445a-a2d4-6ee5f594cc79
                      finishedAt:
                        type: string
                        example: "2021-08-09T12:19:47.671Z"
                      id:
                        type: string
                        example: 1ebf90c1-295e-47f0-91d6-42f6cdb119de
                      jobTemplate:
                        type: string
                        example: 1ebedf4f-59b4-4950-ba8d-220da9c86bd4
                      name:
                        type: string
                        example: new event monitor
                      options:
                        type: object
                        properties:
                          followRedirects:
                            type: boolean
                            example: true
                          requestDelay:
                            type: number
                            example: 0
                          requestTimeout:
                            nullable: true
                            example: ~
                          strictSSL:
                            type: boolean
                            example: true
                      results:
                        type: object
                        properties:
                          abortedCount:
                            type: number
                            example: 0
                          consecutiveCount:
                            type: number
                            example: 1272
                          errorCount:
                            type: number
                            example: 6
                          failedTestCount:
                            type: number
                            example: 0
                          passedTestCount:
                            type: number
                            example: 0
                          requestCount:
                            type: number
                            example: 2
                          responseLatency:
                            type: number
                            example: 0
                          responseSize:
                            type: number
                            example: 0
                          runCount:
                            type: number
                            example: 2
                          warningCount:
                            type: number
                            example: 0
                      startedAt:
                        type: string
                        example: "2021-08-09T12:19:41.620Z"
                      status:
                        type: object
                        properties:
                          aborted:
                            type: boolean
                            example: false
                          healthy:
                            type: boolean
                            example: false
                          state:
                            type: string
                            example: "finished:error"
                      trigger:
                        type: string
                        example: api
              examples:
                200 - OK:
                  value:
                    job:
                      collection: 532277-7678d704-2835-4722-a2ee-4fb4d81b44d5
                      createdAt: "2021-08-09T12:19:41.392Z"
                      createdBy: 532277
                      environment: 532277-9df7564f-d515-445a-a2d4-6ee5f594cc79
                      finishedAt: "2021-08-09T12:19:47.671Z"
                      id: 1ebf90c1-295e-47f0-91d6-42f6cdb119de
                      jobTemplate: 1ebedf4f-59b4-4950-ba8d-220da9c86bd4
                      name: new event monitor
                      options:
                        followRedirects: true
                        requestDelay: 0
                        requestTimeout: ~
                        strictSSL: true
                      results:
                        abortedCount: 0
                        consecutiveCount: 1272
                        errorCount: 6
                        failedTestCount: 0
                        passedTestCount: 0
                        requestCount: 2
                        responseLatency: 0
                        responseSize: 0
                        runCount: 2
                        warningCount: 0
                      startedAt: "2021-08-09T12:19:41.620Z"
                      status:
                        aborted: false
                        healthy: false
                        state: "finished:error"
                      trigger: api
      servers:
        - url: 'https://integrate.postman.com'
  /integration-runs/{runId}/proxy/collection/{collectionId}:
    get:
      tags:
        - Integration Helper APIs
      summary: Fetch collection data
      description: API which returns the whole collection. The API authenticates the request by validating the short-lived integration run access token with the given run Id in params.
      operationId: fetchCollectionData
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        "200":
          description: 200 -OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth:
                    nullable: true
                    example: ~
                  createdAt:
                    type: string
                    example: "2020-05-22T10:50:50.000Z"
                  description:
                    type: string
                    example: "This is a test collection!!\nTesting the webhook beta url....\nhahah lol lol lol lol lol lol lol lo hahah lol lol lol lol lol lol lol lo"
                  events:
                    nullable: true
                    example: ~
                  folders:
                    type: array
                    items: {}
                    example: []
                  folders_order:
                    type: array
                    items: {}
                    example: []
                  id:
                    type: string
                    example: 9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                  lastRevision:
                    type: number
                    example: 68917422
                  lastUpdatedBy:
                    type: string
                    example: "532277"
                  name:
                    type: string
                    example: My Collection
                  order:
                    type: array
                    items:
                      type: string
                      example: 53974f98-f714-4592-89e0-fa76f2eb2635
                    example:
                      - 53974f98-f714-4592-89e0-fa76f2eb2635
                  owner:
                    type: string
                    example: "485374"
                  remoteLink:
                    nullable: true
                    example: ~
                  remote_id:
                    type: string
                    example: "0"
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        auth:
                          nullable: true
                          example: ~
                        collection:
                          type: string
                          example: 9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                        createdAt:
                          type: string
                          example: "2020-05-27T07:59:32.000Z"
                        currentHelper:
                          nullable: true
                          example: ~
                        data:
                          nullable: true
                          example: ~
                        dataDisabled:
                          type: boolean
                          example: false
                        dataMode:
                          nullable: true
                          example: ~
                        description:
                          nullable: true
                          example: ~
                        descriptionFormat:
                          nullable: true
                          example: ~
                        events:
                          nullable: true
                          example: ~
                        folder:
                          nullable: true
                          example: ~
                        headerData:
                          type: array
                          items: {}
                          example: []
                        headers:
                          type: string
                          example: ""
                        helperAttributes:
                          nullable: true
                          example: ~
                        id:
                          type: string
                          example: 53974f98-f714-4592-89e0-fa76f2eb2635
                        lastRevision:
                          type: number
                          example: 62692851
                        lastUpdatedBy:
                          type: string
                          example: "485374"
                        method:
                          type: string
                          example: GET
                        name:
                          type: string
                          example: Request 1
                        owner:
                          type: string
                          example: "485374"
                        pathVariableData:
                          type: array
                          items: {}
                          example: []
                        pathVariables:
                          type: object
                          properties: {}
                        preRequestScript:
                          nullable: true
                          example: ~
                        protocolProfileBehavior:
                          type: object
                          properties:
                            disableBodyPruning:
                              type: boolean
                              example: true
                        queryParams:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                nullable: true
                                example: ~
                              enabled:
                                type: boolean
                                example: true
                              equals:
                                type: boolean
                                example: true
                              key:
                                type: string
                                example: param1
                              type:
                                type: string
                                example: text
                              value:
                                type: string
                                example: value1
                          example:
                            - description: ~
                              enabled: true
                              equals: true
                              key: param1
                              value: value1
                            - description: ~
                              enabled: true
                              equals: true
                              key: param2
                              type: text
                              value: value2
                        rawModeData:
                          nullable: true
                          example: ~
                        responses:
                          type: array
                          items: {}
                          example: []
                        responses_order:
                          type: array
                          items: {}
                          example: []
                        tests:
                          nullable: true
                          example: ~
                        updatedAt:
                          type: string
                          example: "2021-02-23T10:00:04.000Z"
                        url:
                          type: string
                          example: "https://www.postman-echo.com/get?param1=value1&param2=value2"
                        variables:
                          nullable: true
                          example: ~
                    example:
                      - auth: ~
                        collection: 9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                        createdAt: "2020-05-27T07:59:32.000Z"
                        currentHelper: ~
                        data: ~
                        dataDisabled: false
                        dataMode: ~
                        description: ~
                        descriptionFormat: ~
                        events: ~
                        folder: ~
                        headerData: []
                        headers: ""
                        helperAttributes: ~
                        id: 53974f98-f714-4592-89e0-fa76f2eb2635
                        lastRevision: 62692851
                        lastUpdatedBy: "485374"
                        method: GET
                        name: Request 1
                        owner: "485374"
                        pathVariableData: []
                        pathVariables: {}
                        preRequestScript: ~
                        protocolProfileBehavior:
                          disableBodyPruning: true
                        queryParams:
                          - description: ~
                            enabled: true
                            equals: true
                            key: param1
                            value: value1
                          - description: ~
                            enabled: true
                            equals: true
                            key: param2
                            type: text
                            value: value2
                        rawModeData: ~
                        responses: []
                        responses_order: []
                        tests: ~
                        updatedAt: "2021-02-23T10:00:04.000Z"
                        url: "https://www.postman-echo.com/get?param1=value1&param2=value2"
                        variables: ~
                  team:
                    type: string
                    example: "1"
                  updatedAt:
                    type: string
                    example: "2020-11-18T10:06:08.000Z"
                  variables:
                    type: array
                    items: {}
                    example: []
              examples:
                200 -OK:
                  value:
                    auth: ~
                    createdAt: "2020-05-22T10:50:50.000Z"
                    description: "This is a test collection!!\nTesting the webhook beta url....\nhahah lol lol lol lol lol lol lol lo hahah lol lol lol lol lol lol lol lo"
                    events: ~
                    folders: []
                    folders_order: []
                    id: 9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    lastRevision: 68917422
                    lastUpdatedBy: "532277"
                    name: My Collection
                    order:
                      - 53974f98-f714-4592-89e0-fa76f2eb2635
                    owner: "485374"
                    remoteLink: ~
                    remote_id: "0"
                    requests:
                      - auth: ~
                        collection: 9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                        createdAt: "2020-05-27T07:59:32.000Z"
                        currentHelper: ~
                        data: ~
                        dataDisabled: false
                        dataMode: ~
                        description: ~
                        descriptionFormat: ~
                        events: ~
                        folder: ~
                        headerData: []
                        headers: ""
                        helperAttributes: ~
                        id: 53974f98-f714-4592-89e0-fa76f2eb2635
                        lastRevision: 62692851
                        lastUpdatedBy: "485374"
                        method: GET
                        name: Request 1
                        owner: "485374"
                        pathVariableData: []
                        pathVariables: {}
                        preRequestScript: ~
                        protocolProfileBehavior:
                          disableBodyPruning: true
                        queryParams:
                          - description: ~
                            enabled: true
                            equals: true
                            key: param1
                            value: value1
                          - description: ~
                            enabled: true
                            equals: true
                            key: param2
                            type: text
                            value: value2
                        rawModeData: ~
                        responses: []
                        responses_order: []
                        tests: ~
                        updatedAt: "2021-02-23T10:00:04.000Z"
                        url: "https://www.postman-echo.com/get?param1=value1&param2=value2"
                        variables: ~
                    team: "1"
                    updatedAt: "2020-11-18T10:06:08.000Z"
                    variables: []
      servers:
        - url: 'https://integrate.postman.com'
  /integration-runs/{runId}/proxy/collection/{collectionId}/meta:
    get:
      tags:
        - Integration Helper APIs
      summary: Fetch collection meta
      description: API which returns the meta information of the collection. The API authenticates the request by validating the short-lived integration run access token with the given run Id in params.
      operationId: fetchCollectionMeta
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        "200":
          description: Fetch collection meta
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth:
                    nullable: true
                    example: ~
                  createdAt:
                    type: string
                    example: "2021-07-26T09:35:16.000Z"
                  description:
                    nullable: true
                    example: ~
                  events:
                    nullable: true
                    example: ~
                  folders_order:
                    type: array
                    items: {}
                    example: []
                  id:
                    type: string
                    example: 7678d704-2835-4722-a2ee-4fb4d81b44d5
                  lastRevision:
                    type: number
                    example: 68731723
                  lastUpdatedBy:
                    type: string
                    example: "532277"
                  name:
                    type: string
                    example: New event collection
                  order:
                    type: array
                    items:
                      type: string
                      example: 7fc96fb3-de71-4f6f-b77a-816cf3e5342f
                    example:
                      - 7fc96fb3-de71-4f6f-b77a-816cf3e5342f
                  owner:
                    type: string
                    example: "532277"
                  remoteLink:
                    nullable: true
                    example: ~
                  remote_id:
                    type: string
                    example: "0"
                  team:
                    nullable: true
                    example: ~
                  updatedAt:
                    type: string
                    example: "2021-07-26T09:35:45.000Z"
                  variables:
                    nullable: true
                    example: ~
              examples:
                Fetch collection meta:
                  value:
                    auth: ~
                    createdAt: "2021-07-26T09:35:16.000Z"
                    description: ~
                    events: ~
                    folders_order: []
                    id: 7678d704-2835-4722-a2ee-4fb4d81b44d5
                    lastRevision: 68731723
                    lastUpdatedBy: "532277"
                    name: New event collection
                    order:
                      - 7fc96fb3-de71-4f6f-b77a-816cf3e5342f
                    owner: "532277"
                    remoteLink: ~
                    remote_id: "0"
                    team: ~
                    updatedAt: "2021-07-26T09:35:45.000Z"
                    variables: ~
      servers:
        - url: 'https://integrate.postman.com'
  /integration-runs/{runId}/proxy/environment/{environmentId}:
    get:
      tags:
        - Integration Helper APIs
      summary: Fetch environment
      description: API which returns the enviornment details. The API authenticates the request by validating the short-lived integration run access token with the given run Id in params.
      operationId: fetchEnvironment
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: environmentId
          in: path
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        "200":
          description: 200 -OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  createdAt:
                    type: string
                    example: "2021-02-05T07:15:51.000Z"
                  id:
                    type: string
                    example: 9df7564f-d515-445a-a2d4-6ee5f594cc79
                  lastRevision:
                    type: number
                    example: 61720491
                  lastUpdatedBy:
                    type: string
                    example: "532277"
                  name:
                    type: string
                    example: Trigger API
                  owner:
                    type: string
                    example: "532277"
                  team:
                    nullable: true
                    example: ~
                  updatedAt:
                    type: string
                    example: "2021-02-05T07:16:05.000Z"
                  values:
                    type: array
                    items:
                      type: object
                      properties:
                        enabled:
                          type: boolean
                          example: true
                        key:
                          type: string
                          example: check
                        value:
                          type: string
                          example: hha
                    example:
                      - enabled: true
                        key: check
                        value: hha
              examples:
                200 -OK:
                  value:
                    createdAt: "2021-02-05T07:15:51.000Z"
                    id: 9df7564f-d515-445a-a2d4-6ee5f594cc79
                    lastRevision: 61720491
                    lastUpdatedBy: "532277"
                    name: Trigger API
                    owner: "532277"
                    team: ~
                    updatedAt: "2021-02-05T07:16:05.000Z"
                    values:
                      - enabled: true
                        key: check
                        value: hha
      servers:
        - url: 'https://integrate.postman.com'
  /integration-runs/{runId}/proxy/users/{userId}:
    get:
      tags:
        - Integration Helper APIs
      summary: Fetch user
      description: "API which returns the username.\nThe API authenticates the request by validating the short-lived integration run access token with the given run Id in params."
      operationId: fetchUser
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{tempAccessToken}}'
      responses:
        "200":
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "532277"
                  name:
                    type: string
                    example: cooper integrations
              examples:
                200 OK:
                  value:
                    id: "532277"
                    name: cooper integrations
      servers:
        - url: 'https://integrate.postman.com'
  /integration/oauth/token:
    patch:
      tags:
        - Integrations Public
      summary: Update OAuth access token and refresh token for the integration.
      description: >-
        This API updates the OAuth access token and refresh token for the integration after the refresh of the token.
      parameters:
        - name: integrationId
          in: query
          schema:
            type: string
          required: false
          example: '{{integrationId}}'
        - name: integrationRunId
          in: query
          schema:
            type: string
          required: false
          example: '{{integrationRunId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          required: true
          example: '{{tempAccessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                refreshToken:
                  type: string
                expiresIn:
                  type: integer
              required:
                - accessToken
            example:
              accessToken: >-
                {{new_access_token}}
              refreshToken: >-
                {{new_refresh_token}}
              expiresIn: >-
                {{expires_in}}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - success
                    properties:
                      success:
                        type: boolean
              example:
                data:
                  success: true
          description: 'Token update successfull'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
              example:
                error:
                  name: paramMissingError
                  message: Parameter is missing in the request.
                  details:
                    param: OAuth token details
          description: 400 - Incorrect input
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
              example:
                error:
                  name: tokenAuthError
                  message: Access token not found in DB.
                  details:
                    model: token
                    model_id: '{{integrationAuthToken}}'
          description: '403'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '404'
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
              example:
                error:
                  name: serverError
                  message: Something went wrong with the server.
                  details: {}
          description: '500'
  /webhooks/{integrationEncodedId}:
    post:
      tags:
        - Integrations Public
      summary: External Webhooks
      description: |-
        A catch-all handler for external incoming webhook calls.

        `integrationEncodedId` is encoded the integration ID in base 58.
      parameters:
        - name: integrationEncodedId
          in: path
          schema:
            type: string
          required: true
          example: 2MsYd3
        - name: x-hub-signature
          in: header
          schema:
            type: string
          example: sha1=04f306c1b66e87be6ac033d1581820728b1c2c80
        - name: x-github-event
          in: header
          schema:
            type: string
          example: push
        - name: X-Hub-Signature-256
          in: header
          schema:
            type: string
          example: >-
            sha256=b38aa1219b44d2cb0029c6a343b12236901002505b5091783671e8c240f21509
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                before:
                  type: string
                after:
                  type: string
                repository:
                  type: object
                  required:
                    - id
                    - node_id
                    - name
                    - full_name
                    - private
                    - owner
                    - html_url
                    - description
                    - fork
                    - url
                    - forks_url
                    - keys_url
                    - collaborators_url
                    - teams_url
                    - hooks_url
                    - issue_events_url
                    - events_url
                    - assignees_url
                    - branches_url
                    - tags_url
                    - blobs_url
                    - git_tags_url
                    - git_refs_url
                    - trees_url
                    - statuses_url
                    - languages_url
                    - stargazers_url
                    - contributors_url
                    - subscribers_url
                    - subscription_url
                    - commits_url
                    - git_commits_url
                    - comments_url
                    - issue_comment_url
                    - contents_url
                    - compare_url
                    - merges_url
                    - archive_url
                    - downloads_url
                    - issues_url
                    - pulls_url
                    - milestones_url
                    - notifications_url
                    - labels_url
                    - releases_url
                    - deployments_url
                    - created_at
                    - updated_at
                    - pushed_at
                    - git_url
                    - ssh_url
                    - clone_url
                    - svn_url
                    - homepage
                    - size
                    - stargazers_count
                    - watchers_count
                    - language
                    - has_issues
                    - has_projects
                    - has_downloads
                    - has_wiki
                    - has_pages
                    - forks_count
                    - mirror_url
                    - archived
                    - disabled
                    - open_issues_count
                    - license
                    - forks
                    - open_issues
                    - watchers
                    - default_branch
                    - stargazers
                    - master_branch
                  properties:
                    id:
                      type: integer
                    node_id:
                      type: string
                    name:
                      type: string
                    full_name:
                      type: string
                    private:
                      type: boolean
                    owner:
                      type: object
                      required:
                        - name
                        - email
                        - login
                        - id
                        - node_id
                        - avatar_url
                        - gravatar_id
                        - url
                        - html_url
                        - followers_url
                        - following_url
                        - gists_url
                        - starred_url
                        - subscriptions_url
                        - organizations_url
                        - repos_url
                        - events_url
                        - received_events_url
                        - type
                        - site_admin
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        login:
                          type: string
                        id:
                          type: integer
                        node_id:
                          type: string
                        avatar_url:
                          type: string
                          format: uri
                        gravatar_id:
                          type: string
                        url:
                          type: string
                          format: uri
                        html_url:
                          type: string
                          format: uri
                        followers_url:
                          type: string
                          format: uri
                        following_url:
                          type: string
                          format: uri
                        gists_url:
                          type: string
                          format: uri
                        starred_url:
                          type: string
                          format: uri
                        subscriptions_url:
                          type: string
                          format: uri
                        organizations_url:
                          type: string
                          format: uri
                        repos_url:
                          type: string
                          format: uri
                        events_url:
                          type: string
                          format: uri
                        received_events_url:
                          type: string
                          format: uri
                        type:
                          type: string
                        site_admin:
                          type: boolean
                    html_url:
                      type: string
                      format: uri
                    description:
                      type: string
                    fork:
                      type: boolean
                    url:
                      type: string
                      format: uri
                    forks_url:
                      type: string
                      format: uri
                    keys_url:
                      type: string
                      format: uri
                    collaborators_url:
                      type: string
                      format: uri
                    teams_url:
                      type: string
                      format: uri
                    hooks_url:
                      type: string
                      format: uri
                    issue_events_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                      format: uri
                    assignees_url:
                      type: string
                      format: uri
                    branches_url:
                      type: string
                      format: uri
                    tags_url:
                      type: string
                      format: uri
                    blobs_url:
                      type: string
                      format: uri
                    git_tags_url:
                      type: string
                      format: uri
                    git_refs_url:
                      type: string
                      format: uri
                    trees_url:
                      type: string
                      format: uri
                    statuses_url:
                      type: string
                      format: uri
                    languages_url:
                      type: string
                      format: uri
                    stargazers_url:
                      type: string
                      format: uri
                    contributors_url:
                      type: string
                      format: uri
                    subscribers_url:
                      type: string
                      format: uri
                    subscription_url:
                      type: string
                      format: uri
                    commits_url:
                      type: string
                      format: uri
                    git_commits_url:
                      type: string
                      format: uri
                    comments_url:
                      type: string
                      format: uri
                    issue_comment_url:
                      type: string
                      format: uri
                    contents_url:
                      type: string
                      format: uri
                    compare_url:
                      type: string
                      format: uri
                    merges_url:
                      type: string
                      format: uri
                    archive_url:
                      type: string
                      format: uri
                    downloads_url:
                      type: string
                      format: uri
                    issues_url:
                      type: string
                      format: uri
                    pulls_url:
                      type: string
                      format: uri
                    milestones_url:
                      type: string
                      format: uri
                    notifications_url:
                      type: string
                      format: uri
                    labels_url:
                      type: string
                      format: uri
                    releases_url:
                      type: string
                      format: uri
                    deployments_url:
                      type: string
                      format: uri
                    created_at:
                      type: integer
                    updated_at:
                      type: string
                      format: date-time
                    pushed_at:
                      type: integer
                    git_url:
                      type: string
                      format: uri
                    ssh_url:
                      type: string
                      format: style
                    clone_url:
                      type: string
                      format: uri
                    svn_url:
                      type: string
                      format: uri
                    homepage:
                      type: string
                      nullable: true
                    size:
                      type: integer
                    stargazers_count:
                      type: integer
                    watchers_count:
                      type: integer
                    language:
                      type: string
                      nullable: true
                    has_issues:
                      type: boolean
                    has_projects:
                      type: boolean
                    has_downloads:
                      type: boolean
                    has_wiki:
                      type: boolean
                    has_pages:
                      type: boolean
                    forks_count:
                      type: integer
                    mirror_url:
                      type: string
                      nullable: true
                    archived:
                      type: boolean
                    disabled:
                      type: boolean
                    open_issues_count:
                      type: integer
                    license:
                      type: string
                      nullable: true
                    forks:
                      type: integer
                    open_issues:
                      type: integer
                    watchers:
                      type: integer
                    default_branch:
                      type: string
                    stargazers:
                      type: integer
                    master_branch:
                      type: string
                pusher:
                  type: object
                  required:
                    - name
                    - email
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                sender:
                  type: object
                  required:
                    - login
                    - id
                    - node_id
                    - avatar_url
                    - gravatar_id
                    - url
                    - html_url
                    - followers_url
                    - following_url
                    - gists_url
                    - starred_url
                    - subscriptions_url
                    - organizations_url
                    - repos_url
                    - events_url
                    - received_events_url
                    - type
                    - site_admin
                  properties:
                    login:
                      type: string
                    id:
                      type: integer
                    node_id:
                      type: string
                    avatar_url:
                      type: string
                      format: uri
                    gravatar_id:
                      type: string
                    url:
                      type: string
                      format: uri
                    html_url:
                      type: string
                      format: uri
                    followers_url:
                      type: string
                      format: uri
                    following_url:
                      type: string
                      format: uri
                    gists_url:
                      type: string
                      format: uri
                    starred_url:
                      type: string
                      format: uri
                    subscriptions_url:
                      type: string
                      format: uri
                    organizations_url:
                      type: string
                      format: uri
                    repos_url:
                      type: string
                      format: uri
                    events_url:
                      type: string
                      format: uri
                    received_events_url:
                      type: string
                      format: uri
                    type:
                      type: string
                    site_admin:
                      type: boolean
                created:
                  type: boolean
                deleted:
                  type: boolean
                forced:
                  type: boolean
                base_ref:
                  type: string
                  nullable: true
                compare:
                  type: string
                  format: uri
                commits:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - tree_id
                      - distinct
                      - message
                      - timestamp
                      - url
                      - author
                      - committer
                      - added
                      - removed
                      - modified
                    properties:
                      id:
                        type: string
                      tree_id:
                        type: string
                      distinct:
                        type: boolean
                      message:
                        type: string
                      timestamp:
                        type: string
                        format: date-time
                      url:
                        type: string
                        format: uri
                      author:
                        type: object
                        required:
                          - name
                          - email
                          - username
                        properties:
                          name:
                            type: string
                          email:
                            type: string
                            format: email
                          username:
                            type: string
                      committer:
                        type: object
                        required:
                          - name
                          - email
                          - username
                        properties:
                          name:
                            type: string
                          email:
                            type: string
                            format: email
                          username:
                            type: string
                      added:
                        type: array
                        items:
                          type: object
                      removed:
                        type: array
                        items:
                          type: object
                      modified:
                        type: array
                        items:
                          type: string
                head_commit:
                  type: object
                  required:
                    - id
                    - tree_id
                    - distinct
                    - message
                    - timestamp
                    - url
                    - author
                    - committer
                    - added
                    - removed
                    - modified
                  properties:
                    id:
                      type: string
                    tree_id:
                      type: string
                    distinct:
                      type: boolean
                    message:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
                    url:
                      type: string
                      format: uri
                    author:
                      type: object
                      required:
                        - name
                        - email
                        - username
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        username:
                          type: string
                    committer:
                      type: object
                      required:
                        - name
                        - email
                        - username
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        username:
                          type: string
                    added:
                      type: array
                      items:
                        type: object
                    removed:
                      type: array
                      items:
                        type: object
                    modified:
                      type: array
                      items:
                        type: string
            example:
              ref: refs/heads/develop
              before: 7d075ad31a5b79589b8d2d08db86c9243ea65c27
              after: f89e6b7f6c5549b521a83015f0a1d1fbb3544cff
              repository:
                id: 239431551
                node_id: MDEwOlJlcG9zaXRvcnkyMzk0MzE1NTE=
                name: postman-collection-sync-test
                full_name: Atishay4294/postman-collection-sync-test
                private: true
                owner:
                  name: Atishay4294
                  email: atishay.tpg@gmail.com
                  login: Atishay4294
                  id: 5082100
                  node_id: MDQ6VXNlcjUwODIxMDA=
                  avatar_url: 'https://avatars.githubusercontent.com/u/5082100?v=4'
                  gravatar_id: ''
                  url: 'https://api.github.com/users/Atishay4294'
                  html_url: 'https://github.com/Atishay4294'
                  followers_url: 'https://api.github.com/users/Atishay4294/followers'
                  following_url: >-
                    https://api.github.com/users/Atishay4294/following{/other_user}
                  gists_url: 'https://api.github.com/users/Atishay4294/gists{/gist_id}'
                  starred_url: >-
                    https://api.github.com/users/Atishay4294/starred{/owner}{/repo}
                  subscriptions_url: 'https://api.github.com/users/Atishay4294/subscriptions'
                  organizations_url: 'https://api.github.com/users/Atishay4294/orgs'
                  repos_url: 'https://api.github.com/users/Atishay4294/repos'
                  events_url: 'https://api.github.com/users/Atishay4294/events{/privacy}'
                  received_events_url: 'https://api.github.com/users/Atishay4294/received_events'
                  type: User
                  site_admin: false
                html_url: 'https://github.com/Atishay4294/postman-collection-sync-test'
                description: Repository to test github <> postman collection sync
                fork: false
                url: 'https://github.com/Atishay4294/postman-collection-sync-test'
                forks_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/forks
                keys_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/keys{/key_id}
                collaborators_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/collaborators{/collaborator}
                teams_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/teams
                hooks_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/hooks
                issue_events_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/issues/events{/number}
                events_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/events
                assignees_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/assignees{/user}
                branches_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/branches{/branch}
                tags_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/tags
                blobs_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/git/blobs{/sha}
                git_tags_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/git/tags{/sha}
                git_refs_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/git/refs{/sha}
                trees_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/git/trees{/sha}
                statuses_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/statuses/{sha}
                languages_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/languages
                stargazers_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/stargazers
                contributors_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/contributors
                subscribers_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/subscribers
                subscription_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/subscription
                commits_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/commits{/sha}
                git_commits_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/git/commits{/sha}
                comments_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/comments{/number}
                issue_comment_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/issues/comments{/number}
                contents_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/contents/{+path}
                compare_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/compare/{base}...{head}
                merges_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/merges
                archive_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/{archive_format}{/ref}
                downloads_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/downloads
                issues_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/issues{/number}
                pulls_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/pulls{/number}
                milestones_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/milestones{/number}
                notifications_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/notifications{?since,all,participating}
                labels_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/labels{/name}
                releases_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/releases{/id}
                deployments_url: >-
                  https://api.github.com/repos/Atishay4294/postman-collection-sync-test/deployments
                created_at: 1581310970
                updated_at: '2021-04-16T13:33:22Z'
                pushed_at: 1618580368
                git_url: 'git://github.com/Atishay4294/postman-collection-sync-test.git'
                ssh_url: 'git@github.com:Atishay4294/postman-collection-sync-test.git'
                clone_url: >-
                  https://github.com/Atishay4294/postman-collection-sync-test.git
                svn_url: 'https://github.com/Atishay4294/postman-collection-sync-test'
                homepage: null
                size: 358
                stargazers_count: 0
                watchers_count: 0
                language: null
                has_issues: true
                has_projects: true
                has_downloads: true
                has_wiki: true
                has_pages: false
                forks_count: 0
                mirror_url: null
                archived: false
                disabled: false
                open_issues_count: 0
                license: null
                forks: 0
                open_issues: 0
                watchers: 0
                default_branch: develop
                stargazers: 0
                master_branch: develop
              pusher:
                name: Atishay4294
                email: atishay.tpg@gmail.com
              sender:
                login: Atishay4294
                id: 5082100
                node_id: MDQ6VXNlcjUwODIxMDA=
                avatar_url: 'https://avatars.githubusercontent.com/u/5082100?v=4'
                gravatar_id: ''
                url: 'https://api.github.com/users/Atishay4294'
                html_url: 'https://github.com/Atishay4294'
                followers_url: 'https://api.github.com/users/Atishay4294/followers'
                following_url: >-
                  https://api.github.com/users/Atishay4294/following{/other_user}
                gists_url: 'https://api.github.com/users/Atishay4294/gists{/gist_id}'
                starred_url: >-
                  https://api.github.com/users/Atishay4294/starred{/owner}{/repo}
                subscriptions_url: 'https://api.github.com/users/Atishay4294/subscriptions'
                organizations_url: 'https://api.github.com/users/Atishay4294/orgs'
                repos_url: 'https://api.github.com/users/Atishay4294/repos'
                events_url: 'https://api.github.com/users/Atishay4294/events{/privacy}'
                received_events_url: 'https://api.github.com/users/Atishay4294/received_events'
                type: User
                site_admin: false
              created: false
              deleted: false
              forced: false
              base_ref: null
              compare: >-
                https://github.com/Atishay4294/postman-collection-sync-test/compare/7d075ad31a5b...f89e6b7f6c55
              commits:
                - id: f89e6b7f6c5549b521a83015f0a1d1fbb3544cff
                  tree_id: c45375d4b5e74a6bc7ab8dfb0ae37fd64994e75a
                  distinct: true
                  message: Update yy
                  timestamp: '2021-04-16T19:09:28+05:30'
                  url: >-
                    https://github.com/Atishay4294/postman-collection-sync-test/commit/f89e6b7f6c5549b521a83015f0a1d1fbb3544cff
                  author:
                    name: Atishay Jain
                    email: atishay.tpg@gmail.com
                    username: Atishay4294
                  committer:
                    name: GitHub
                    email: noreply@github.com
                    username: web-flow
                  added: []
                  removed: []
                  modified:
                    - xx/yy
              head_commit:
                id: f89e6b7f6c5549b521a83015f0a1d1fbb3544cff
                tree_id: c45375d4b5e74a6bc7ab8dfb0ae37fd64994e75a
                distinct: true
                message: Update yy
                timestamp: '2021-04-16T19:09:28+05:30'
                url: >-
                  https://github.com/Atishay4294/postman-collection-sync-test/commit/f89e6b7f6c5549b521a83015f0a1d1fbb3544cff
                author:
                  name: Atishay Jain
                  email: atishay.tpg@gmail.com
                  username: Atishay4294
                committer:
                  name: GitHub
                  email: noreply@github.com
                  username: web-flow
                added: []
                removed: []
                modified:
                  - xx/yy
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
              example:
                data: {}
          description: Github webhook payload
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: utc-millisec
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the integration you are looking for
                  details:
                    model: integration
                    model_id: '12345'
          description: 404 - Invalid integration id
      servers:
        - url: integrate-beta.pstmn.io
  # Public OAuth endpoints
  /oauth/authorize/{service}:
    get:
      tags:
        - OAuth public
        - Integrations Public
      summary: Initiate Authorization
      description: >-
        This endpoint is responsible for two things

        1. Take the session id as input, validate it and then construct the 3rd
        party authorization URL

        2. Show a confirmation page to the user stating that they will leave
        postman and will be redirected to the 3rd party authorization page.


        Once the client creates a session and gets the sessionId, the client
        will take the user to a new browser tab with this endpoint. Based on the
        sessionId and service path param, the integration service will fetch all
        the details of the 3rd party and redirect the user to this confirmation
        page. This page shows some of the details of user like name and email,
        which the user can verify before proceedig.
      parameters:
        - name: service
          in: path
          schema:
            type: string
          required: true
        - name: sessionId
          in: query
          schema:
            type: string
          description: >-
            The unique identifier of the session, fetched from the response of
            create session call
          example: '{{sessionId}}'
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: session expired
        default:
          content:
            text/html:
              schema:
                type: string
          description: authorization initiated
          headers:
            Set-cookie:
              schema:
                type: string
              example: >-
                postman.integrations.oauth=xyz; Max-Age=300; Path=/;
                Expires=Fri, 22 Jan; Secure; HttpOnly
  /oauth/callback/{service}:
    get:
      tags:
        - OAuth public
        - Integrations Public
      summary: Callback from 3rd party service
      description: >-
        This endpoint is the handler for all the 3rd party callbacks. It is
        registered in all our Slack, Dropbox, GitHub and Bitbucket OAuth apps.


        When the user authorizes our Postman Apps for access, 3rd party service
        calls this endpoint passing the secret code and state parameters. These
        parameters along with registered app's client id and secret are used to
        make one final call to the 3rd party service, in which the code is
        exchanged with user's access token.
      parameters:
        - name: service
          in: path
          schema:
            type: string
          required: true
        - name: code
          in: query
          schema:
            type: string
          description: >-
            The secret code parameter which our service will exchange for access
            token
          example: '{{code}}'
        - name: state
          in: query
          schema:
            type: string
          description: >-
            The unique session parameter which prevents man in the middle
            attacks
          example: '{{state}}'
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: state/code parameter missing
        default:
          content:
            text/html:
              schema:
                type: string
          description: invalid service passed

  # Integration Storage Endpoints
  /integration/{integrationId}/storage/{dataType}:
    delete:
      summary: "Delete integration storage"
      tags:
        - Integrations Public
      parameters:
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
        - name: dataType
          in: path
          required: true
          schema:
            type: string
        - name: integrationRunId
          in: query
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
      operationId: deleteIntegrationStorageData
      description: >-
        This endpoint allows authors to delete records from integration storage
        of corresponding data type.
        Authors have full flexibility of using ORM level filtering of records to
        delete by sending the corresponding valid structure in payload.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                column1Name: Test Value
      responses:
        "200":
          description: List matched records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /integration/{integrationId}/storage/{dataType}/fetch:
    post:
      summary: "Update integration storage"
      tags:
        - Integrations Public
      parameters:
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
        - name: dataType
          in: path
          required: true
          schema:
            type: string
        - name: integrationRunId
          in: query
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
      operationId: findIntegrationStorageData
      description: >-
        This endpoint allows authors to find records from integration storage
        of corresponding data type.
        Authors have full flexibility of using ORM level filtering of records,
        alongwith pagination and setting offset offered in sails.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                column1Name: Test Value
      responses:
        "200":
          description: List of created records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /integration/{integrationId}/storage/{dataType}/upsert:
    post:
      summary: "Update integration storage"
      tags:
        - Integrations Public
      parameters:
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
        - name: dataType
          in: path
          required: true
          schema:
            type: string
        - name: integrationRunId
          in: query
          schema:
            type: string
        - name: x-access-token
          in: header
          schema:
            type: string
      operationId: createOrUpdateIntegrationStorageData
      description: >-
        This endpoint allows authors to create new records or update existing
        ones from integration storage of corresponding data type.
        Authors just need to send list of records they wish to create/update.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
      responses:
        "200":
          description: List of created records
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: integer
                    description: Total number of records created in db
                  updated:
                    type: integer
                    description: Total number of records updated in db

  # Endpoints exposed on both internal and public service
  /integration/{integration_id}/runs:
    get:
      tags:
        - Integration Run Information
        - Integrations Public
        - Integrations Internal
      summary: List Integration Runs by Integration ID
      description: Max `count` supported by this API - `100`
      parameters:
        - name: integration_id
          in: path
          schema:
            type: string
          required: true
        - name: count
          in: query
          schema:
            type: integer
          example: 100
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/Meta'
                  model_id:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - status
                        - integration
                        - statusMessage
                        - extraData
                        - updatedAt
                        - createdAt
                      properties:
                        id:
                          type: string
                          format: utc-millisec
                        status:
                          type: string
                        integration:
                          type: string
                        statusMessage:
                          type: string
                        extraData:
                          type: object
                        updatedAt:
                          type: string
                          format: date-time
                        createdAt:
                          type: string
                          format: date-time
              example:
                meta:
                  model: integrationrun
                  action: find
                model_id: '{{integration_id}}'
                data:
                  - id: '1'
                    status: running
                    integration: '{{integration_id}}'
                    statusMessage: ''
                    extraData: {}
                    updatedAt: '2020-02-20T14:23:29Z'
                    createdAt: '2020-02-20T14:22:13Z'
                  - id: '2'
                    status: fail
                    integration: '{{integration_id}}'
                    statusMessage: Failed due to Network error
                    extraData: {}
                    updatedAt: '2020-02-12T14:23:29Z'
                    createdAt: '2020-02-12T14:22:13Z'
                  - id: '3'
                    status: success
                    integration: '{{integration_id}}'
                    statusMessage: ''
                    extraData: {}
                    updatedAt: '2020-02-02T14:23:29Z'
                    createdAt: '2020-02-02T14:22:13Z'
          description: '200'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the user you are looking for
                  details:
                    model: user
                    model_id: '{{user_id}}'
                    owner: '{{user_id}}'
          description: '404'
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                          - message
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            nullable: true
                          message:
                            type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
                  details:
                    model: integration
                    model_id: '{{integration_id}}'
                    owner: null
                    message: This API is not accessible to guest users yet
          description: '403'
  /api/integration:
    get:
      tags:
        - Legacy APIs
        - Integrations Public
        - Integrations Internal
      summary: List Configured Integrations
      description: Legacy endpoint receiving calls from v7 apps.
      parameters:
        - name: user_id
          in: query
          schema:
            type: string
          example: '{{user_id}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: >-
                        #/components/schemas/listConfiguredIntegrations200ResponseArraySubSchema
                    - type: object
                      properties: {}
                      required:
                        - model_id
                        - meta
                        - data
              example:
                - model_id: 205
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '1'
                    lastUpdatedBy: '1'
                    id: 205
                    rule: postman_search
                    entity: team
                    executor: '1'
                    name: null
                    variables: {}
                    createdAt: '2017-01-24T08:56:56.000Z'
                    updatedAt: '2017-08-10T10:47:13.000Z'
                - model_id: 1109
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '5665'
                    lastUpdatedBy: '5665'
                    id: 1109
                    rule: teamactivity_microsoft_teams
                    entity: team
                    executor: '1'
                    name: Team Activity to Microsoft Teams
                    variables: {}
                    createdAt: '2019-04-22T06:46:37.000Z'
                    updatedAt: '2019-04-22T06:46:37.000Z'
                - model_id: 2063
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2063
                    rule: api_github
                    entity: api
                    executor: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                    name: One to HelloWorld
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: One
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2HQaLA'
                      secret: >-
                        8dad87bbf1c4e0ed227b858ec4b7480d8be13890a4ed6986a65a451ae8c3b7fb
                    createdAt: '2020-03-24T13:56:24.000Z'
                    updatedAt: '2020-03-24T13:56:24.000Z'
                - model_id: 2136
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2136
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                    name: >-
                      Backup as swagger20 to HelloWorld/Postman
                      Collections/First
                    variables:
                      owner: AbhiramHPostman
                      repository: HelloWorld
                      directory: Postman Collections
                      name: First.yaml
                      branch: ''
                      format: swagger20
                    createdAt: '2020-04-14T10:00:49.000Z'
                    updatedAt: '2020-07-24T10:04:57.000Z'
                - model_id: 2312
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2312
                    rule: collection_github
                    entity: collection
                    executor: 485374-3149d470-732d-40f3-9e43-cddb8b7cfeec
                    name: >-
                      Backup to VeryImportantRepo/Postman Collections/Very
                      Important Collection
                    variables:
                      repository: VeryImportantRepo
                      directory: Postman Collections
                      owner: AbhiramHPostman
                      name: Very Important Collection
                      branch: postman-branch
                    createdAt: '2020-05-03T09:29:09.000Z'
                    updatedAt: '2020-05-03T09:29:09.000Z'
                - model_id: 2629
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2629
                    rule: collection_github
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: >-
                      Backup to HelloWorld/Postman Collections Github/My
                      Collection
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections Github
                      owner: AbhiramHPostman
                      name: My Collection
                      branch: test
                    createdAt: '2020-05-22T10:55:10.000Z'
                    updatedAt: '2020-05-22T10:55:10.000Z'
                - model_id: 2630
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2630
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: >-
                      Backup as raml to HelloWorld/Postman Collections
                      APIMatic/My Collection
                    variables:
                      owner: AbhiramHPostman
                      repository: HelloWorld
                      directory: Postman Collections APIMatic
                      name: My Collection
                      branch: test
                      format: raml
                    createdAt: '2020-05-22T11:07:40.000Z'
                    updatedAt: '2020-05-22T11:07:40.000Z'
                - model_id: 2636
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2636
                    rule: api_github
                    entity: api
                    executor: 3f49b13c-2979-493d-805d-c0a1bd76b90e
                    name: New API to HelloWorld
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: New API
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2HSazZ'
                      secret: >-
                        a3cd227229653e038168ac4da652fb1bf9913c5c22d9509c6bad82bc6ec31e09
                    createdAt: '2020-05-26T05:51:36.000Z'
                    updatedAt: '2020-05-26T05:51:36.000Z'
                - model_id: 2640
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2640
                    rule: collection_microsoft_flow
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Microsoft Flow allows custom identifiers
                    variables:
                      name: Microsoft Flow allows custom identifiers
                    createdAt: '2020-05-26T06:28:05.000Z'
                    updatedAt: '2020-05-26T06:28:05.000Z'
                - model_id: 2641
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2641
                    rule: collection_custom_webhooks
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Custom webhook allows names
                    variables:
                      name: Custom webhook allows names
                    createdAt: '2020-05-26T06:29:49.000Z'
                    updatedAt: '2020-05-26T06:29:49.000Z'
                - model_id: 2646
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2646
                    rule: collectionactivity_microsoft_flow
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Another identifier
                    variables:
                      name: Another identifier
                    createdAt: '2020-05-26T06:47:46.000Z'
                    updatedAt: '2020-05-26T06:47:46.000Z'
                - model_id: 2851
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2851
                    rule: collection_github
                    entity: collection
                    executor: 485374-3c1e8025-4133-42f1-92ce-2ad0bc10b4ca
                    name: Backup to HelloWorld/Postman Collections Beta/Test.json
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections Beta
                      owner: AbhiramHPostman
                      name: Test.json
                      branch: test
                    createdAt: '2020-06-10T10:59:26.000Z'
                    updatedAt: '2020-06-10T10:59:26.000Z'
                - model_id: 2853
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2853
                    rule: monitor_run_slack
                    entity: jobTemplate
                    executor: 1ea8a0c6-5844-47b0-8fd7-c63e8fc7cc26
                    name: 'Monitor to #beta-integrations'
                    variables:
                      options: ''
                      channel: '#beta-integrations'
                    createdAt: '2020-06-10T11:38:43.000Z'
                    updatedAt: '2020-06-10T11:38:43.000Z'
                - model_id: 2995
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 2995
                    rule: collection_github
                    entity: collection
                    executor: 485374-b450fc43-9ace-410e-8908-d1472c6d9940
                    name: Backup to HelloWorld/Postman Collections/WIllBeDeleted
                    variables:
                      repository: HelloWorld
                      directory: Postman Collections
                      owner: AbhiramHPostman
                      name: WIllBeDeleted
                      branch: ''
                    createdAt: '2020-06-19T12:17:08.000Z'
                    updatedAt: '2020-06-19T12:17:08.000Z'
                - model_id: 3196
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3196
                    rule: teamactivity_hipchat
                    entity: team
                    executor: '1'
                    name: xxxx
                    variables: {}
                    createdAt: '2020-07-15T15:44:29.000Z'
                    updatedAt: '2020-07-15T15:44:29.000Z'
                - model_id: 3198
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3198
                    rule: teamactivity_microsoft_teams
                    entity: team
                    executor: '1'
                    name: zzushdb
                    variables: {}
                    createdAt: '2020-07-15T15:46:24.000Z'
                    updatedAt: '2020-07-15T15:46:24.000Z'
                - model_id: 3209
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3209
                    rule: apiversion_github
                    entity: apiversion
                    executor: 5ee92cf6-b8bc-4fb5-8c2d-af984246f262
                    name: 1.1.1 to Postman Beta API/1.1.1.json
                    variables:
                      directory: Postman Beta API
                      filename: 1.1.1.json
                      branch: development
                      source: postman
                      api: dc858666-1ca9-4e1e-ba90-11551d2f66ee
                      name: 1.1.1
                    createdAt: '2020-07-17T10:42:13.000Z'
                    updatedAt: '2020-07-17T10:42:13.000Z'
                - model_id: 3210
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3210
                    rule: monitor_run_slack
                    entity: jobTemplate
                    executor: 1ea8a0c6-5844-47b0-8fd7-c63e8fc7cc26
                    name: 'Monitor to #beta-integrations'
                    variables:
                      channel: '#beta-integrations'
                      options: all_runs
                    createdAt: '2020-07-17T10:43:35.000Z'
                    updatedAt: '2020-07-17T10:43:35.000Z'
                - model_id: 3242
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3242
                    rule: collection_apimatic_github_v2
                    entity: collection
                    executor: 485374-9acb5b98-e0f1-47b6-a5ac-a62b1dc00077
                    name: Test integration
                    variables:
                      owner: AbhiramH
                      repository: TestRepo
                      directory: Postman Collections APIMatic
                      name: My Collection.raml
                      branch: ''
                      format: raml10
                    createdAt: '2020-07-23T12:07:48.000Z'
                    updatedAt: '2020-07-23T12:07:48.000Z'
                - model_id: 3243
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3243
                    rule: apiversion_github
                    entity: apiversion
                    executor: 2bc2be9d-02d4-46fb-aafe-7cdafbb6100f
                    name: 0.0.1 to Schema Sync/0.0.1.json
                    variables:
                      directory: Schema Sync
                      filename: 0.0.1.json
                      branch: development
                      source: postman
                      api: 3f49b13c-2979-493d-805d-c0a1bd76b90e
                      name: 0.0.1
                    createdAt: '2020-07-23T12:39:59.000Z'
                    updatedAt: '2020-07-23T12:39:59.000Z'
                - model_id: 3245
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '485374'
                    lastUpdatedBy: '485374'
                    id: 3245
                    rule: api_github
                    entity: api
                    executor: 6cb47691-4773-453f-92bd-7568e4a7bd3d
                    name: Mini Sync Service
                    variables:
                      repository: HelloWorld
                      owner: AbhiramHPostman
                      name: One more
                      webhook: 'https://integrate-beta.pstmn.io/webhooks/2JuERa'
                      secret: >-
                        f8e13a6033fa7980ad566dcc1b37f526c6af0544bb2b6d119743713672901353
                    createdAt: '2020-07-23T12:52:23.000Z'
                    updatedAt: '2020-07-23T12:52:23.000Z'
                - model_id: 3249
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3249
                    rule: teamactivity_custom_webhooks
                    entity: team
                    executor: '1'
                    name: aaa
                    variables: {}
                    createdAt: '2020-07-23T15:23:02.000Z'
                    updatedAt: '2020-07-23T15:23:02.000Z'
                - model_id: 3253
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3253
                    rule: teamactivity_microsoft_flow
                    entity: team
                    executor: '1'
                    name: >-
                      http://localhost:.5090/integrations/services/microsoft_flow/add/teamactivity_microsoft_flow?workspace=2e6afb66-de04-4472-9623-3b9d60fbdb77
                    variables: {}
                    createdAt: '2020-07-23T15:28:14.000Z'
                    updatedAt: '2020-07-23T15:28:14.000Z'
                - model_id: 3257
                  meta:
                    model: integration
                    action: find
                  data:
                    createdBy: '462940'
                    lastUpdatedBy: '462940'
                    id: 3257
                    rule: teamactivity_slack
                    entity: team
                    executor: '1'
                    name: Team Activity to atishay-test-channel
                    variables:
                      channel: atishay-test-channel
                    createdAt: '2020-07-23T15:34:28.000Z'
                    updatedAt: '2020-07-23T15:34:28.000Z'
          description: List Integrations
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Mon, 27 Jul 2020 09:38:05 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=edf6df7e6471c63b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=679caedb7289106b
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"2a2f-MIMY0ngFe2jnvH3frGU8wA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
components:
  schemas:
    AuthenticationError:
      type: object
      description: Hello world
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              example: You are not authenticated by the server.
            name:
              type: string
    InstanceNotFoundError:
      type: object
      properties:
        error:
          type: object
          properties:
            details:
              type: object
              properties:
                model:
                  type: string
                  example: options.model
                model_id:
                  type: string
                  example: options.model_id
                owner:
                  type: string
                  example: options.owner
            message:
              type: string
              example: We could not find the integration you are looking for
            name:
              type: string
    IntegrationsMeta:
      type: object
      required:
        - model
        - action
      properties:
        model:
          type: string
        action:
          type: string
        allowedActions:
          type: object
          properties:
            delete:
              type: boolean
            update:
              type: boolean
    pushEventToIngestor400ResponseSubSchema:
      type: object
      properties:
        meta:
          type: object
          required:
            - accepted
          properties:
            accepted:
              type: boolean
        data:
          type: object
          required:
            - eventId
          properties:
            eventId:
              type: string
        details:
          type: object
          required:
            - action
            - correctFormat
            - entity
            - missingFields
            - param
            - requiredFields
          properties:
            entity:
              type: string
            action:
              type: string
            requiredFields:
              type: array
              items:
                type: string
            missingFields:
              type: array
              items:
                type: string
            param:
              type: string
            correctFormat:
              type: string
    integrationServiceDetails200ResponseIntegrationsSubSchema:
      type: object
      required:
        - collection_github
        - collection_github_enterprise
        - api_github
      properties:
        collection_github:
          type: object
          required:
            - name
            - description
            - summary
            - client_categories
            - type
            - entity
            - scope
            - sync_data
            - variables
            - auth_type
            - canCreateIntegration
          properties:
            name:
              type: string
            description:
              type: string
            summary:
              type: string
            client_categories:
              type: array
              items:
                type: string
            type:
              type: string
            entity:
              type: string
            scope:
              type: string
            sync_data:
              type: array
              items:
                type: object
            variables:
              type: array
              items:
                type: object
            auth_type:
              type: string
            canCreateIntegration:
              type: boolean
        collection_github_enterprise:
          type: object
          required:
            - name
            - description
            - summary
            - client_categories
            - type
            - entity
            - scope
            - sync_data
            - variables
            - auth_type
            - canCreateIntegration
          properties:
            name:
              type: string
            description:
              type: string
            summary:
              type: string
            client_categories:
              type: array
              items:
                type: string
            type:
              type: string
            entity:
              type: string
            scope:
              type: string
            sync_data:
              type: array
              items:
                type: object
            variables:
              type: array
              items:
                type: object
            auth_type:
              type: string
            canCreateIntegration:
              type: boolean
        api_github:
          type: object
          required:
            - name
            - description
            - summary
            - client_categories
            - type
            - entity
            - scope
            - sync_data
            - variables
            - auth_type
            - canCreateIntegration
          properties:
            name:
              type: string
            description:
              type: string
            summary:
              type: string
            client_categories:
              type: array
              items:
                type: string
            type:
              type: string
            entity:
              type: string
            scope:
              type: string
            sync_data:
              type: array
              items:
                type: object
            variables:
              type: array
              items:
                type: object
            auth_type:
              type: string
            canCreateIntegration:
              type: boolean
    integrationServiceDetails200ResponseServiceSubSchema:
      $ref: >-
        #/components/schemas/integrationServiceDetails200ResponseServiceSubSchema
      type: object
      required:
        - name
        - icon
        - icon_url
        - description
        - extended_description
        - categories
        - setup_details
        - service_data
        - oauth_initiator_host
        - integrations
        - id
      properties:
        categories:
          type: array
          items:
            type: string
        service_data:
          type: array
          items:
            type: object
        integrations:
          type: object
          required:
            - github
          properties:
            github:
              type: object
              required:
                - collection_github
                - collection_github_enterprise
                - api_github
              properties:
                collection_github:
                  type: object
                  required:
                    - name
                    - description
                    - summary
                    - client_categories
                    - type
                    - entity
                    - scope
                    - sync_data
                    - variables
                    - auth_type
                    - canCreateIntegration
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    summary:
                      type: string
                    client_categories:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                    entity:
                      type: string
                    scope:
                      type: string
                    sync_data:
                      type: array
                      items:
                        type: object
                    variables:
                      type: array
                      items:
                        type: object
                    auth_type:
                      type: string
                    canCreateIntegration:
                      type: boolean
                collection_github_enterprise:
                  type: object
                  required:
                    - name
                    - description
                    - summary
                    - client_categories
                    - type
                    - entity
                    - scope
                    - sync_data
                    - variables
                    - auth_type
                    - canCreateIntegration
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    summary:
                      type: string
                    client_categories:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                    entity:
                      type: string
                    scope:
                      type: string
                    sync_data:
                      type: array
                      items:
                        type: object
                    variables:
                      type: array
                      items:
                        type: object
                    auth_type:
                      type: string
                    canCreateIntegration:
                      type: boolean
                api_github:
                  type: object
                  required:
                    - name
                    - description
                    - summary
                    - client_categories
                    - type
                    - entity
                    - scope
                    - sync_data
                    - variables
                    - auth_type
                    - canCreateIntegration
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    summary:
                      type: string
                    client_categories:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                    entity:
                      type: string
                    scope:
                      type: string
                    sync_data:
                      type: array
                      items:
                        type: object
                    variables:
                      type: array
                      items:
                        type: object
                    auth_type:
                      type: string
                    canCreateIntegration:
                      type: boolean
        name:
          type: string
        id:
          type: string
    integrationServiceDetails200ResponseServicesSubSchema:
      type: object
      required:
        - pm_pro_api
        - apimatic
        - bigpanda
        - coralogix
        - datadog
        - dropbox
        - github
        - gitlab
        - bitbucket
        - hipchat
        - keen_io
        - microsoft_flow
        - microsoft_teams
        - pagerduty
        - slack
        - victorops
        - custom
        - aws_api_gateway
      properties:
        pm_pro_api:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
        apimatic:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              format: uri
            integrations:
              type: object
              required:
                - apimatic
              properties:
                apimatic:
                  type: object
                  required:
                    - collection_apimatic_github_v2
                  properties:
                    collection_apimatic_github_v2:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        bigpanda:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - bigpanda
              properties:
                bigpanda:
                  type: object
                  required:
                    - monitor_run_bigpanda
                  properties:
                    monitor_run_bigpanda:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        coralogix:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - coralogix
              properties:
                coralogix:
                  type: object
                  required:
                    - monitor_run_coralogix
                  properties:
                    monitor_run_coralogix:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        datadog:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - datadog
              properties:
                datadog:
                  type: object
                  required:
                    - monitor_run_datadog
                  properties:
                    monitor_run_datadog:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        dropbox:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              format: uri
            integrations:
              type: object
              required:
                - dropbox
              properties:
                dropbox:
                  type: object
                  required:
                    - collection_dropbox
                  properties:
                    collection_dropbox:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        github:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              format: uri
            integrations:
              type: object
              required:
                - github
              properties:
                github:
                  type: object
                  required:
                    - collection_github
                    - collection_github_enterprise
                    - api_github
                  properties:
                    collection_github:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    collection_github_enterprise:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    api_github:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        gitlab:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - gitlab
              properties:
                gitlab:
                  type: object
                  required:
                    - collection_gitlab
                    - collection_gitlab_hosted
                  properties:
                    collection_gitlab:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    collection_gitlab_hosted:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        bitbucket:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              format: uri
            integrations:
              type: object
              required:
                - bitbucket
              properties:
                bitbucket:
                  type: object
                  required:
                    - collection_bitbucket_cloud
                  properties:
                    collection_bitbucket_cloud:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        hipchat:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - hipchat
              properties:
                hipchat:
                  type: object
                  required:
                    - teamactivity_hipchat
                    - monitor_run_hipchat
                  properties:
                    teamactivity_hipchat:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    monitor_run_hipchat:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        keen_io:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - keen_io
              properties:
                keen_io:
                  type: object
                  required:
                    - monitor_run_keen_io
                  properties:
                    monitor_run_keen_io:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        microsoft_flow:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - microsoft_flow
              properties:
                microsoft_flow:
                  type: object
                  required:
                    - monitor_run_microsoft_flow
                    - teamactivity_microsoft_flow
                    - collectionactivity_microsoft_flow
                    - collection_microsoft_flow
                  properties:
                    monitor_run_microsoft_flow:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    teamactivity_microsoft_flow:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    collectionactivity_microsoft_flow:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    collection_microsoft_flow:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        microsoft_teams:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - microsoft_teams
              properties:
                microsoft_teams:
                  type: object
                  required:
                    - teamactivity_microsoft_teams
                    - monitor_run_microsoft_teams
                  properties:
                    teamactivity_microsoft_teams:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    monitor_run_microsoft_teams:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        pagerduty:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - pagerduty
              properties:
                pagerduty:
                  type: object
                  required:
                    - monitor_run_pagerduty
                  properties:
                    monitor_run_pagerduty:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        slack:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              format: uri
            integrations:
              type: object
              required:
                - slack
              properties:
                slack:
                  type: object
                  required:
                    - teamactivity_slack
                    - monitor_run_slack
                    - postman_search
                  properties:
                    teamactivity_slack:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    monitor_run_slack:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    postman_search:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        victorops:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
              format: style
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - victorops
              properties:
                victorops:
                  type: object
                  required:
                    - monitor_run_victorops
                  properties:
                    monitor_run_victorops:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        custom:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - custom
              properties:
                custom:
                  type: object
                  required:
                    - monitor_run_custom_webhooks
                    - teamactivity_custom_webhooks
                    - collection_custom_webhooks
                  properties:
                    monitor_run_custom_webhooks:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    teamactivity_custom_webhooks:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
                    collection_custom_webhooks:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
        aws_api_gateway:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
          properties:
            name:
              type: string
            icon:
              type: string
            icon_url:
              type: string
              format: uri
            description:
              type: string
            extended_description:
              type: string
            categories:
              type: array
              items:
                type: string
            setup_details:
              type: string
            service_data:
              type: array
              items:
                type: object
            oauth_initiator_host:
              type: string
              nullable: true
            integrations:
              type: object
              required:
                - aws_api_gateway
              properties:
                aws_api_gateway:
                  type: object
                  required:
                    - aws_api_gateway
                  properties:
                    aws_api_gateway:
                      type: object
                      required:
                        - name
                        - description
                        - summary
                        - client_categories
                        - type
                        - entity
                        - scope
                        - sync_data
                        - variables
                        - auth_type
                        - canCreateIntegration
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        summary:
                          type: string
                        client_categories:
                          type: array
                          items:
                            type: object
                        type:
                          type: string
                        entity:
                          type: string
                        scope:
                          type: string
                        sync_data:
                          type: array
                          items:
                            type: object
                        variables:
                          type: array
                          items:
                            type: object
                        auth_type:
                          type: string
                        canCreateIntegration:
                          type: boolean
    integrationServiceDetails200ResponseSubSchema:
      $ref: >-
        #/components/schemas/integrationServiceDetails200ResponseServiceSubSchema
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
        summary:
          type: string
        misc:
          type: string
        integrations:
          type: object
          required:
            - collection_github
            - collection_github_enterprise
            - api_github
        client_categories:
          type: array
          items:
            type: string
        sync_data:
          type: array
          items:
            type: object
        variables:
          type: array
          items:
            type: object
        auth_type:
          type: string
        canCreateIntegration:
          type: boolean
        service:
          type: object
          required:
            - name
            - icon
            - icon_url
            - description
            - extended_description
            - categories
            - setup_details
            - service_data
            - oauth_initiator_host
            - integrations
            - id
          properties:
            name:
              type: string
            id:
              type: string
        services:
          type: object
          required:
            - pm_pro_api
            - apimatic
            - bigpanda
            - coralogix
            - datadog
            - dropbox
            - github
            - gitlab
            - bitbucket
            - hipchat
            - keen_io
            - microsoft_flow
            - microsoft_teams
            - pagerduty
            - slack
            - victorops
            - custom
            - aws_api_gateway
        name:
          type: string
        id:
          type: string
        type:
          type: string
        entity:
          type: string
        scope:
          type: string
    deleteIntegration200ResponseSubSchema:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: object
        revision:
          type: string
          nullable: true
    updateIntegration200ResponseDataSubSchema:
      type: object
      required:
        - createdAt
        - createdBy
        - entity
        - executor
        - id
        - lastUpdatedBy
        - name
        - rule
        - status
        - team
        - updatedAt
        - variables
      properties:
        lastUpdatedBy:
          type: string
          format: color
        id:
          type: integer
        team:
          type: string
          format: utc-millisec
        rule:
          type: string
        executor:
          type: string
        variables:
          type: object
          required:
            - access_token
            - channel
            - directory
            - name
            - options
            - owner
            - repository
          properties:
            channel:
              type: string
            options:
              type: string
            access_token:
              type: string
              format: color
            repository:
              type: string
            directory:
              type: string
            owner:
              type: string
            name:
              type: string
    actionsBeforeTheIntegrationIsCreatedUsingRequestPayload403ResponseSubSchema:
      type: object
      properties:
        requestId:
          type: string
        result:
          type: string
        took:
          type: number
    Meta:
      type: object
      required:
        - model
        - action
      properties:
        model:
          type: string
        action:
          type: string
    Integration:
      type: object
      required:
        - createdBy
        - lastUpdatedBy
        - id
        - rule
        - entity
        - executor
        - team
        - name
        - variables
        - createdAt
        - updatedAt
      properties:
        createdBy:
          type: string
          format: color
        lastUpdatedBy:
          type: string
          format: color
        id:
          type: string
        rule:
          type: string
        entity:
          type: string
        executor:
          type: string
        team:
          type: string
          format: utc-millisec
        name:
          type: string
        variables:
          type: array
          items:
            type: object
        transactionId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    IntegrationClassFull:
      allOf:
        - $ref: '#/components/schemas/IntegrationClassWithServices'
        - type: object
          required:
            - services
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationClassInput'
    IntegrationClassWithServices:
      allOf:
        - $ref: '#/components/schemas/IntegrationClassWithCategories'
        - type: object
          required:
            - services
          properties:
            services:
              type: array
              items:
                $ref: '#/components/schemas/ServiceBasic'
    IntegrationClassWithCategories:
      allOf:
        - $ref: '#/components/schemas/IntegrationClassBasic'
        - type: object
          required:
            - categories
            - clientCategories
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/CategoryBasic'
            clientCategories:
              type: array
              items:
                $ref: '#/components/schemas/ClientCategoryBasic'
    IntegrationClassBasic:
      type: object
      required:
        - id
        - name
        - description
        - enabled
        - instanceCreation
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        instanceCreation:
          $ref: '#/components/schemas/InstanceCreationObject'
        icon:
          type: string
        featureFlag:
          type: string
        planFlag:
          type: string
        enabled:
          type: boolean
        meta:
          type: object
        triggerEvents:
          type: object
        triggerUrl:
          type: string
    InstanceCreationObject:
      type: object
      required:
        - enabled
        - code
        - description
      properties:
        enabled:
          type: boolean
        additionalContext:
          type: object
        code:
          type: string
          enum:
            - SHOULD_UPGRADE
            - CREATION_ALLOWED
        description:
          type: string
    ServiceWithIntegrationClasses:
      allOf:
        - $ref: '#/components/schemas/ServiceWithCategories'
        - type: object
          required:
            - integrationClasses
          properties:
            integrationClasses:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationClassBasic'
    ServiceWithCategories:
      allOf:
        - $ref: '#/components/schemas/ServiceBasic'
        - type: object
          required:
            - categories
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/CategoryBasic'
    ServiceBasic:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
        iconUrl:
          type: string
        darkIconUrl:
          type: string
        description:
          type: string
        extendedDescription:
          type: string
        featureFlag:
          type: string
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
    CategoryFull:
      allOf:
        - $ref: '#/components/schemas/CategoryBasic'
        - type: object
          required:
            - integrationClasses
            - services
          properties:
            integrationClasses:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationClassBasic'
            services:
              type: array
              items:
                $ref: '#/components/schemas/ServiceBasic'
    CategoryBasic:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    ClientCategoryFull:
      allOf:
        - $ref: '#/components/schemas/ClientCategoryBasic'
        - type: object
          required:
            - integrationClasses
          properties:
            integrationClasses:
              type: array
              items:
                $ref: '#/components/schemas/IntegrationClassBasic'
    ClientCategoryBasic:
      type: object
      required:
        - id
        - key
      properties:
        id:
          type: integer
        key:
          type: string
    IntegrationClassInput:
      allOf:
        - $ref: '#/components/schemas/IntegrationClassInputRequestBody'
        - type: object
          required:
            - id
            - type
            - key
            - integrationClass
          properties:
            id:
              type: string
            integrationClass:
              type: string
    IntegrationClassInputRequestBody:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
        mandatory:
          type: boolean
        sensitive:
          type: boolean
        meta:
          type: boolean
        editable:
          type: boolean
        options:
          type: array
          items:
            type: string
    createSessiondefaultResponseSubSchema:
      type: object
      properties:
        sessionId:
          type: string
        clientId:
          type: string
        state:
          type: string
        oauthUrl:
          type: string
        redirectUrl:
          type: string
    getSessionInformation200ResponseTokenSubSchema:
      type: object
      required:
        - accessToken
        - createdAt
        - createdBy
        - expiresIn
        - scope
        - service
        - type
        - updatedAt
        - variables
      properties:
        accessToken:
          type: string
        expiresIn:
          type: string
          nullable: true
        service:
          type: string
        variables:
          type: string
          nullable: true
    getSessionInformation200ResponseSubSchema:
      type: object
      properties:
        expiresIn:
          type: integer
        token:
          type: object
          required:
            - accessToken
            - createdAt
            - createdBy
            - expiresIn
            - scope
            - service
            - type
            - updatedAt
            - variables
          properties:
            createdAt:
              type: string
              format: date-time
            createdBy:
              type: string
              format: color
            scope:
              type: string
            type:
              type: string
            updatedAt:
              type: string
              format: date-time
        tokenId:
          type: integer
    started200ResponseSubSchema:
      type: object
      properties:
        status:
          type: string
        statusMessage:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    proxyApiToFetchMonitorJobsRunLogs200ResponseStatusSubSchema:
      type: object
      required:
        - state
        - healthy
        - aborted
      properties:
        state:
          type: string
        healthy:
          type: string
        aborted:
          type: string
    proxyApiToFetchMonitorJobsRunLogs200ResponseResultsSubSchema:
      type: object
      required:
        - errorCount
        - warningCount
        - passedTestCount
        - failedTestCount
        - requestCount
        - responseLatency
        - responseSize
      properties:
        errorCount:
          type: string
        warningCount:
          type: string
        passedTestCount:
          type: string
        failedTestCount:
          type: string
        requestCount:
          type: string
        responseLatency:
          type: string
        responseSize:
          type: string
    proxyApiToFetchMonitorJobsRunLogs200ResponseSubSchema:
      type: object
      properties:
        job:
          type: string
        region:
          type: string
        startedAt:
          type: string
        finishedAt:
          type: string
        status:
          type: object
          required:
            - state
            - healthy
            - aborted
        results:
          type: object
          required:
            - errorCount
            - warningCount
            - passedTestCount
            - failedTestCount
            - requestCount
            - responseLatency
            - responseSize
        log:
          type: array
          items:
            type: object
            required:
              - id
              - event
              - timestamp
              - job
              - run
              - args
            properties:
              id:
                type: string
              event:
                type: string
              timestamp:
                type: string
              job:
                type: string
              run:
                type: string
              args:
                type: string
    listConfiguredIntegrations200ResponseArraySubSchema:
      type: object
      required:
        - model_id
        - meta
        - data
      properties:
        model_id:
          type: integer
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: object
    ApiGitGetUser:
      type: object
      properties:
        avatar:
          type: string
          example: "https://logo.shreys7.com"
        id:
          type: string
          example: "1233"
        name:
          type: string
          example: Shrey Shah
        username:
          type: string
          example: shreys7
    ApiGitGetRepository:
      type: object
      properties:
        default_branch:
          type: string
          example: master
        full_name:
          type: string
          example: postmanlabs/codegen-curl
        id:
          type: string
          example: codegen-curl
        name:
          type: string
          example: codegen-curl
        owner:
          type: object
          properties:
            id:
              type: string
              example: postmanlabs
            name:
              type: string
              example: postmanlabs
        url:
          type: string
          example: "https://github.com/postmanlabs/codegen-curl"
    ApiGitGetRepositoryTree:
      type: object
      properties:
        name:
          type: string
          example: schema.json
        path:
          type: string
          example: /postman/schema.json
        type:
          type: string
          enum:
            - file
            - directory
    IntegrationInstanceWithInputs:
      allOf:
        - $ref: '#/components/schemas/IntegrationInstanceBasic'
        - type: object
          properties:
            inputs:
              $ref: '#/components/schemas/IntegrationInstanceInput'
    IntegrationInstanceBasic:
      type: object
      required:
        - id
        - name
        - team
        - class
        - status
        - inputs
        - createdAt
        - updatedAt
        - createdBy
        - lastUpdatedBy
      properties:
        id:
          type: string
        name:
          type: string
        team:
          type: string
        class:
          type: string
        status:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
    IntegrationInstanceInput:
      type: array
      items:
        type: object
        required:
          - id
          - key
          - type
          - value
        properties:
          inputId:
            type: string
          key:
            type: string
          type:
            type: string
          value:
            oneOf:
              - type: number
              - type: string
              - type: boolean
              - type: object
    ConnectedAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        service:
          type: string
          example: slack
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        team:
          type: string
        data:
          type: object
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    authToken:
      type: apiKey
      in: header
      name: x-access-token

  responses:
    ErrorBasic:
      description: Basic error response
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                required:
                  - name
                  - message
                  - details
                properties:
                  name:
                    type: string
                  message:
                    type: string
                  details:
                    type: object
    IntegrationsMeta:
      description: IntegrationsMeta
      content:
        application/json:
          schema:
            $ref: "#/components/responses/IntegrationsMeta"
    InstanceNotFoundError:
      description: InstanceNotFoundError
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InstanceNotFoundError"
    AuthenticationError:
      description: InstanceNotFoundError
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthenticationError"
    ForbiddenError:
      description: Example response incase of forbidden errors
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  name:
                    type: string
                    example: forbiddenError
                  message:
                    type: string
                    example: You are not permitted to perform the action.
    ParamMissingError:
      description: Example response incase of missing params
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: ParamMissingError
              message:
                type: string
                example: Parameter is missing in the request.
              details:
                type: object
                properties:
                  param:
                    type: object
                    example: ['scope', 'service']
    InvalidParamsError:
      description: Example response incase of invalid params error
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: InvalidParamsError
              message:
                type: string
                example: The specified parameter is in an invalid format.
              details:
                type: object
                properties:
                  param:
                    type: string
                    example: scope

tags:
  - name: Integrations Internal
    description: >-
      These are the set of APIs served by internal service. This includes integration service actions,
      CRUD actions, manifest actions, ingestor/consumer endpoints, and a few OAuth endpoints.
  - name: Integratations Public
    description: >-
      These are the set of APIs served by public service. This includes run stats update endpoints,
      schema sync webhook handlers, proxy API and a few OAuth endpoints.
  - name: Integration Information
    description: This set of API's gives the data of the integrations.
  - name: Integration Run Information
    description: This set of API's give the details on the integration run.
  - name: Support APIs
    description: >-
      Houses the API's that enables the support dashboard to be able to fetch
      the integrations and integrations run information, and to create new integration classes/categories/services, etc.
  - name: Manifest APIs
    description: >-
      These are the set of APIs that deals with CRUD operations on integration clases, integration inputs,
      services, categories and client categories
  - name: Consumer
    description: >-
      Consumer is an independent worker environment on AWS(not a part of
      integration platform). It consumes messages/events from integrations queue, checks the
      existence of integrations on the events and performs the relevant actions
      on those events. Currently, two types of actions are supported on events:
      a) trigger integrations
      b) update an integration role


      https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/2663973424/[IS-590]+Event+Consumption+Service(alias+consumer)+in+the+Integration+Eventing+System?search_id=e55e05d4-111e-4f1c-99f6-e3ea18298b8d
  - name: Ingestor
    description: >-
      Ingestor is the starting element in eventing system which is an
      independent webserver(not a part of integration platform). One can use
      this ingestor API to push the events to the eventing pipeline and get them
      executed by the integration platform
  - name: Legacy APIs
    description: >-
      The endpoints that provide integration meta information, like list of
      available services, descriptions of services, descriptions of integration
      types, etc. These are currently used by <v8 apps.
  - name: OAuth internal
    description: >-
      The OAuth flow is combination of endpoints from internal and public
      service. These are the set of endpoints exposed by the internal service

      A detailed document explaining the complete integrations OAuth flow can be
      found
      [here](https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/2686059665/Integration+OAuth+flows).
  - name: Integrations usage
    description: >-
      These are APIs that allow integrations to listen to events happening on
      other services. These APIs are used to maintain the lifecycle of
      integration entities, and not as integration triggers.
  - name: API Git Interface
    description: >-
      These are the APIs that allow functioning of API Git Interface.
  - name: Integration Run State Change APIs
    description: >-
      These APIs are used to mark the state change of an integration run.


      Find possible states of an Integration Run and allowed transitions here:

      https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/2049311080/Integration+Run+State+Machine


      #### Integration Run Context

      The Integration Run Context is generated at runtime when the integration
      is triggered, and sent to the triggered collection as under the
      `integrationRun` property.

      This contains the Integration Run ID in the `id` field as well as the
      Temporary Access Token for the Integration Run in the `accessToken` field.
  - name: Integrations
    description: >-
      Integration authors have the provision to add custom helper functions to
      aid with the integration flow (typically for setting up a new integration
      or editing an existing integration). These APIs call those helper
      functions and provide a response.
  - name: OAuth public
    description: >-
      The OAuth flow is combination of endpoints from internal and public
      service. These are the set of endpoints exposed by the public service

      A detailed document explaining the complete integrations OAuth flow can be
      found [here](https://postmanlabs.atlassian.net/wiki/spaces/INT/pages/2686059665/Integration+OAuth+flows)
  - name: Integration Instances
    description: The integration instance endpoints support CRUD operations on Integration Instances.
security:
  - basicAuth: []
  - authToken: []
