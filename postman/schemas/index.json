{
  "openapi": "3.0.1",
  "info": {
    "title": "TaxFactDataService",
    "description": "Integrations.TaxFactDataService v1",
    "contact": {
      "name": "Tax Apps Team Federated Integration and Classify/Adjust",
      "url": "https://eyglobaltaxplatform.visualstudio.com/Global%20Tax%20Platform/_wiki/wikis/Global-Tax-Platform.wiki/127/TaxFact-Data-Service-(Ingestion-1.0)",
      "email": "4edaee5d.EYGS.onmicrosoft.com@amer.teams.ms"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://apigee.gtp.sbp.eyclienthub.com/gtp/tax-integrations-backend/"
    }
  ],
  "paths": {
    "/api/v1/AdminCCoA/GetCCoACountries": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get CCoA Countries",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetMappedCCoA/{countryCd}": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Mapped Client CoA",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetMappedCCoAGridDataAsync/{countryCd}": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Mapped Client CoA grid data",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "associationType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetConfigData/{countryCd}": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Config Data",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/UpdateCCoAStatus/{statusCd}": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Update CCoA Status",
        "parameters": [
          {
            "name": "statusCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": ""
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CCoA"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CCoA"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CCoA"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CCoA"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetMappedCCoAEntities/{countryCd}": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get CCoA (Mapped) Entities",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetCCoAEntities/{countryCd}": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Mapped and Unmapped Entities",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetClassifiedClientAccount": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Classified Client Account: Adds a new client account to the STAC model and fetches the SCoA suggestions from the ML API",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetReclassifiedClientAccount/{countryCd}": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get Reclassified Client Account: Modifies an exisiting client account mapping by fetching new SCoA suggestions from the ML API",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CCoA"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CCoA"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CCoA"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CCoA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminCCoA/GetSCoAByLevel/{countryCd}": {
      "get": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Get SCoA By Level",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminCCoA/SaveClassification": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Save Classification",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifiedTrialBalance"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifiedTrialBalance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifiedTrialBalance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifiedTrialBalance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminCCoA/CloneCCoA/{countryCd}": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Clone CCoA: Clone CCoA from an existing CCoA Entity to new/existing Entities with/without mappings",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CloneCCoADTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneCCoADTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneCCoADTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloneCCoADTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminCCoA/DeleteClientAccount": {
      "post": {
        "tags": [
          "AdminCCoA"
        ],
        "summary": "Delete Client Account: Deletes the client account based on the account GUIDs passed",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientAccountDTO"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoA/GetSCoAByType": {
      "get": {
        "tags": [
          "AdminSCoA"
        ],
        "summary": "Get SCoA By Type",
        "parameters": [
          {
            "name": "countryCd",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminSCoA/GetSCoAByLevel/{countryCd}/{openDate}": {
      "get": {
        "tags": [
          "AdminSCoA"
        ],
        "summary": "Get SCoA By Level",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "openDate",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "associationType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/AdminSCoA/AddLocalSCoA/{countryCd}": {
      "post": {
        "tags": [
          "AdminSCoA"
        ],
        "summary": "Add Local SCoA to ODS STAC Model",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoA/ModifyLocalSCoA/{countryCd}": {
      "post": {
        "tags": [
          "AdminSCoA"
        ],
        "summary": "Modify Local SCoA in ODS STAC Model",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SCoA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoA/DeleteLocalSCoA/{countryCd}": {
      "post": {
        "tags": [
          "AdminSCoA"
        ],
        "summary": "Delete Local SCoA from ODS STAC Model",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/GetSCoTACountriesAndEntityTypesAsync": {
      "get": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Get Standard Chart of Tax Adjustments' Countries and Entity Types",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/GetSCoTAAsync/{countryCd}": {
      "post": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Get Standard Chart of Tax Adjustments",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/GetSCoTAPicklistAsync/{countryCd}": {
      "get": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Get SCoTA Picklist: Retrieve PickList Data to populate dropdowns",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/UpdateSCoTAStatus/{statusCd}": {
      "post": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Update SCoTA Status",
        "parameters": [
          {
            "name": "statusCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": ""
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SCoTA"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SCoTA"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SCoTA"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SCoTA"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/GetAdjustmentDetails/{countryCd}/{adjustmentId}": {
      "get": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Get Adjustment Details",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "adjustmentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdminSCoTA/UpsertAdjustmentAsync/{countryCd}": {
      "post": {
        "tags": [
          "AdminSCoTA"
        ],
        "summary": "Upsert Adjustment: Create and Update Adjustment",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDetails"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustmentDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Classification/GetClassifiedClientTBWithConfigData/{fileUploadId}": {
      "post": {
        "tags": [
          "Classification"
        ],
        "summary": "Get Classified Client TB With Config Data",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Classification/GetClassifiedClientTBWithConfigDataAsync/{fileUploadId}": {
      "post": {
        "tags": [
          "Classification"
        ],
        "summary": "Get Classified Client TB From Azure Search With Config Data",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParametersClassification"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParametersClassification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParametersClassification"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchParametersClassification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Classification/GetSCoAByLevel/{countryCd}/{openDate}": {
      "get": {
        "tags": [
          "Classification"
        ],
        "summary": "Get SCoA By Level",
        "parameters": [
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "openDate",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Classification/ConfirmClassification/{fileUploadId}/{countryCd}": {
      "post": {
        "tags": [
          "Classification"
        ],
        "summary": "Confirm Classification",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "countryCd",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClassificationMapping"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClassificationMapping"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClassificationMapping"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClassificationMapping"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Classification/SubmitClassification/{fileUploadId}/{fileType}": {
      "get": {
        "tags": [
          "Classification"
        ],
        "summary": "Submit Classification",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DataPackContent/GetDatapackContentAsync": {
      "get": {
        "tags": [
          "DataPackContent"
        ],
        "summary": "Get Data Pack Grid content data",
        "operationId": "GetDatapackContentAsync",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "description": "Parameter in charge of get countryId parameter information",
            "schema": {
              "type": "integer",
              "description": "Parameter in charge of get countryId parameter information",
              "format": "int32"
            }
          },
          {
            "name": "serviceName",
            "in": "query",
            "description": "Parameter in charge of get serviceName parameter information",
            "schema": {
              "type": "string",
              "description": "Parameter in charge of get serviceName parameter information",
              "nullable": true
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "Parameter in charge of get entityId parameter information",
            "schema": {
              "type": "string",
              "description": "Parameter in charge of get entityId parameter information",
              "nullable": true
            }
          },
          {
            "name": "taxYearId",
            "in": "query",
            "description": "Parameter in charge of get taxYearId parameter information",
            "schema": {
              "type": "string",
              "description": "Parameter in charge of get taxYearId parameter information",
              "nullable": true
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "Parameter in charge of get templateId parameter information",
            "schema": {
              "type": "string",
              "description": "Parameter in charge of get templateId parameter information",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DataPackGrid/GetDatapackGrid": {
      "post": {
        "tags": [
          "DataPackGrid"
        ],
        "summary": "Get Data Pack Grid data",
        "operationId": "GetDatapackGrid",
        "parameters": [
          {
            "name": "gridTypeId",
            "in": "query",
            "description": "Grid types (1-Import // 2-Import VAT // 3-Submission).",
            "schema": {
              "type": "integer",
              "description": "Grid types (1-Import // 2-Import VAT // 3-Submission).",
              "format": "int32"
            }
          },
          {
            "name": "fetchExternalImports",
            "in": "query",
            "description": "bool (true to fecth current status from TR).",
            "schema": {
              "type": "boolean",
              "description": "bool (true to fecth current status from TR).",
              "default": false
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Grid parameters used for ordering and sorting the results.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/DataPackGrid/GetDatapackGridFilterByColumn": {
      "post": {
        "tags": [
          "DataPackGrid"
        ],
        "summary": "GetDapackGridFilterByColumn",
        "operationId": "GetDatapackGridFilterByColumn",
        "parameters": [
          {
            "name": "gridTypeId",
            "in": "query",
            "description": "Grid types (1-Import // 2-Import VAT // 3-Submission).",
            "schema": {
              "type": "integer",
              "description": "Grid types (1-Import // 2-Import VAT // 3-Submission).",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Column parameters used for ordering and sorting the results.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/ETL/ETLPopulateLookups": {
      "post": {
        "tags": [
          "ETL"
        ],
        "summary": "Initialize Lookup tables",
        "parameters": [
          {
            "name": "calendar",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "countryGeography",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "jurisdiction",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "taxEntity",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "taxFunctions",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "taxPeriods",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "taxYear",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "uom",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "taxEntityTin",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "engagement",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "gtpComponent",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ETL/SaveCoreClientData": {
      "post": {
        "tags": [
          "ETL"
        ],
        "summary": "Initiate Core Client table",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ETL/PublishODSProvisionData": {
      "post": {
        "tags": [
          "ETL"
        ],
        "summary": "Publish a data file in the blog and a message in ASB for CT-VAT seed data",
        "description": " Sample request:\r\n\r\n     POST /entityList\r\n\t\t[\r\n\t\t\t\"Country\", \"Currency\", \"Engagement\", \"EngagementEntityAssoc\",  \r\n\t\t\t\"EyService\",  \"EyServiceCountry\", \"Jurisdiction\", \"Geography\", \r\n\t\t\t\"TaxEntity\", \"TaxFunctions\", \"TaxPeriods\", \"TaxYears\", \r\n\t\t\t\"VATServiceScope\", \"VATThresholds\", \"Calendar\", \"Client\", \"FrequencyType\", \"TaxEntityTINTypeAssoc\"\r\n\t\t]",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExportExcel/ExportToExcelAsync": {
      "post": {
        "tags": [
          "ExportExcel"
        ],
        "summary": "Excel download",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcelExportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExcelExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExcelExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExcelExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ExportExcel/GetViewClassificationAsync/{fileUploadId}": {
      "get": {
        "tags": [
          "ExportExcel"
        ],
        "summary": "Get Client accounts From Azure Search",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/FileProcessingLog/WriteEventToFileProcessLog": {
      "post": {
        "tags": [
          "FileProcessingLog"
        ],
        "summary": "Writes Record to BW Job Process Log",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The informationEY.GTP.Ingestion.Engine.Stages.Models.BWEventData",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FileProcessEventLog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileProcessEventLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FileProcessEventLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FileProcessEventLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/ImportAuditLog": {
      "get": {
        "tags": [
          "ImportAuditLog"
        ],
        "summary": "Get the audit log for an import with the ImportId value",
        "parameters": [
          {
            "name": "FileUploadId",
            "in": "query",
            "description": "Used to filter on what data we retrieve.",
            "schema": {
              "type": "integer",
              "description": "Used to filter on what data we retrieve.",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "Used to filter on what data we retrieve. Values: \"common\" for import table, \"CTVAT\" for VAT Table",
            "schema": {
              "type": "string",
              "description": "Used to filter on what data we retrieve. Values: \"common\" for import table, \"CTVAT\" for VAT Table",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ImportAuditLog"
        ],
        "summary": "Adds a new register to the audit log table",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The import audit log that is going to be added to the database. AuditId not needed",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportAuditLog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportAuditLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportAuditLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportAuditLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Ingest/GetIngestionHistory": {
      "post": {
        "tags": [
          "Ingest"
        ],
        "summary": "Get Ingestion History",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Ingest/GetFilterByColumnIngest": {
      "post": {
        "tags": [
          "Ingest"
        ],
        "summary": "Get Filter By Column Ingest",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Ingest/GetIngestionHistoryDetailFlyoutAsync/{fileUploadId}/{fileType}": {
      "get": {
        "tags": [
          "Ingest"
        ],
        "summary": "Get Ingestion History Detail Flyout",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Ingest/GetCtVatIngestion": {
      "post": {
        "tags": [
          "Ingest"
        ],
        "summary": "GetCtVatIngestion",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Ingest/GetCtVatIngestionFilterByColumn": {
      "post": {
        "tags": [
          "Ingest"
        ],
        "summary": "GetCtVatIngestionFilterByColumn",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/ReadFileColumns": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "summary": "Read File Columns",
        "parameters": [
          {
            "name": "templateType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/SaveMappingTemplate": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "summary": "Save Mapping Template",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MappingDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MappingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MappingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MappingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/GetMappingTemplates": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "summary": "Get Mapping Templates",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GridParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/GetFilterByColumnMapping": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "summary": "Get Filter By ColumnMapping",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FilterByColumnParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/DeleteTemplate/{templateId}": {
      "delete": {
        "tags": [
          "Mapping"
        ],
        "summary": "Delete Template",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/GetAllTemplates": {
      "get": {
        "tags": [
          "Mapping"
        ],
        "summary": "Get All Templates",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTemplate"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTemplate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Mapping/GetMapTypesForCustomMapping": {
      "get": {
        "tags": [
          "Mapping"
        ],
        "summary": "Get Map Types For Custom\tMapping",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingBaseTable"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingBaseTable"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingBaseTable"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Output/GetJobProcessByBWJobIdAsync": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns records from the Job Process log table",
        "parameters": [
          {
            "name": "bwJobId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "description": "Number of records to return",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "integer",
              "description": "Number of records to skip",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetJobProcessByFileUploadIdAsync": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns records from the JobProcess Table",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "description": "Number of records to return",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "integer",
              "description": "Number of records to skip",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetCommonFileUploadAsync/GetCommonFileUpload": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns records from the File Upload Table",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "description": "Number of records to return",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "integer",
              "description": "Number of records to skip",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetLoggingErrorLogAsync": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns records from the Logging Error Table",
        "parameters": [
          {
            "name": "recordsToReturn",
            "in": "query",
            "description": "Defaults to 100",
            "schema": {
              "type": "integer",
              "description": "Defaults to 100",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "integer",
              "description": "Number of records to skip",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetFeatureFlagSettings": {
      "post": {
        "tags": [
          "Output"
        ],
        "summary": "Returns the current state of the Feature Flags we use. Optionally, the caller can include a list of other flags to check.",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A List of strings representing additional flags to check.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A List of strings representing additional flags to check.",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A List of strings representing additional flags to check.",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A List of strings representing additional flags to check.",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A List of strings representing additional flags to check.",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetFileProcessEventLogAsync/GetFileProcessEventLog": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns records from the File Process Event Log Table",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Output/GetInfoRequestDetailsAsync/GetInfoRequestDetails": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns API response for IR",
        "parameters": [
          {
            "name": "apiReference",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Output/GetBoardWalkResponseAsync/GetBoardWalkResponse": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns API response for BW",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Output/GetIngestionMessageCountAsync/GetIngestionMessageCount": {
      "get": {
        "tags": [
          "Output"
        ],
        "summary": "Returns Message Count for Topic / Queue",
        "parameters": [
          {
            "name": "queueName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Output/BackFillMissingInformation": {
      "post": {
        "tags": [
          "Output"
        ],
        "summary": "BackFillMissingInformation",
        "parameters": [
          {
            "name": "started",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 500
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Query/SaveIncomingAsync": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Processes an incoming file and updates the database.\r\nNote that the TaxFileType parameter in the incoming parameters is required.",
        "parameters": [
          {
            "name": "blobKey",
            "in": "query",
            "description": "The key where the incoming file can be found in Blob storage.",
            "schema": {
              "type": "string",
              "description": "The key where the incoming file can be found in Blob storage.",
              "nullable": true
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Query/GetDataAsync": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "Returns data for the given parameters.\r\nNote that OutputType is a required field in the incoming parameters.",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<cref>QueryRequest</cref> object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DataQueryParms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataQueryParms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataQueryParms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataQueryParms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Query/GetSubmissionDataAsync": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "Returns data with minimal fields for the given parameters.\r\nNote that OutputType is a required field in the incoming parameters.",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<cref>QueryRequest</cref> object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDataQueryParms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDataQueryParms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDataQueryParms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionDataQueryParms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Query/ApproveStaging/{fileUploadId}/{fileType}/{isAccepted}": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Processes Transform from Staging to ODS tables in database.\r\nNote that the TaxFileType parameter in the incoming parameters is required.",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "The key where the incoming file can be found in Blob storage.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The key where the incoming file can be found in Blob storage.",
              "format": "int64"
            }
          },
          {
            "name": "fileType",
            "in": "path",
            "description": "The key where the incoming file can be found in Blob storage.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The key where the incoming file can be found in Blob storage.",
              "nullable": true
            }
          },
          {
            "name": "isAccepted",
            "in": "path",
            "description": "Boolean flag which indicate whether it's accepted (true) or reject (false).",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "Boolean flag which indicate whether it's accepted (true) or reject (false)."
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Query/ApproveStagingWithTagsAsync": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "Review staging report - Whether approve or reject.",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveStagingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveStagingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveStagingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveStagingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Query/GetValidationDetails": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Gets all validation log messages corresponding to the fileUploadId",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "query",
            "description": "fileUploadId",
            "schema": {
              "type": "integer",
              "description": "fileUploadId",
              "format": "int64"
            }
          },
          {
            "name": "includeFileValidationErrors",
            "in": "query",
            "description": "include file validation errors",
            "schema": {
              "type": "boolean",
              "description": "include file validation errors",
              "default": true
            }
          },
          {
            "name": "includeDataValaditionErrors",
            "in": "query",
            "description": "include data validation errors",
            "schema": {
              "type": "boolean",
              "description": "include data validation errors",
              "default": false
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Query/SaveValidationLog": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "Save validation log messages to ODS",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "validation log parameter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationLogParam"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationLogParam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationLogParam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationLogParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Query/GetTrialBalanceTagDataAsync/{fileUploadId}": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "The GetTrailBalanceTagDataAsync",
        "parameters": [
          {
            "name": "fileUploadId",
            "in": "path",
            "description": "The fileUploadIdSystem.Int64",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The fileUploadIdSystem.Int64",
              "format": "int64"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TBTagData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TBTagData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TBTagData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Query/UpdateStagingBalanceAsync": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "Updates the Staging Report data",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Staging report data to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStageReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStageReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStageReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStageReportModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceBus/ProcessDeadLetterMessagesAsync": {
      "post": {
        "tags": [
          "ServiceBus"
        ],
        "summary": "Process Dead Letter Messages",
        "parameters": [
          {
            "name": "messageCount",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceBus/SendASBMessageAsync": {
      "post": {
        "tags": [
          "ServiceBus"
        ],
        "summary": "Send ASB Message",
        "parameters": [
          {
            "name": "clientid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ADFIngestionResource"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ADFIngestionResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ADFIngestionResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ADFIngestionResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Get the health check of the system. If the system is OK, status 200 will be returned, else status 503.",
        "operationId": "Health",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              }
            }
          },
          "503": {
            "description": "Service Unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Version Information",
        "description": "Gets string of version information in JSON",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "SearchParameters": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "Search",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "description": "Skip",
            "format": "int32"
          },
          "columnValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "ColumnValues",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the Azure Search Config"
      },
      "SCoA": {
        "required": [
          "closeDate",
          "level",
          "openDate",
          "sCoADesc",
          "sCoANumber"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Source",
            "nullable": true
          },
          "sCoAId": {
            "type": "integer",
            "description": "SCoAId",
            "format": "int64",
            "nullable": true
          },
          "sCoADesc": {
            "type": "string",
            "description": "SCoADesc"
          },
          "sCoANumber": {
            "type": "string",
            "description": "SCoANumber"
          },
          "level": {
            "type": "string",
            "description": "Level"
          },
          "accountType": {
            "type": "string",
            "description": "AccountType",
            "nullable": true
          },
          "taxYear": {
            "type": "string",
            "description": "TaxYear",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "description": "OpenDate",
            "format": "date-time"
          },
          "closeDate": {
            "type": "string",
            "description": "CloseDate",
            "format": "date-time"
          },
          "stacguid": {
            "type": "string",
            "description": "STACGUID",
            "nullable": true
          },
          "childAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SCoA"
            },
            "description": "ChildAccount",
            "nullable": true
          },
          "dimensionalTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "DimensionalTags",
            "nullable": true
          },
          "associationType": {
            "type": "string",
            "description": "AssociationType",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the SCoA"
      },
      "CCoA": {
        "required": [
          "clientAccountDesc",
          "clientAccountGUID",
          "clientAccountNumber",
          "countryAccountDesc",
          "countryAccountNumber",
          "entityId",
          "entityNm",
          "mappedSCoA",
          "stacguid",
          "status"
        ],
        "type": "object",
        "properties": {
          "extEntityId": {
            "type": "string",
            "description": "ExtEntityId",
            "nullable": true
          },
          "entityNm": {
            "type": "string",
            "description": "EntityNm"
          },
          "entityId": {
            "pattern": "^-?\\d{1,19}$",
            "type": "string",
            "description": "EntityId"
          },
          "clientAccountNumber": {
            "type": "string",
            "description": "ClientAccountNumber"
          },
          "clientAccountDesc": {
            "type": "string",
            "description": "ClientAccountDesc"
          },
          "clientAccountGUID": {
            "type": "string",
            "description": "ClientAccountGUID"
          },
          "countryAccountNumber": {
            "type": "string",
            "description": "CountryAccountNumber"
          },
          "countryAccountDesc": {
            "type": "string",
            "description": "CountryAccountDesc"
          },
          "stacguid": {
            "type": "string",
            "description": "STACGUID"
          },
          "mappedSCoA": {
            "$ref": "#/components/schemas/SCoA"
          },
          "jurisdiction": {
            "type": "string",
            "description": "Jurisdiction",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "countryCd": {
            "type": "string",
            "description": "CountryCd",
            "nullable": true
          },
          "maplnUpdatedDtm": {
            "type": "string",
            "description": "MaplnUpdatedDtm",
            "format": "date-time"
          },
          "accountUpdatedDtm": {
            "type": "string",
            "description": "AccountUpdatedDtm",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "integer",
            "description": "IsDeleted",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Defines the CCoA"
      },
      "ClientAccountDTO": {
        "required": [
          "countryCd",
          "description",
          "entityId",
          "number",
          "statusCd"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "description": "ClientId",
            "format": "int64"
          },
          "entityId": {
            "pattern": "^-?\\d{1,19}$",
            "type": "string",
            "description": "EntityId"
          },
          "countryCd": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "description": "CountryCd"
          },
          "statusCd": {
            "pattern": "^[A|I]{1}$",
            "type": "string",
            "description": "StatusCd"
          },
          "number": {
            "type": "string",
            "description": "Number"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "accountGUID": {
            "pattern": "^[{]?[0-9a-fA-F]{8}[-]?([0-9a-fA-F]{4}[-]?){3}[0-9a-fA-F]{12}[}]?$",
            "type": "string",
            "description": "AccountGUID",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines a New Client Account to be added to the STAC model"
      },
      "SuggestSCoA": {
        "required": [
          "closeDate",
          "level",
          "openDate",
          "sCoADesc",
          "sCoANumber"
        ],
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "description": "Rank",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Source",
            "nullable": true
          },
          "sCoAId": {
            "type": "integer",
            "description": "SCoAId",
            "format": "int64",
            "nullable": true
          },
          "sCoADesc": {
            "type": "string",
            "description": "SCoADesc"
          },
          "sCoANumber": {
            "type": "string",
            "description": "SCoANumber"
          },
          "level": {
            "type": "string",
            "description": "Level"
          },
          "accountType": {
            "type": "string",
            "description": "AccountType",
            "nullable": true
          },
          "taxYear": {
            "type": "string",
            "description": "TaxYear",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "description": "OpenDate",
            "format": "date-time"
          },
          "closeDate": {
            "type": "string",
            "description": "CloseDate",
            "format": "date-time"
          },
          "stacguid": {
            "type": "string",
            "description": "STACGUID",
            "nullable": true
          },
          "childAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SCoA"
            },
            "description": "ChildAccount",
            "nullable": true
          },
          "dimensionalTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "DimensionalTags",
            "nullable": true
          },
          "associationType": {
            "type": "string",
            "description": "AssociationType",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the SuggestSCoA"
      },
      "ClientAccount": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "AccountNumber",
            "nullable": true
          },
          "accountDesc": {
            "type": "string",
            "description": "AccountDesc",
            "nullable": true
          },
          "accountGUID": {
            "type": "string",
            "description": "AccountGUID",
            "nullable": true
          },
          "suggestedSCoA": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestSCoA"
            },
            "description": "SuggestedSCoA",
            "nullable": true
          },
          "confirmedSCoA": {
            "$ref": "#/components/schemas/SCoA"
          },
          "confirmedAccountNumber": {
            "type": "string",
            "description": "ConfirmedAccountNumber",
            "nullable": true
          },
          "confirmedAccountDesc": {
            "type": "string",
            "description": "ConfirmedAccountDesc",
            "nullable": true
          },
          "confirmedAccountGUID": {
            "type": "string",
            "description": "ConfirmedAccountGUID",
            "nullable": true
          },
          "isConfirmed": {
            "type": "integer",
            "description": "IsConfirmed",
            "format": "int32"
          },
          "fileUploadId": {
            "type": "integer",
            "description": "FileUploadId",
            "format": "int64"
          },
          "isDeleted": {
            "type": "integer",
            "description": "IsDeleted",
            "format": "int32"
          },
          "balanceLnId": {
            "type": "string",
            "description": "BalanceLnId",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "description": "EntityId",
            "nullable": true
          },
          "entityNm": {
            "type": "string",
            "description": "EntityNm",
            "nullable": true
          },
          "clientAccountType": {
            "type": "string",
            "description": "Client Account Type",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ClientAccount"
      },
      "ClassifiedTrialBalance": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "description": "ClientId",
            "format": "int64"
          },
          "clientName": {
            "type": "string",
            "description": "ClientName",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "description": "EntityId",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "description": "EntityName",
            "nullable": true
          },
          "taxYear": {
            "type": "string",
            "description": "TaxYear",
            "nullable": true
          },
          "countryCd": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "description": "FileType",
            "nullable": true
          },
          "gtpInd": {
            "type": "boolean",
            "description": "GTPIndicator"
          },
          "rCount": {
            "type": "string",
            "description": "RCount",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "description": "OpenDate",
            "nullable": true
          },
          "clientAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientAccount"
            },
            "description": "ClientAccounts",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ClassifiedTrialBalance"
      },
      "CCoAEntity": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "integer",
            "description": "EntityId",
            "format": "int64"
          },
          "entityNm": {
            "type": "string",
            "description": "EntityNm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the CCoAEntity"
      },
      "CloneCCoADTO": {
        "type": "object",
        "properties": {
          "sourceEntity": {
            "$ref": "#/components/schemas/CCoAEntity"
          },
          "targetEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CCoAEntity"
            },
            "description": "Target Entities",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines a DTO for Cloning CCoA"
      },
      "BadRequestResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NotFoundResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SCoTA": {
        "type": "object",
        "properties": {
          "adjustmentId": {
            "type": "integer",
            "description": "AdjustmentId",
            "format": "int64"
          },
          "adjustmentNumber": {
            "type": "string",
            "description": "AdjustmentNumber",
            "nullable": true
          },
          "adjustmentDescription": {
            "type": "string",
            "description": "AdjustmentDescription",
            "nullable": true
          },
          "entityTypeId": {
            "type": "integer",
            "description": "EntityTypeId",
            "format": "int64"
          },
          "entityTypeNm": {
            "type": "string",
            "description": "EntityTypeNm",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "description": "EntityId",
            "format": "int64"
          },
          "entityNm": {
            "type": "string",
            "description": "EntityNm",
            "nullable": true
          },
          "extEntityId": {
            "type": "string",
            "description": "ExtEntityId",
            "nullable": true
          },
          "industry": {
            "type": "string",
            "description": "Industry",
            "nullable": true
          },
          "jurisdiction": {
            "type": "string",
            "description": "Jurisdiction",
            "nullable": true
          },
          "adjustmentMethod": {
            "type": "string",
            "description": "AdjustmentMethod",
            "nullable": true
          },
          "adjustmentWorkpaper": {
            "type": "string",
            "description": "AdjustmentWorkpaper",
            "nullable": true
          },
          "adjustmentType": {
            "type": "string",
            "description": "AdjustmentType",
            "nullable": true
          },
          "adjustmentStatus": {
            "type": "string",
            "description": "AdjustmentStatus",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the SCoTA"
      },
      "Adjustment": {
        "type": "object",
        "properties": {
          "adjustmentId": {
            "type": "integer",
            "description": "AdjustmentId",
            "format": "int64",
            "nullable": true
          },
          "adjustmentNumber": {
            "type": "string",
            "description": "AdjustmentNumber",
            "nullable": true
          },
          "adjustmentDescription": {
            "type": "string",
            "description": "AdjustmentDescription",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Adjustment"
      },
      "EntityType": {
        "type": "object",
        "properties": {
          "entityTypeId": {
            "type": "integer",
            "description": "EntityTypeId",
            "format": "int64"
          },
          "entityTypeNm": {
            "type": "string",
            "description": "EntityTypeNm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines EntityType"
      },
      "EngagementEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Entity Id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Entity Name",
            "nullable": true
          },
          "externalEntityId": {
            "type": "string",
            "description": "External Entity Id",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Entity of an Engagement"
      },
      "AdjustmentStatus": {
        "type": "object",
        "properties": {
          "statusId": {
            "type": "integer",
            "description": "StatusId",
            "format": "int64"
          },
          "statusCd": {
            "type": "string",
            "description": "StatusCd"
          },
          "statusNm": {
            "type": "string",
            "description": "StatusNm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Status"
      },
      "Account": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Source",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "AccountId",
            "format": "int64"
          },
          "number": {
            "type": "string",
            "description": "AccountNumber",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "AccountDescription",
            "nullable": true
          },
          "accountGUID": {
            "type": "string",
            "description": "AccountGUID",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Defines Account"
      },
      "AdjustmentClass": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Adjustment Class"
      },
      "AccountingStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Accounting status"
      },
      "CalculationMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Calculation Method"
      },
      "AdjustmentCalculation": {
        "type": "object",
        "properties": {
          "calculationFactor": {
            "type": "number",
            "description": "CalculationFactor",
            "format": "double"
          },
          "minThreshold": {
            "type": "number",
            "description": "MinThreshold",
            "format": "double",
            "nullable": true
          },
          "maxThreshold": {
            "type": "number",
            "description": "MaxThreshold",
            "format": "double",
            "nullable": true
          },
          "calculationMethod": {
            "$ref": "#/components/schemas/CalculationMethod"
          }
        },
        "additionalProperties": false,
        "description": "Defines AdjustmentCalculation"
      },
      "AdjustmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Adjustment Type"
      },
      "ProcessStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Process status"
      },
      "BalanceBasis": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Balance Basis"
      },
      "AccountingLevel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Accounting Class"
      },
      "GAAPType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines GAAP Type"
      },
      "TaxPeriods": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Tax Period"
      },
      "Jurisdictions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "nm": {
            "type": "string",
            "description": "Nm",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Jurisdiction"
      },
      "AdjustmentDetails": {
        "type": "object",
        "properties": {
          "adjustment": {
            "$ref": "#/components/schemas/Adjustment"
          },
          "adjustmentEntityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "adjustmentEntity": {
            "$ref": "#/components/schemas/EngagementEntity"
          },
          "adjustmentStatus": {
            "$ref": "#/components/schemas/AdjustmentStatus"
          },
          "workpaper": {
            "type": "string",
            "description": "AdjustmentWorkpaper",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence",
            "format": "int32"
          },
          "startEffDt": {
            "type": "string",
            "description": "StartEffDt",
            "format": "date-time"
          },
          "localSCoAAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": "PLAccounts",
            "nullable": true
          },
          "adjustmentClass": {
            "$ref": "#/components/schemas/AdjustmentClass"
          },
          "accountingStatus": {
            "$ref": "#/components/schemas/AccountingStatus"
          },
          "adjustmentCalculation": {
            "$ref": "#/components/schemas/AdjustmentCalculation"
          },
          "adjustmentType": {
            "$ref": "#/components/schemas/AdjustmentType"
          },
          "processStatus": {
            "$ref": "#/components/schemas/ProcessStatus"
          },
          "balanceBasis": {
            "$ref": "#/components/schemas/BalanceBasis"
          },
          "accountingLevel": {
            "$ref": "#/components/schemas/AccountingLevel"
          },
          "srcGAAPType": {
            "$ref": "#/components/schemas/GAAPType"
          },
          "tgtGAAPType": {
            "$ref": "#/components/schemas/GAAPType"
          },
          "taxPeriod": {
            "$ref": "#/components/schemas/TaxPeriods"
          },
          "jurisdiction": {
            "$ref": "#/components/schemas/Jurisdictions"
          }
        },
        "additionalProperties": false,
        "description": "Defines the AdjustmentDetails"
      },
      "SearchParametersClassification": {
        "type": "object",
        "properties": {
          "classifiedTrialBalanceMetaData": {
            "$ref": "#/components/schemas/ClassifiedTrialBalance"
          },
          "accountGUIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search",
            "nullable": true
          },
          "search": {
            "type": "string",
            "description": "Search",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "description": "Skip",
            "format": "int32"
          },
          "columnValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "ColumnValues",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the Azure Search Config Classification Extension"
      },
      "ClassificationMapping": {
        "type": "object",
        "properties": {
          "balanceLnId": {
            "type": "string",
            "description": "BalanceLnId",
            "nullable": true
          },
          "mapFromSTACGUID": {
            "type": "string",
            "description": "MapFromSTACGUID",
            "nullable": true
          },
          "mapToSTACGUID": {
            "type": "string",
            "description": "MapToSTACGUID",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ClassificationMapping"
      },
      "MethodAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodImplAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "TypeAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          },
          "typeId": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QueryFilterLogic": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "QueryFilterOperator": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "QueryFilter": {
        "type": "object",
        "properties": {
          "childFilterGrouping": {
            "$ref": "#/components/schemas/QueryFilterGroup"
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "$ref": "#/components/schemas/QueryFilterOperator"
          }
        },
        "additionalProperties": false
      },
      "QueryFilterGroup": {
        "type": "object",
        "properties": {
          "logic": {
            "$ref": "#/components/schemas/QueryFilterLogic"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "SortCriteria": {
        "type": "object",
        "properties": {
          "direction": {
            "$ref": "#/components/schemas/SortDirection"
          },
          "field": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FacetSortMode": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "FacetParameter": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "maxFacets": {
            "type": "integer",
            "format": "int32"
          },
          "sortMode": {
            "$ref": "#/components/schemas/FacetSortMode"
          },
          "facetValues": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "facetDateValues": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GridParameter": {
        "type": "object",
        "properties": {
          "andFilterGroup": {
            "$ref": "#/components/schemas/QueryFilterGroup"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortCriteria"
            },
            "nullable": true
          },
          "groupBys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortCriteria"
            },
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "orFilterGroup": {
            "$ref": "#/components/schemas/QueryFilterGroup"
          },
          "facetParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterByColumnParameter": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "description": "ColumnName",
            "nullable": true
          },
          "andFilterGroup": {
            "$ref": "#/components/schemas/QueryFilterGroup"
          },
          "orFilterGroup": {
            "$ref": "#/components/schemas/QueryFilterGroup"
          }
        },
        "additionalProperties": false,
        "description": "Defines the FilterByColumnParameter"
      },
      "AssociationType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Association Types",
        "format": "int32"
      },
      "ExcelExportRequest": {
        "required": [
          "componentScreenName",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "componentScreenName": {
            "type": "string",
            "description": "ScreenName"
          },
          "totalCount": {
            "pattern": "^-?\\d{1,19}$",
            "type": "integer",
            "description": "TotalCount",
            "format": "int64"
          },
          "countryCd": {
            "pattern": "^([A-Z]){2,2}$",
            "type": "string",
            "description": "CountryCd",
            "nullable": true
          },
          "associationType": {
            "$ref": "#/components/schemas/AssociationType"
          },
          "fileUploadId": {
            "pattern": "^-?\\d{1,19}$",
            "type": "integer",
            "description": "fileUploadId",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Export Excel Request"
      },
      "FileProcessEventLog": {
        "type": "object",
        "properties": {
          "fileUploadId": {
            "type": "integer",
            "description": "FileUploadId",
            "format": "int64"
          },
          "fileType": {
            "type": "string",
            "description": "FileType",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "FileName",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Source",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "description": "EventType",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "type": "string",
            "description": "User",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the FileProcessEventLog"
      },
      "ImportAuditLog": {
        "type": "object",
        "properties": {
          "auditId": {
            "type": "string",
            "description": "Used as primary key in ImportAuditLog table.",
            "nullable": true
          },
          "fileUploadId": {
            "type": "integer",
            "description": "Used as foreign key to FileUpload table in ImportAuditLog table.",
            "format": "int64"
          },
          "fileType": {
            "type": "string",
            "description": "Used to know of what database retrieve the data.",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file uploaded.",
            "nullable": true
          },
          "ingestionStatusId": {
            "type": "integer",
            "description": "Used as a foreign key to IngestionStatus table in ImportAuditLog table.",
            "format": "int64"
          },
          "ingestionStatusName": {
            "type": "string",
            "description": "Status Name retrieved from IngestionStatus table, only for display.",
            "nullable": true
          },
          "uploadedBy": {
            "type": "string",
            "description": "Mail of the person that did the file upload.",
            "nullable": true
          },
          "uploadDate": {
            "type": "string",
            "description": "upload file of the uploaded file.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Defines ImportAuditLog"
      },
      "MappingDtoHeader": {
        "type": "object",
        "properties": {
          "baseTemplateType": {
            "type": "string",
            "description": "BaseTemplateType",
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "description": "TemplateName",
            "nullable": true
          },
          "templateType": {
            "type": "string",
            "description": "TemplateType",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the MappingDtoHeader"
      },
      "MappingDtoDataOriginal": {
        "type": "object",
        "properties": {
          "sourceColumnName": {
            "type": "string",
            "description": "SourceColumnName",
            "nullable": true
          },
          "sourceColumnOrder": {
            "type": "integer",
            "description": "SourceColumnOrder",
            "format": "int32"
          },
          "sourceColumnType": {
            "type": "string",
            "description": "SourceColumnType",
            "nullable": true
          },
          "destinationColumnId": {
            "type": "integer",
            "description": "DestinationColumnId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Defines the MappingDtoDataOriginal"
      },
      "ColumnsSource": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "columnOrder": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "MappingDtoDataCalculated": {
        "type": "object",
        "properties": {
          "sourceColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnsSource"
            },
            "description": "SourceColumns",
            "nullable": true
          },
          "calc": {
            "type": "string",
            "description": "Calc",
            "nullable": true
          },
          "calcCharacter": {
            "type": "string",
            "description": "CalcCharacter",
            "nullable": true
          },
          "calcColumnName": {
            "type": "string",
            "description": "CalcColumnName",
            "nullable": true
          },
          "calcValue": {
            "type": "string",
            "description": "CalcValue",
            "nullable": true
          },
          "destinationColumnId": {
            "type": "integer",
            "description": "DestinationColumnId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Defines the MappingDtoDataCalculated"
      },
      "MappingDtoData": {
        "type": "object",
        "properties": {
          "originalColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingDtoDataOriginal"
            },
            "description": "OriginalColumns",
            "nullable": true
          },
          "calculatedColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingDtoDataCalculated"
            },
            "description": "CalculatedColumns",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the MappingDtoData"
      },
      "MappingDto": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/MappingDtoHeader"
          },
          "data": {
            "$ref": "#/components/schemas/MappingDtoData"
          }
        },
        "additionalProperties": false,
        "description": "Define sthe MappingDto"
      },
      "MappingTemplateColumnBaseColumn": {
        "required": [
          "columnType",
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "templateColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "baseColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseColumn": {
            "$ref": "#/components/schemas/MappingBaseColumn"
          },
          "templateColumn": {
            "$ref": "#/components/schemas/MappingTemplateColumn"
          }
        },
        "additionalProperties": false
      },
      "MappingTemplateColumn": {
        "required": [
          "columnName",
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "templateColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "format": "int32"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "splitCharactor": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnFunction": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "template": {
            "$ref": "#/components/schemas/MappingTemplate"
          },
          "mappingBaseColumnCalculationTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingBaseColumnCalculationTemplateColumn"
            },
            "nullable": true
          },
          "mappingTemplateColumnBaseColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingTemplateColumnBaseColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingBaseColumnCalculationTemplateColumn": {
        "required": [
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "baseColumnCalculationId": {
            "type": "integer",
            "format": "int32"
          },
          "templateColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "baseColumnCalculation": {
            "$ref": "#/components/schemas/MappingBaseColumnCalculation"
          },
          "templateColumn": {
            "$ref": "#/components/schemas/MappingTemplateColumn"
          }
        },
        "additionalProperties": false
      },
      "MappingBaseColumnCalculation": {
        "required": [
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "baseColumnCalculationId": {
            "type": "integer",
            "format": "int32"
          },
          "baseColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "format": "int32"
          },
          "columnFunction": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnFunctionCode": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnValue": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseColumn": {
            "$ref": "#/components/schemas/MappingBaseColumn"
          },
          "template": {
            "$ref": "#/components/schemas/MappingTemplate"
          },
          "mappingBaseColumnCalculationTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingBaseColumnCalculationTemplateColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingSystemBaseColumnCalculationTemplateColumn": {
        "required": [
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "systemBaseColumnCalculationId": {
            "type": "integer",
            "format": "int64"
          },
          "systemTemplateColumnId": {
            "type": "integer",
            "format": "int64"
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "systemBaseColumnCalculation": {
            "$ref": "#/components/schemas/MappingSystemBaseColumnCalculation"
          },
          "systemTemplateColumn": {
            "$ref": "#/components/schemas/MappingSystemTemplateColumn"
          }
        },
        "additionalProperties": false
      },
      "MappingSystemTemplateColumnBaseColumn": {
        "required": [
          "columnType",
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "systemTemplateColumnId": {
            "type": "integer",
            "format": "int64"
          },
          "baseColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseColumn": {
            "$ref": "#/components/schemas/MappingBaseColumn"
          },
          "systemTemplateColumn": {
            "$ref": "#/components/schemas/MappingSystemTemplateColumn"
          }
        },
        "additionalProperties": false
      },
      "MappingSystemTemplateColumn": {
        "required": [
          "columnName",
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "systemTemplateColumnId": {
            "type": "integer",
            "format": "int64"
          },
          "systemTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "splitCharactor": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnFunction": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "systemTemplate": {
            "$ref": "#/components/schemas/MappingSystemTemplate"
          },
          "mappingSystemBaseColumnCalculationTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemBaseColumnCalculationTemplateColumn"
            },
            "nullable": true
          },
          "mappingSystemTemplateColumnBaseColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemTemplateColumnBaseColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingSystemTemplate": {
        "required": [
          "createdUser",
          "systemTemplateName",
          "systemType"
        ],
        "type": "object",
        "properties": {
          "systemTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "systemTemplateName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "systemTemplateType": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sqlcustom": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "description": {
            "maxLength": 3000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "systemType": {
            "type": "boolean"
          },
          "baseTable": {
            "$ref": "#/components/schemas/MappingBaseTable"
          },
          "mappingSystemBaseColumnCalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemBaseColumnCalculation"
            },
            "nullable": true
          },
          "mappingSystemTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemTemplateColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingSystemBaseColumnCalculation": {
        "required": [
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "systemBaseColumnCalculationId": {
            "type": "integer",
            "format": "int64"
          },
          "baseColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "systemTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "columnFunction": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnFunctionCode": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "columnValue": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseColumn": {
            "$ref": "#/components/schemas/MappingBaseColumn"
          },
          "systemTemplate": {
            "$ref": "#/components/schemas/MappingSystemTemplate"
          },
          "mappingSystemBaseColumnCalculationTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemBaseColumnCalculationTemplateColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingBaseColumn": {
        "required": [
          "columnName",
          "createdUser",
          "required"
        ],
        "type": "object",
        "properties": {
          "baseColumnId": {
            "type": "integer",
            "format": "int32"
          },
          "baseTableId": {
            "type": "integer",
            "format": "int32"
          },
          "columnName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "columnOrder": {
            "type": "integer",
            "format": "int32"
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "required": {
            "type": "boolean"
          },
          "baseTable": {
            "$ref": "#/components/schemas/MappingBaseTable"
          },
          "mappingBaseColumnCalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingBaseColumnCalculation"
            },
            "nullable": true
          },
          "mappingSystemBaseColumnCalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemBaseColumnCalculation"
            },
            "nullable": true
          },
          "mappingSystemTemplateColumnBaseColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemTemplateColumnBaseColumn"
            },
            "nullable": true
          },
          "mappingTemplateColumnBaseColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingTemplateColumnBaseColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingBaseTable": {
        "required": [
          "baseTableName",
          "createdUser"
        ],
        "type": "object",
        "properties": {
          "baseTableId": {
            "type": "integer",
            "format": "int32"
          },
          "baseTableName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "tableCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tableDisplayName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "displayDropDown": {
            "type": "boolean",
            "nullable": true
          },
          "mappingBaseColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingBaseColumn"
            },
            "nullable": true
          },
          "mappingSystemTemplate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingSystemTemplate"
            },
            "nullable": true
          },
          "mappingTemplate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MappingTemplate": {
        "required": [
          "createdUser",
          "templateName"
        ],
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "format": "int32"
          },
          "templateName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "templateType": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sqlcustom": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "baseTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdUser": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "createdDtm": {
            "type": "string",
            "format": "date-time"
          },
          "updatedUserId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updatedDtm": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "description": {
            "maxLength": 3000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "systemType": {
            "type": "boolean",
            "nullable": true
          },
          "baseTable": {
            "$ref": "#/components/schemas/MappingBaseTable"
          },
          "mappingBaseColumnCalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingBaseColumnCalculation"
            },
            "nullable": true
          },
          "mappingTemplateColumn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MappingTemplateColumn"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxFileType": {
        "enum": [
          0,
          1,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "DataQueryParms": {
        "required": [
          "taxFileType"
        ],
        "type": "object",
        "properties": {
          "includes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "taxFileType": {
            "$ref": "#/components/schemas/TaxFileType"
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "subEntityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taxPeriodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "jurisdictionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taxYearIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "reportingUnitIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SerializationType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "VAT Processor serialization to be use",
        "format": "int32"
      },
      "SubmissionDataQueryParms": {
        "required": [
          "taxFileType"
        ],
        "type": "object",
        "properties": {
          "isSubmissionCount": {
            "type": "boolean",
            "description": "Submissions"
          },
          "serializationType": {
            "$ref": "#/components/schemas/SerializationType"
          },
          "includes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "taxFileType": {
            "$ref": "#/components/schemas/TaxFileType"
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "subEntityIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taxPeriodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "jurisdictionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "taxYearIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "reportingUnitIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Submissions"
      },
      "TBTagGridData": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "string",
            "description": "Entity",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "description": "EntityId",
            "nullable": true
          },
          "gaapTypeId": {
            "type": "integer",
            "description": "GAAPTypeId",
            "format": "int64",
            "nullable": true
          },
          "accountingLevelId": {
            "type": "integer",
            "description": "AccountingLevelId",
            "format": "int64",
            "nullable": true
          },
          "jurisdictionId": {
            "type": "integer",
            "description": "JurisdictionId",
            "format": "int64",
            "nullable": true
          },
          "basisId": {
            "type": "integer",
            "description": "BasisId",
            "format": "int64",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "description": "CurrencyId",
            "format": "int64",
            "nullable": true
          },
          "workflowFileTypeId": {
            "type": "integer",
            "description": "WorkflowFileTypeId",
            "format": "int64",
            "nullable": true
          },
          "fixedAssetRegisterNm": {
            "type": "string",
            "description": "FixedAssetRegisterNm",
            "nullable": true
          },
          "fixedAssetRegisterDesc": {
            "type": "string",
            "description": "FixedAssetRegisterDesc",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the TBTagGridData"
      },
      "ApproveStagingRequest": {
        "type": "object",
        "properties": {
          "fileUploadId": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "fileType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "isAccepted": {
            "type": "boolean",
            "description": ""
          },
          "tagData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagGridData"
            },
            "description": "",
            "nullable": true
          },
          "ingestionProcess": {
            "type": "string",
            "description": "Attribute in charge of indicating the type of ingestion.",
            "nullable": true
          },
          "balanceDataLogId": {
            "type": "string",
            "description": "Attribute in charge of handling the BalanceDataLogId value.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "FileUploadDetails": {
        "type": "object",
        "properties": {
          "fileNm": {
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "fileUploadId": {
            "type": "integer",
            "format": "int64"
          },
          "infoRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "gtprecordStatusId": {
            "type": "boolean",
            "nullable": true
          },
          "startEffDt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FileValidationDetails": {
        "type": "object",
        "properties": {
          "businessRuleId": {
            "type": "integer",
            "format": "int64"
          },
          "logMessage": {
            "type": "string",
            "nullable": true
          },
          "severityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "validationStatusId": {
            "type": "integer",
            "format": "int64"
          },
          "gtprecordStatusId": {
            "type": "boolean",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DataValidationDetails": {
        "type": "object",
        "properties": {
          "stagingId": {
            "type": "integer",
            "format": "int64"
          },
          "fileRowNum": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileUploadId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "infoRequestId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "businessRulesId": {
            "type": "integer",
            "format": "int64"
          },
          "columnNm": {
            "type": "string",
            "nullable": true
          },
          "columnValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationLogParam": {
        "type": "object",
        "properties": {
          "fileUploadDetails": {
            "$ref": "#/components/schemas/FileUploadDetails"
          },
          "fileValidationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileValidationDetails"
            },
            "nullable": true
          },
          "dataValidationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataValidationDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TBTagBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines the TBTagBase"
      },
      "TaxEntity": {
        "type": "object",
        "properties": {
          "taxEntityId": {
            "type": "integer",
            "description": "TaxEntityId",
            "format": "int64"
          },
          "taxEntityTextDesc": {
            "type": "string",
            "description": "TaxEntityTextDesc",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Tax Entity"
      },
      "TaxFunctionsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Tax Functions"
      },
      "TaxYearModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines Tax Functions"
      },
      "STACTextModel": {
        "type": "object",
        "properties": {
          "stacAcctId": {
            "type": "integer",
            "description": "STACAcctId",
            "format": "int64"
          },
          "refLanguageId": {
            "type": "integer",
            "description": "RefLanguageId",
            "format": "int64"
          },
          "stacAcctName": {
            "type": "string",
            "description": "STACAcctName",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines STAC Text"
      },
      "TBTagData": {
        "type": "object",
        "properties": {
          "gridData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagGridData"
            },
            "description": "List of TB Tag",
            "nullable": true
          },
          "gaapOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of GAAP Options",
            "nullable": true
          },
          "accountingLevelOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of Accounting Level Options",
            "nullable": true
          },
          "jurisdictionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of Jurisdiction Options",
            "nullable": true
          },
          "basisOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of Basis Options",
            "nullable": true
          },
          "currencyOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of Currency Options",
            "nullable": true
          },
          "workflowOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TBTagBase"
            },
            "description": "List of Workflow Options",
            "nullable": true
          },
          "entityOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxEntity"
            },
            "description": "List of Entity Options",
            "nullable": true
          },
          "taxOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxFunctionsModel"
            },
            "description": "List of Tax Options",
            "nullable": true
          },
          "taxYearOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxYearModel"
            },
            "description": "List of TaxYear Options",
            "nullable": true
          },
          "taxPeriodOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxPeriods"
            },
            "description": "List of TaxPeriod Options",
            "nullable": true
          },
          "accountOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/STACTextModel"
            },
            "description": "List of Account Options",
            "nullable": true
          },
          "footToZero": {
            "type": "boolean",
            "description": "FootToZero"
          },
          "totalFootToZero": {
            "type": "integer",
            "description": "TotalFootToZero",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Defines the TBTagData"
      },
      "UpdateStageReportModel": {
        "type": "object",
        "properties": {
          "currentUser": {
            "type": "string",
            "description": "Current User information",
            "nullable": true
          },
          "overwrite": {
            "type": "boolean",
            "description": "Overwrite saved data"
          },
          "ingestionId": {
            "type": "string",
            "description": "Ingestion identifier",
            "nullable": true
          },
          "balanceLogId": {
            "type": "integer",
            "description": "BalanceLog identifier",
            "format": "int64"
          },
          "reject": {
            "type": "boolean",
            "description": "Reject staging report data"
          },
          "taxYear": {
            "type": "string",
            "description": "Tax year information",
            "nullable": true
          },
          "taxPeriod": {
            "type": "string",
            "description": "Tax period information",
            "nullable": true
          },
          "periodStartDate": {
            "type": "string",
            "description": "Period start date information",
            "format": "date-time"
          },
          "periodEndDate": {
            "type": "string",
            "description": "Period end date information",
            "format": "date-time"
          },
          "uomId": {
            "type": "integer",
            "description": "Unit of measure identifier",
            "format": "int64"
          },
          "uomName": {
            "type": "string",
            "description": "Unit of measure name",
            "nullable": true
          },
          "gaapTypeId": {
            "type": "integer",
            "description": "GAAPType identifier",
            "format": "int64"
          },
          "gaapTypeNm": {
            "type": "string",
            "description": "GAAPType name",
            "nullable": true
          },
          "gaapTypeCd": {
            "type": "string",
            "description": "GAAPType code",
            "nullable": true
          },
          "balanceBasisId": {
            "type": "integer",
            "description": "Balance basis identifier",
            "format": "int64"
          },
          "balanceBasisNm": {
            "type": "string",
            "description": "Balance basis name",
            "nullable": true
          },
          "balanceBasisCd": {
            "type": "string",
            "description": "Balance basis code",
            "nullable": true
          },
          "acctingLevelId": {
            "type": "integer",
            "description": "Accounting level identifier",
            "format": "int64"
          },
          "acctingLevelNm": {
            "type": "string",
            "description": "Accounting level name",
            "nullable": true
          },
          "acctingLevelCd": {
            "type": "string",
            "description": "Accounting level code",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "UpdateStageReportModel class definition"
      },
      "Extension": {
        "type": "object",
        "properties": {
          "url": {
            "maxLength": 256,
            "pattern": "\\S*",
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          },
          "modifierExtension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Coding": {
        "type": "object",
        "properties": {
          "system": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "version": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 256,
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "type": "string",
            "nullable": true
          },
          "display": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          },
          "modifierExtension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Meta": {
        "type": "object",
        "properties": {
          "versionId": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "security": {
            "$ref": "#/components/schemas/Coding"
          },
          "tag": {
            "$ref": "#/components/schemas/Coding"
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          },
          "modifierExtension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Narrative": {
        "type": "object",
        "properties": {
          "status": {
            "maxLength": 256,
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "type": "string",
            "nullable": true
          },
          "text": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          },
          "modifierExtension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "team": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "productOwner": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "language": {
            "maxLength": 256,
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "type": "string",
            "nullable": true
          },
          "text": {
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "$ref": "#/components/schemas/Resource"
          },
          "extension": {
            "$ref": "#/components/schemas/Extension"
          },
          "modifierExtension": {
            "$ref": "#/components/schemas/Extension"
          }
        },
        "additionalProperties": false
      },
      "ADFIngestionResource": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Client Id",
            "nullable": true
          },
          "informationRequestId": {
            "type": "string",
            "description": "Information Request Id",
            "nullable": true
          },
          "ingestionId": {
            "type": "string",
            "description": "Ingestion Id",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "description": "File Type",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "Operation",
            "nullable": true
          },
          "id": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "team": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "productOwner": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "language": {
            "maxLength": 256,
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "type": "string",
            "nullable": true
          },
          "text": {
            "$ref": "#/components/schemas/Narrative"
          },
          "contained": {
            "$ref": "#/components/schemas/Resource"
          },
          "extension": {
            "$ref": "#/components/schemas/Extension"
          },
          "modifierExtension": {
            "$ref": "#/components/schemas/Extension"
          }
        },
        "additionalProperties": false,
        "description": "ADF Ingestion Resource"
      },
      "HealthStatus": {
        "enum": [
          "Unhealthy",
          "Degraded",
          "Healthy"
        ],
        "type": "string"
      },
      "HealthReportEntry": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "VersionInfo": {
        "type": "string",
        "description": "String of Json"
      },
      "HealthReport": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "totalTime": {
            "type": "string",
            "format": "[-][d'.']hh':'mm':'ss['.'fffffff]",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthReportEntry"
            },
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.Use the AuthenticationService / api / v1 / Authenticate / login endpoint to acquire a token, then insert the the token preceded by the word Bearer into the token field, as in \"Bearer <token...>\".",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}