{
	"info": {
		"_postman_id": "67cdc085-8620-4e7e-b888-0cb49641ddb5",
		"name": "new check",
		"description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.\n\nContact Support:\n Name: Stripe Dev Platform Team\n Email: dev-platform@stripe.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "466628-67cdc085-8620-4e7e-b888-0cb49641ddb5"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "3d_secure",
					"item": [
						{
							"name": "Create3D Secure",
							"id": "8d2352d5-3be7-4679-ba78-22bb7e20c525",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "32573140",
											"description": "(Required) Amount of the charge that you will create when authentication completes."
										},
										{
											"key": "currency",
											"value": "commodo dolore sed et",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "return_url",
											"value": "commodo Ut",
											"description": "(Required) The URL that the cardholder's browser will be returned to when authentication completes."
										},
										{
											"key": "card",
											"value": "sed occaecat sit ipsum",
											"description": "The ID of a card token, or the ID of a card belonging to the given customer."
										},
										{
											"key": "customer",
											"value": "pariatur in"
										},
										{
											"key": "expand[0]",
											"value": "magna laborum",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "dolor eiusmod reprehenderit proident",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/3d_secure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"3d_secure"
									]
								}
							},
							"response": [
								{
									"id": "bab2c290-b949-4ea5-a9ca-7f9d24cd1bea",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Amount of the charge that you will create when authentication completes.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The URL that the cardholder's browser will be returned to when authentication completes.",
													"key": "return_url",
													"value": "<string>"
												},
												{
													"description": "The ID of a card token, or the ID of a card belonging to the given customer.",
													"key": "card",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/3d_secure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"3d_secure"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"authenticated\": \"<boolean>\",\n  \"card\": {\n    \"brand\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"funding\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"account\": \"<string>\",\n    \"address_city\": \"<string>\",\n    \"address_country\": \"<string>\",\n    \"address_line1\": \"<string>\",\n    \"address_line1_check\": \"<string>\",\n    \"address_line2\": \"<string>\",\n    \"address_state\": \"<string>\",\n    \"address_zip\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"available_payout_methods\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"default_for_currency\": \"<boolean>\",\n    \"dynamic_last4\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"name\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"redirect_url\": \"<string>\"\n}"
								},
								{
									"id": "0aad18aa-21eb-45c1-8e20-3365cce397a4",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Amount of the charge that you will create when authentication completes.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The URL that the cardholder's browser will be returned to when authentication completes.",
													"key": "return_url",
													"value": "<string>"
												},
												{
													"description": "The ID of a card token, or the ID of a card belonging to the given customer.",
													"key": "card",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/3d_secure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"3d_secure"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve3D Secure",
							"id": "013c4e29-5fb7-4db2-a71d-5621817098b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/3d_secure/:three_d_secure?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"3d_secure",
										":three_d_secure"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "three_d_secure",
											"value": "esse deserunt",
											"description": "(Required) The identifier of the 3D Secure object to be retrieved."
										}
									]
								},
								"description": "<p>Retrieves a 3D Secure object.</p>"
							},
							"response": [
								{
									"id": "ee5f96fb-2a34-48a3-9b62-033cf3215b4d",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/3d_secure/:three_d_secure?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"3d_secure",
												":three_d_secure"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "three_d_secure",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the 3D Secure object to be retrieved."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"authenticated\": \"<boolean>\",\n  \"card\": {\n    \"brand\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"funding\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"account\": \"<string>\",\n    \"address_city\": \"<string>\",\n    \"address_country\": \"<string>\",\n    \"address_line1\": \"<string>\",\n    \"address_line1_check\": \"<string>\",\n    \"address_line2\": \"<string>\",\n    \"address_state\": \"<string>\",\n    \"address_zip\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"available_payout_methods\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"default_for_currency\": \"<boolean>\",\n    \"dynamic_last4\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"name\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"redirect_url\": \"<string>\"\n}"
								},
								{
									"id": "b6480e2f-b8a1-434d-82ce-b9cbf58b3597",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/3d_secure/:three_d_secure?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"3d_secure",
												":three_d_secure"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "three_d_secure",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the 3D Secure object to be retrieved."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "26ab9ce6-b028-4397-83ad-9f2a8b045177"
				},
				{
					"name": "account",
					"item": [
						{
							"name": "bank_accounts",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete Account External Account",
											"id": "4783eca5-3bf6-424c-a2ab-474b5689754d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"bank_accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the external account to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"id": "2efed52d-ab7c-4233-a541-154a5ef3a62e",
													"name": "Successful response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"currency\": \"<string>\"\n}"
												},
												{
													"id": "4ef9a82e-ca67-4774-a35d-6dced71fd695",
													"name": "Error response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Retrieve Account External Account",
											"id": "5144f869-fee2-4cae-b814-4f73b0e429eb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/bank_accounts/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"bank_accounts",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "7e01cd45-c20f-440d-8788-a9c3516453bf",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "69916ef2-3d10-4360-a576-df85e3bca72e",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Account External Account",
											"id": "06b179c0-939b-48bf-92bd-c626ee5a41ef",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "address_city",
															"value": "minim dolor eu sed sint",
															"description": "City/District/Suburb/Town/Village."
														},
														{
															"key": "address_country",
															"value": "proident ",
															"description": "Billing address country, if provided when creating card."
														},
														{
															"key": "address_line1",
															"value": "non veniam est in in",
															"description": "Address line 1 (Street address/PO Box/Company name)."
														},
														{
															"key": "address_line2",
															"value": "laboris eiusmod deserunt",
															"description": "Address line 2 (Apartment/Suite/Unit/Building)."
														},
														{
															"key": "address_state",
															"value": "cupidatat aut",
															"description": "State/County/Province/Region."
														},
														{
															"key": "address_zip",
															"value": "reprehenderit officia laborum",
															"description": "ZIP or postal code"
														},
														{
															"key": "default_for_currency",
															"value": "false",
															"description": "When set to true, this becomes the default external account for its currency."
														},
														{
															"key": "exp_month",
															"value": "nisi do mollit incididunt",
															"description": "Two digit number representing the card’s expiration month."
														},
														{
															"key": "exp_year",
															"value": "cupidatat tempor proident",
															"description": "Four digit number representing the card’s expiration year."
														},
														{
															"key": "expand[0]",
															"value": "ea irure",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "dolore",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "name",
															"value": "sed elit in",
															"description": "Cardholder name."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"bank_accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the external account to update"
														}
													]
												},
												"description": "<p>Updates the metadata of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p><p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>"
											},
											"response": [
												{
													"id": "c84717ed-4b85-4d82-9b0e-88b31fe850b3",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "City/District/Suburb/Town/Village.",
																	"key": "address_city",
																	"value": "<string>"
																},
																{
																	"description": "Billing address country, if provided when creating card.",
																	"key": "address_country",
																	"value": "<string>"
																},
																{
																	"description": "Address line 1 (Street address/PO Box/Company name).",
																	"key": "address_line1",
																	"value": "<string>"
																},
																{
																	"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																	"key": "address_line2",
																	"value": "<string>"
																},
																{
																	"description": "State/County/Province/Region.",
																	"key": "address_state",
																	"value": "<string>"
																},
																{
																	"description": "ZIP or postal code",
																	"key": "address_zip",
																	"value": "<string>"
																},
																{
																	"description": "When set to true, this becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Two digit number representing the card’s expiration month.",
																	"key": "exp_month",
																	"value": "<string>"
																},
																{
																	"description": "Four digit number representing the card’s expiration year.",
																	"key": "exp_year",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Cardholder name.",
																	"key": "name",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "78700327-41bb-4111-a141-14fbdf55f46e",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "City/District/Suburb/Town/Village.",
																	"key": "address_city",
																	"value": "<string>"
																},
																{
																	"description": "Billing address country, if provided when creating card.",
																	"key": "address_country",
																	"value": "<string>"
																},
																{
																	"description": "Address line 1 (Street address/PO Box/Company name).",
																	"key": "address_line1",
																	"value": "<string>"
																},
																{
																	"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																	"key": "address_line2",
																	"value": "<string>"
																},
																{
																	"description": "State/County/Province/Region.",
																	"key": "address_state",
																	"value": "<string>"
																},
																{
																	"description": "ZIP or postal code",
																	"key": "address_zip",
																	"value": "<string>"
																},
																{
																	"description": "When set to true, this becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Two digit number representing the card’s expiration month.",
																	"key": "exp_month",
																	"value": "<string>"
																},
																{
																	"description": "Four digit number representing the card’s expiration year.",
																	"key": "exp_year",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Cardholder name.",
																	"key": "name",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "8cf18d3c-7f8b-4435-85a4-ef017d90a75a"
								},
								{
									"name": "Create Account External Account",
									"id": "d5862865-b3ea-4091-bcc0-e912d24753d3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "default_for_currency",
													"value": "false",
													"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency."
												},
												{
													"key": "expand[0]",
													"value": "ullamco magna Lorem",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "eu adipisicing incididunt tempor",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/bank_accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"bank_accounts"
											]
										}
									},
									"response": [
										{
											"id": "a8c2def3-5e0a-4efc-922a-9b16040db581",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
															"key": "default_for_currency",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/bank_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"bank_accounts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
										},
										{
											"id": "7a5e02ec-7797-468e-942a-a8c098a75401",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
															"key": "default_for_currency",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/bank_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"bank_accounts"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "3e94c94e-7a57-4701-809b-c6a7b9d02f44"
						},
						{
							"name": "external_accounts",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete Account External Account",
											"id": "f13fe9ff-cb13-4273-a855-3d28d940435d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the external account to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"id": "366fcdd8-e02f-468b-8044-9014e1a06fa9",
													"name": "Successful response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"currency\": \"<string>\"\n}"
												},
												{
													"id": "6ac255cf-9550-43ec-acc6-05d5c3415574",
													"name": "Error response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Retrieve Account External Account",
											"id": "59c3858d-6e93-47e5-9864-b4427ec980aa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "8456d792-ae8f-4d99-8dfe-9088eb2b8970",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "3efabb05-7bfd-4f91-a96f-56331967a9be",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Account External Account",
											"id": "fa0627db-6e46-4ba7-ba06-92594b75d249",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "address_city",
															"value": "minim dolor eu sed sint",
															"description": "City/District/Suburb/Town/Village."
														},
														{
															"key": "address_country",
															"value": "proident ",
															"description": "Billing address country, if provided when creating card."
														},
														{
															"key": "address_line1",
															"value": "non veniam est in in",
															"description": "Address line 1 (Street address/PO Box/Company name)."
														},
														{
															"key": "address_line2",
															"value": "laboris eiusmod deserunt",
															"description": "Address line 2 (Apartment/Suite/Unit/Building)."
														},
														{
															"key": "address_state",
															"value": "cupidatat aut",
															"description": "State/County/Province/Region."
														},
														{
															"key": "address_zip",
															"value": "reprehenderit officia laborum",
															"description": "ZIP or postal code"
														},
														{
															"key": "default_for_currency",
															"value": "false",
															"description": "When set to true, this becomes the default external account for its currency."
														},
														{
															"key": "exp_month",
															"value": "nisi do mollit incididunt",
															"description": "Two digit number representing the card’s expiration month."
														},
														{
															"key": "exp_year",
															"value": "cupidatat tempor proident",
															"description": "Four digit number representing the card’s expiration year."
														},
														{
															"key": "expand[0]",
															"value": "ea irure",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "dolore",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "name",
															"value": "sed elit in",
															"description": "Cardholder name."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the external account to update"
														}
													]
												},
												"description": "<p>Updates the metadata of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p><p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>"
											},
											"response": [
												{
													"id": "327667d2-ee9d-4544-a793-73242d5c42e7",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "City/District/Suburb/Town/Village.",
																	"key": "address_city",
																	"value": "<string>"
																},
																{
																	"description": "Billing address country, if provided when creating card.",
																	"key": "address_country",
																	"value": "<string>"
																},
																{
																	"description": "Address line 1 (Street address/PO Box/Company name).",
																	"key": "address_line1",
																	"value": "<string>"
																},
																{
																	"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																	"key": "address_line2",
																	"value": "<string>"
																},
																{
																	"description": "State/County/Province/Region.",
																	"key": "address_state",
																	"value": "<string>"
																},
																{
																	"description": "ZIP or postal code",
																	"key": "address_zip",
																	"value": "<string>"
																},
																{
																	"description": "When set to true, this becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Two digit number representing the card’s expiration month.",
																	"key": "exp_month",
																	"value": "<string>"
																},
																{
																	"description": "Four digit number representing the card’s expiration year.",
																	"key": "exp_year",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Cardholder name.",
																	"key": "name",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "f814d77f-e656-4e13-9973-8f25034c34eb",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "City/District/Suburb/Town/Village.",
																	"key": "address_city",
																	"value": "<string>"
																},
																{
																	"description": "Billing address country, if provided when creating card.",
																	"key": "address_country",
																	"value": "<string>"
																},
																{
																	"description": "Address line 1 (Street address/PO Box/Company name).",
																	"key": "address_line1",
																	"value": "<string>"
																},
																{
																	"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																	"key": "address_line2",
																	"value": "<string>"
																},
																{
																	"description": "State/County/Province/Region.",
																	"key": "address_state",
																	"value": "<string>"
																},
																{
																	"description": "ZIP or postal code",
																	"key": "address_zip",
																	"value": "<string>"
																},
																{
																	"description": "When set to true, this becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Two digit number representing the card’s expiration month.",
																	"key": "exp_month",
																	"value": "<string>"
																},
																{
																	"description": "Four digit number representing the card’s expiration year.",
																	"key": "exp_year",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Cardholder name.",
																	"key": "name",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "994f17fc-fd65-4b91-b84b-ecd9e3406410"
								},
								{
									"name": "All Account External Accounts",
									"id": "78dd33ce-c6d6-47b2-a4e7-6938a4c57612",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account/external_accounts?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"external_accounts"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "adipisicing incididunt esse",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "adipisicing incididunt esse",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											]
										}
									},
									"response": [
										{
											"id": "c0b36aed-d68d-4b9f-95eb-25b5ecb3eb57",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tokenization_method\": \"<string>\"\n    },\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tokenization_method\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "df7d2f7c-73b8-4e70-8e6b-a557cbeaeb50",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Create Account External Account",
									"id": "ffe60109-5d79-43b1-ae75-3a006524a9a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "default_for_currency",
													"value": "false",
													"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency."
												},
												{
													"key": "expand[0]",
													"value": "ullamco magna Lorem",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "eu adipisicing incididunt tempor",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/external_accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"external_accounts"
											]
										}
									},
									"response": [
										{
											"id": "102c4971-1ae0-4b0c-a209-adac2647c6b2",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
															"key": "default_for_currency",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
										},
										{
											"id": "de827562-6940-475c-b899-f307e61525a2",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
															"key": "default_for_currency",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/account/external_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"account",
														"external_accounts"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "d9583058-bf8b-411d-bf56-5c3a13609f57"
						},
						{
							"name": "Account Delete",
							"id": "805a2b1e-273d-4a85-bc07-57417852a1bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "dolore qui velit",
											"description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account"
									]
								},
								"description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p><p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p><p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>"
							},
							"response": [
								{
									"id": "0b43353a-c77e-437d-ac69-07d95391d773",
									"name": "Successful response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key.",
													"key": "account",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
								},
								{
									"id": "611b04b3-375d-46ea-b432-03d2715801de",
									"name": "Error response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The identifier of the account to be deleted. If none is provided, will default to the account of the API key.",
													"key": "account",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Account Retrieve",
							"id": "8a674029-cbd3-4c28-880f-193e34a6afed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/account?account=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account"
									],
									"query": [
										{
											"key": "account",
											"value": "esse deserunt",
											"description": "The identifier of the account to retrieve. If none is provided, the account associated with the API key is returned."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"description": "<p>Retrieves the details of the account.</p>"
							},
							"response": [
								{
									"id": "a4fd7a64-2161-46dd-8622-69573232bc2a",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account?account=<string>&expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											],
											"query": [
												{
													"key": "account",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
								},
								{
									"id": "b67f66fc-56e8-4a07-97f3-e618e5becc60",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/account?account=<string>&expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											],
											"query": [
												{
													"key": "account",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Account Update",
							"id": "3e9c2001-beeb-4a4a-93e7-f0cbae8b926a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "Ut ullamco"
										},
										{
											"key": "account_token",
											"value": "nulla enim nostrud esse dolore"
										},
										{
											"key": "business_logo",
											"value": "Lorem quis occaecat",
											"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)"
										},
										{
											"key": "business_name",
											"value": "labore voluptate Excepteur occaecat eiusmod",
											"description": "The publicly sharable name for this account."
										},
										{
											"key": "business_primary_color",
											"value": "exercitation in ipsum cillum",
											"description": "A CSS hex color value representing the primary branding color for this account."
										},
										{
											"key": "business_url",
											"value": "reprehenderit",
											"description": "The URL that best shows the service or product provided by this account."
										},
										{
											"key": "debit_negative_balances",
											"value": "true",
											"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances)."
										},
										{
											"key": "decline_charge_on[avs_failure]",
											"value": "true",
											"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
										},
										{
											"key": "decline_charge_on[cvc_failure]",
											"value": "true",
											"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
										},
										{
											"key": "default_currency",
											"value": "amet dolor eu ad",
											"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts)."
										},
										{
											"key": "email",
											"value": "labore sunt",
											"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative."
										},
										{
											"key": "expand[0]",
											"value": "cupidatat dolor officia occaecat",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "ad magna labore adipisicing",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][city][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][country][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][line1][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][line2][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][postal_code][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][address][state][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][dob][day][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][dob][month][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][dob][year][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][first_name]",
											"value": "est",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][last_name]",
											"value": "amet ipsum commodo",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][maiden_name]",
											"value": "deserunt commodo dolore minim ullamco",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][personal_id_number]",
											"value": "dolor Excepteur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][tempor44][verification][document][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][city][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][country][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][line1][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][line2][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][postal_code][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][address][state][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][dob][day][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][dob][month][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][dob][year][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][first_name]",
											"value": "magna deserunt id laboris do",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][last_name]",
											"value": "culpa Excepteur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][maiden_name]",
											"value": "id ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][personal_id_number]",
											"value": "sint incididunt elit consectetur veniam",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][non_d1][verification][document][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][city]",
											"value": "eiusmod nisi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][country]",
											"value": "nostrud pariatur dolor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][line1]",
											"value": "ea sint labore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][line2]",
											"value": "laborum ipsum mollit sed",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][postal_code]",
											"value": "esse",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][state]",
											"value": "non laboris dolor eiusmod",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][city]",
											"value": "ut dolor ullamco velit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][country]",
											"value": "minim",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][line1]",
											"value": "sunt sit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][line2]",
											"value": "do",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][postal_code]",
											"value": "ex ad aute amet",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][state]",
											"value": "ipsum non",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][town]",
											"value": "ex nisi et",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][city]",
											"value": "consequat irure ipsum",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][country]",
											"value": "sunt non do",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][line1]",
											"value": "Excepteur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][line2]",
											"value": "eiusmod ipsum sed exercitation nulla",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][postal_code]",
											"value": "sint consequat",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][state]",
											"value": "in",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][town]",
											"value": "Excepteur Lorem nostrud",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name]",
											"value": "cillum eiusmod",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name_kana]",
											"value": "dolor cillum",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name_kanji]",
											"value": "sint proident mollit incididunt eiusmod",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_tax_id]",
											"value": "laboris Lorem dolor cupidatat",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_vat_id]",
											"value": "elit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][day]",
											"value": "-75794296",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][month]",
											"value": "-90483392",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][year]",
											"value": "-47703007",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name]",
											"value": "tempor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name_kana]",
											"value": "irure ipsum esse",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name_kanji]",
											"value": "reprehenderit Lorem et ex",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[gender]",
											"value": "culpa Ut sint ipsum aliqua",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name]",
											"value": "reprehenderit adipisicing",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name_kana]",
											"value": "velit sunt adi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name_kanji]",
											"value": "ea",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[maiden_name]",
											"value": "labor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][city]",
											"value": "mollit eu",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][country]",
											"value": "irure",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][line1]",
											"value": "reprehenderit nisi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][line2]",
											"value": "pariatur et proident fugiat id",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][postal_code]",
											"value": "proident enim aliquip",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][state]",
											"value": "aute labore nostrud",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][city]",
											"value": "ex esse",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][country]",
											"value": "voluptate culpa dolor et",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][line1]",
											"value": "culpa Ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][line2]",
											"value": "labore sint nulla Duis voluptate",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][postal_code]",
											"value": "in veniam ex non amet",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][state]",
											"value": "dolore anim ex",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][town]",
											"value": "amet ex eiusmod Duis aliquip",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][city]",
											"value": "Duis labore enim ex",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][country]",
											"value": "commodo consectetur dolore mollit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][line1]",
											"value": "id pariatur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][line2]",
											"value": "elit anim culpa dolor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][postal_code]",
											"value": "amet Lorem adipisicing nulla",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][state]",
											"value": "nostrud",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][town]",
											"value": "Duis deserunt officia",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_id_number]",
											"value": "elit voluptate irure",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[phone_number]",
											"value": "nostrud ullamco veniam",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[ssn_last_4]",
											"value": "ut ad",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[tax_id_registrar]",
											"value": "eu in exercitation voluptate",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[type]",
											"value": "sed laborum et",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[verification][document]",
											"value": "amet exercitation",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "payout_schedule[delay_days]",
											"value": "94749898",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[interval]",
											"value": "four_times_monthly",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[monthly_anchor]",
											"value": "44320247",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[weekly_anchor]",
											"value": "thursday",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_statement_descriptor",
											"value": "Ut sit quis nulla",
											"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard."
										},
										{
											"key": "product_description",
											"value": "in elit dolor",
											"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes."
										},
										{
											"key": "statement_descriptor",
											"value": "in enim",
											"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)"
										},
										{
											"key": "support_email",
											"value": "in qui Ut",
											"description": "A publicly shareable support email address for the business."
										},
										{
											"key": "support_phone",
											"value": "dolor nulla adipisicing ipsum velit",
											"description": "A publicly shareable support phone number for the business."
										},
										{
											"key": "support_url",
											"value": "in sunt adipisicing",
											"description": "A publicly shareable URL that provides support for this account."
										},
										{
											"key": "tos_acceptance[date]",
											"value": "74125662",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										},
										{
											"key": "tos_acceptance[ip]",
											"value": "eu",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										},
										{
											"key": "tos_acceptance[user_agent]",
											"value": "veniam",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account"
									]
								},
								"description": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p><p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>"
							},
							"response": [
								{
									"id": "4784091e-bbeb-4cef-98d3-a12d45dcc243",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "<string>"
												},
												{
													"key": "account_token",
													"value": "<string>"
												},
												{
													"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
													"key": "business_logo",
													"value": "<string>"
												},
												{
													"description": "The publicly sharable name for this account.",
													"key": "business_name",
													"value": "<string>"
												},
												{
													"description": "A CSS hex color value representing the primary branding color for this account.",
													"key": "business_primary_color",
													"value": "<string>"
												},
												{
													"description": "The URL that best shows the service or product provided by this account.",
													"key": "business_url",
													"value": "<string>"
												},
												{
													"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
													"key": "debit_negative_balances",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[avs_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[cvc_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
													"key": "default_currency",
													"value": "<string>"
												},
												{
													"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][fugiat22a][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor0][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][day]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][month]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][year]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[gender]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[phone_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[type]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[verification][document]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[delay_days]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[interval]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[monthly_anchor]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[weekly_anchor]",
													"value": "<string>"
												},
												{
													"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
													"key": "payout_statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
													"key": "product_description",
													"value": "<string>"
												},
												{
													"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support email address for the business.",
													"key": "support_email",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support phone number for the business.",
													"key": "support_phone",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable URL that provides support for this account.",
													"key": "support_url",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[date]",
													"value": "<unix-time>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[ip]",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[user_agent]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
								},
								{
									"id": "c3ae341a-2c0c-4373-aa8a-018d70d61b83",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "<string>"
												},
												{
													"key": "account_token",
													"value": "<string>"
												},
												{
													"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
													"key": "business_logo",
													"value": "<string>"
												},
												{
													"description": "The publicly sharable name for this account.",
													"key": "business_name",
													"value": "<string>"
												},
												{
													"description": "A CSS hex color value representing the primary branding color for this account.",
													"key": "business_primary_color",
													"value": "<string>"
												},
												{
													"description": "The URL that best shows the service or product provided by this account.",
													"key": "business_url",
													"value": "<string>"
												},
												{
													"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
													"key": "debit_negative_balances",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[avs_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[cvc_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
													"key": "default_currency",
													"value": "<string>"
												},
												{
													"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][tempor__][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][day]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][month]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][year]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[gender]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[phone_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[type]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[verification][document]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[delay_days]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[interval]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[monthly_anchor]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[weekly_anchor]",
													"value": "<string>"
												},
												{
													"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
													"key": "payout_statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
													"key": "product_description",
													"value": "<string>"
												},
												{
													"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support email address for the business.",
													"key": "support_email",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support phone number for the business.",
													"key": "support_phone",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable URL that provides support for this account.",
													"key": "support_url",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[date]",
													"value": "<unix-time>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[ip]",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[user_agent]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Login Link Create",
							"id": "35fcb5bb-2cb5-4ddf-b1e9-8b8b9c180d97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "Ut",
											"description": "(Required) The identifier of the account to create a login link for."
										},
										{
											"key": "expand[0]",
											"value": "ullamco ipsum",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "amet ipsum",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "redirect_url",
											"value": "ut occaecat in",
											"description": "Where to redirect the user after they log out of their dashboard."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account/login_links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account",
										"login_links"
									]
								},
								"description": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p><p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>"
							},
							"response": [
								{
									"id": "261469f5-0597-40ff-bee2-98ce0f723732",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the account to create a login link for.",
													"key": "account",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Where to redirect the user after they log out of their dashboard.",
													"key": "redirect_url",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/login_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"login_links"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "6f2ca1d9-f04e-47ea-be2a-eddb2308f934",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the account to create a login link for.",
													"key": "account",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Where to redirect the user after they log out of their dashboard.",
													"key": "redirect_url",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/login_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"login_links"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Light Account Logout",
							"id": "9244b84e-4fd3-4ab2-9550-48bf032008fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "qui cupidatat consectetur fugiat Ut",
											"description": "(Required) The identifier of the account to log out."
										},
										{
											"key": "expand[0]",
											"value": "esse ad enim sit",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "aliqua incididunt nisi",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/account/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"account",
										"logout"
									]
								},
								"description": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p><p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>"
							},
							"response": [
								{
									"id": "3f77397b-47e0-42fa-8ee0-039be171aa50",
									"name": "Successful response.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the account to log out.",
													"key": "account",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "3ae1bc83-08a7-4b62-960c-313a2b6d810b",
									"name": "Error response.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the account to log out.",
													"key": "account",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"account",
												"logout"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "8852a60a-f3c2-410a-8ddd-03b6b71763bc"
				},
				{
					"name": "accounts",
					"item": [
						{
							"name": "{account}",
							"item": [
								{
									"name": "bank_accounts",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Account External Account",
													"id": "00564cec-f333-4c1c-853a-fb100c562f93",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"response": [
														{
															"id": "91cfee67-c36a-4945-a512-28ecd107d355",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to be deleted."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"currency\": \"<string>\"\n}"
														},
														{
															"id": "aab1335f-9708-4caa-846b-336c4e17044e",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to be deleted."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Account External Account",
													"id": "a1d1f911-ac2a-4c08-842d-25e7e21c452e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"bank_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "901b5476-d79d-4610-9674-c1bdaea725b7",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "704390f2-3f6e-4635-b812-645adfe5b214",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Account External Account",
													"id": "655ec347-d52d-4112-85c8-7200bb2e4572",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "address_city",
																	"value": "minim dolor eu sed sint",
																	"description": "City/District/Suburb/Town/Village."
																},
																{
																	"key": "address_country",
																	"value": "proident ",
																	"description": "Billing address country, if provided when creating card."
																},
																{
																	"key": "address_line1",
																	"value": "non veniam est in in",
																	"description": "Address line 1 (Street address/PO Box/Company name)."
																},
																{
																	"key": "address_line2",
																	"value": "laboris eiusmod deserunt",
																	"description": "Address line 2 (Apartment/Suite/Unit/Building)."
																},
																{
																	"key": "address_state",
																	"value": "cupidatat aut",
																	"description": "State/County/Province/Region."
																},
																{
																	"key": "address_zip",
																	"value": "reprehenderit officia laborum",
																	"description": "ZIP or postal code"
																},
																{
																	"key": "default_for_currency",
																	"value": "false",
																	"description": "When set to true, this becomes the default external account for its currency."
																},
																{
																	"key": "exp_month",
																	"value": "nisi do mollit incididunt",
																	"description": "Two digit number representing the card’s expiration month."
																},
																{
																	"key": "exp_year",
																	"value": "cupidatat tempor proident",
																	"description": "Four digit number representing the card’s expiration year."
																},
																{
																	"key": "expand[0]",
																	"value": "ea irure",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "dolore",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "name",
																	"value": "sed elit in",
																	"description": "Cardholder name."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														},
														"description": "<p>Updates the metadata of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p><p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>"
													},
													"response": [
														{
															"id": "91011b34-2dc3-4647-a93b-adb66dc67225",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "When set to true, this becomes the default external account for its currency.",
																			"key": "default_for_currency",
																			"value": "<boolean>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to update"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "b154bb0a-e658-4372-8981-a0b5d953accf",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "When set to true, this becomes the default external account for its currency.",
																			"key": "default_for_currency",
																			"value": "<boolean>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to update"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "c428014e-ef06-42c3-9367-13a7c594059e"
										},
										{
											"name": "Create Account External Account",
											"id": "79b94aed-bb8c-444f-b811-8244e9ce1dce",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "default_for_currency",
															"value": "false",
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency."
														},
														{
															"key": "expand[0]",
															"value": "ullamco magna Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "eu adipisicing incididunt tempor",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"bank_accounts"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ff900008-e81d-49a1-b0ea-8706897be4cd",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"bank_accounts"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "a0906e20-2655-4405-90cd-8c2ad73dbf1a",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/bank_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"bank_accounts"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "71143878-5bba-4ec7-a6ec-3732a6eca4ac"
								},
								{
									"name": "external_accounts",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Account External Account",
													"id": "8ffad85a-92d0-4ceb-a20c-1a7412dcfe90",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to be deleted."
																}
															]
														}
													},
													"response": [
														{
															"id": "ef20e6a4-3e5c-449f-85b6-56bcdd7918d7",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to be deleted."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"currency\": \"<string>\"\n}"
														},
														{
															"id": "b965bedf-005c-4d73-a561-be092995044b",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to be deleted."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Account External Account",
													"id": "1399fbb7-a23b-44eb-801f-eab51daa188e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "ba155d4a-c06a-4086-b080-b0def6df3a23",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "45456efb-b14b-4b76-bac9-1c2bdebb8ee2",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Account External Account",
													"id": "2bf744ea-ac39-4e5e-95fc-c18f6050e5e9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "address_city",
																	"value": "minim dolor eu sed sint",
																	"description": "City/District/Suburb/Town/Village."
																},
																{
																	"key": "address_country",
																	"value": "proident ",
																	"description": "Billing address country, if provided when creating card."
																},
																{
																	"key": "address_line1",
																	"value": "non veniam est in in",
																	"description": "Address line 1 (Street address/PO Box/Company name)."
																},
																{
																	"key": "address_line2",
																	"value": "laboris eiusmod deserunt",
																	"description": "Address line 2 (Apartment/Suite/Unit/Building)."
																},
																{
																	"key": "address_state",
																	"value": "cupidatat aut",
																	"description": "State/County/Province/Region."
																},
																{
																	"key": "address_zip",
																	"value": "reprehenderit officia laborum",
																	"description": "ZIP or postal code"
																},
																{
																	"key": "default_for_currency",
																	"value": "false",
																	"description": "When set to true, this becomes the default external account for its currency."
																},
																{
																	"key": "exp_month",
																	"value": "nisi do mollit incididunt",
																	"description": "Two digit number representing the card’s expiration month."
																},
																{
																	"key": "exp_year",
																	"value": "cupidatat tempor proident",
																	"description": "Four digit number representing the card’s expiration year."
																},
																{
																	"key": "expand[0]",
																	"value": "ea irure",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "dolore",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "name",
																	"value": "sed elit in",
																	"description": "Cardholder name."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the external account to update"
																}
															]
														},
														"description": "<p>Updates the metadata of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p><p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>"
													},
													"response": [
														{
															"id": "77d6ff57-c45d-4207-873c-e60a562ea18d",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "When set to true, this becomes the default external account for its currency.",
																			"key": "default_for_currency",
																			"value": "<boolean>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to update"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "9daa0bcf-8a9d-4417-8ab2-5079e3060754",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "When set to true, this becomes the default external account for its currency.",
																			"key": "default_for_currency",
																			"value": "<boolean>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account",
																		"external_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "account",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) The ID of the external account to update"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "46d24c7e-1571-481a-8306-53fe47bc235a"
										},
										{
											"name": "All Account External Accounts",
											"id": "e9838765-f4a1-4e55-87a2-35f0ad0f41a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"external_accounts"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ff23961d-0974-42a4-bf25-dec0dc734a3a",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tokenization_method\": \"<string>\"\n    },\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tokenization_method\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "913bcffe-1562-4283-b533-48be8da2f22a",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Account External Account",
											"id": "f548f80c-54c5-4c13-9cb4-08dec973e046",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "default_for_currency",
															"value": "false",
															"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency."
														},
														{
															"key": "expand[0]",
															"value": "ullamco magna Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "eu adipisicing incididunt tempor",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"external_accounts"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "a208e2cd-b523-498c-84b4-64178e783110",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "20832938-61c9-4456-81a2-971df1ed8143",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency.",
																	"key": "default_for_currency",
																	"value": "<boolean>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account/external_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account",
																"external_accounts"
															],
															"variable": [
																{
																	"key": "account",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "0913cab6-1276-4a8e-be07-9b40c1004517"
								},
								{
									"name": "Account Delete",
									"id": "ba06549f-2a83-48f0-8a04-1419813375f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account"
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
												}
											]
										},
										"description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p><p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p><p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>"
									},
									"response": [
										{
											"id": "f7d39363-34a1-409a-ba8c-bd1ad724c093",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "bb8f558d-5da9-44c6-ab32-0531f9b77555",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to be deleted. If none is provided, will default to the account of the API key."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Account Retrieve",
									"id": "1cb35548-99a1-48ad-a1db-75ba0a2bdab8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the account to retrieve. If none is provided, the account associated with the API key is returned."
												}
											]
										},
										"description": "<p>Retrieves the details of the account.</p>"
									},
									"response": [
										{
											"id": "cb77746e-8a98-4d06-bc27-e2b5dc19c059",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to retrieve. If none is provided, the account associated with the API key is returned."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
										},
										{
											"id": "2bba0463-be43-4770-89a3-a57a99ba12fb",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to retrieve. If none is provided, the account associated with the API key is returned."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Account Update",
									"id": "5354afb3-3612-4b0c-afb2-1e9cc58af2d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_token",
													"value": "veniam in ut nulla"
												},
												{
													"key": "business_logo",
													"value": "anim sint Duis",
													"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)"
												},
												{
													"key": "business_name",
													"value": "commodo dolore quis",
													"description": "The publicly sharable name for this account."
												},
												{
													"key": "business_primary_color",
													"value": "labore aliquip",
													"description": "A CSS hex color value representing the primary branding color for this account."
												},
												{
													"key": "business_url",
													"value": "id Excepteur velit",
													"description": "The URL that best shows the service or product provided by this account."
												},
												{
													"key": "debit_negative_balances",
													"value": "true",
													"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances)."
												},
												{
													"key": "decline_charge_on[avs_failure]",
													"value": "",
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
												},
												{
													"key": "decline_charge_on[cvc_failure]",
													"value": "",
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
												},
												{
													"key": "default_currency",
													"value": "commodo aute sint",
													"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts)."
												},
												{
													"key": "email",
													"value": "laboris culpa et incididunt Duis",
													"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative."
												},
												{
													"key": "expand[0]",
													"value": "anim irure enim consectetur laborum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis adipisicing",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][first_name]",
													"value": "sunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][last_name]",
													"value": "ex velit officia aliquip",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][maiden_name]",
													"value": "laborum ex dolor nulla ea",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][personal_id_number]",
													"value": "esse officia",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][irure_6d][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][first_name]",
													"value": "in fugiat",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][last_name]",
													"value": "mollit velit",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][maiden_name]",
													"value": "laborum sed consectetur amet",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][personal_id_number]",
													"value": "eiusmod consequat sit ex",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[additional_owners][velitac][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][city]",
													"value": "non dol",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][country]",
													"value": "fugiat ad do",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][line1]",
													"value": "in officia veniam aliquip",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][line2]",
													"value": "in",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][postal_code]",
													"value": "laborum aute Ut",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address][state]",
													"value": "pariatur sunt officia esse",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][city]",
													"value": "amet labore incididunt cillum",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][country]",
													"value": "sed quis",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][line1]",
													"value": "sed aliquip do",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][line2]",
													"value": "ut minim",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][postal_code]",
													"value": "Duis consectetur deserunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][state]",
													"value": "Duis sed minim ipsum ea",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kana][town]",
													"value": "amet",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][city]",
													"value": "occaecat in ex in",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][country]",
													"value": "cupidatat laborum anim velit ipsum",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][line1]",
													"value": "quis in consequat proident",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][line2]",
													"value": "in Duis ei",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][postal_code]",
													"value": "in nisi voluptate fugiat enim",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][state]",
													"value": "reprehenderit officia nisi anim",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[address_kanji][town]",
													"value": "minim in",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[business_name]",
													"value": "velit culpa",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[business_name_kana]",
													"value": "dolor nostrud id ullamco",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[business_name_kanji]",
													"value": "Ut ut in Excepteur",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[business_tax_id]",
													"value": "pariatur reprehenderit ut",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[business_vat_id]",
													"value": "ea labore velit",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[dob][day]",
													"value": "61568430",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[dob][month]",
													"value": "52667920",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[dob][year]",
													"value": "-24993017",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[first_name]",
													"value": "sed velit eiusmod sunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[first_name_kana]",
													"value": "dolore dolore",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[first_name_kanji]",
													"value": "enim ut commodo cupidatat",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[gender]",
													"value": "aliquip minim deserunt adipisicing",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[last_name]",
													"value": "Ut adipisicing dolor quis ",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[last_name_kana]",
													"value": "aliquip amet pariatur sed",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[last_name_kanji]",
													"value": "veniam deserunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[maiden_name]",
													"value": "incididunt consequat mollit",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][city]",
													"value": "dolor sit elit dolor quis",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][country]",
													"value": "sunt dolor",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][line1]",
													"value": "do quis cillum",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][line2]",
													"value": "fugiat sed in in",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][postal_code]",
													"value": "voluptate Ut eiusmod",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address][state]",
													"value": "eiusmod sunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][city]",
													"value": "dolore occaecat incididunt ipsum",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][country]",
													"value": "nisi",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][line1]",
													"value": "velit dolor qui",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][line2]",
													"value": "sunt",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][postal_code]",
													"value": "minim ",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][state]",
													"value": "dolore aliqua",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kana][town]",
													"value": "ipsum tempor ut est",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][city]",
													"value": "minim Lorem",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][country]",
													"value": "amet ad",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][line1]",
													"value": "officia eu",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][line2]",
													"value": "Ut",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][postal_code]",
													"value": "non fugiat",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][state]",
													"value": "nostrud ut",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_address_kanji][town]",
													"value": "anim dolor veniam mollit Duis",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[personal_id_number]",
													"value": "minim dolore",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[phone_number]",
													"value": "ipsum ut",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[ssn_last_4]",
													"value": "id sint",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[tax_id_registrar]",
													"value": "consec",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[type]",
													"value": "nulla esse in incididunt sint",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "legal_entity[verification][document]",
													"value": "reprehenderit eiusmod elit",
													"description": "Information about the legal entity itself, including information about the associated account representative."
												},
												{
													"key": "payout_schedule[delay_days]",
													"value": "46716770",
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
												},
												{
													"key": "payout_schedule[interval]",
													"value": "daily",
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
												},
												{
													"key": "payout_schedule[monthly_anchor]",
													"value": "-15873944",
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
												},
												{
													"key": "payout_schedule[weekly_anchor]",
													"value": "thursday",
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
												},
												{
													"key": "payout_statement_descriptor",
													"value": "sit",
													"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard."
												},
												{
													"key": "product_description",
													"value": "irure consequat amet",
													"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes."
												},
												{
													"key": "statement_descriptor",
													"value": "magna occaecat deserunt laborum",
													"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)"
												},
												{
													"key": "support_email",
													"value": "dolore",
													"description": "A publicly shareable support email address for the business."
												},
												{
													"key": "support_phone",
													"value": "consequ",
													"description": "A publicly shareable support phone number for the business."
												},
												{
													"key": "support_url",
													"value": "irure",
													"description": "A publicly shareable URL that provides support for this account."
												},
												{
													"key": "tos_acceptance[date]",
													"value": "-89745767",
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
												},
												{
													"key": "tos_acceptance[ip]",
													"value": "anim ut cillum est",
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
												},
												{
													"key": "tos_acceptance[user_agent]",
													"value": "magna fugiat qui incididunt sunt",
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account"
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p><p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>"
									},
									"response": [
										{
											"id": "8cd7462e-bbeb-4de4-bb94-e81415493122",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "account_token",
															"value": "<string>"
														},
														{
															"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
															"key": "business_logo",
															"value": "<string>"
														},
														{
															"description": "The publicly sharable name for this account.",
															"key": "business_name",
															"value": "<string>"
														},
														{
															"description": "A CSS hex color value representing the primary branding color for this account.",
															"key": "business_primary_color",
															"value": "<string>"
														},
														{
															"description": "The URL that best shows the service or product provided by this account.",
															"key": "business_url",
															"value": "<string>"
														},
														{
															"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
															"key": "debit_negative_balances",
															"value": "<boolean>"
														},
														{
															"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
															"key": "decline_charge_on[avs_failure]",
															"value": "<boolean>"
														},
														{
															"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
															"key": "decline_charge_on[cvc_failure]",
															"value": "<boolean>"
														},
														{
															"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
															"key": "default_currency",
															"value": "<string>"
														},
														{
															"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][city][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][country][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][line1][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][line2][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][postal_code][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][address][state][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][dob][day][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][dob][month][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][dob][year][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][first_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][last_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][maiden_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][personal_id_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][quia85][verification][document][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_tax_id]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_vat_id]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][day]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][month]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][year]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[gender]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[maiden_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_id_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[phone_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[ssn_last_4]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[tax_id_registrar]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[type]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[verification][document]",
															"value": "<string>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[delay_days]",
															"value": "<integer>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[interval]",
															"value": "<string>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[monthly_anchor]",
															"value": "<integer>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[weekly_anchor]",
															"value": "<string>"
														},
														{
															"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
															"key": "payout_statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
															"key": "product_description",
															"value": "<string>"
														},
														{
															"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable support email address for the business.",
															"key": "support_email",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable support phone number for the business.",
															"key": "support_phone",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable URL that provides support for this account.",
															"key": "support_url",
															"value": "<string>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[date]",
															"value": "<unix-time>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[ip]",
															"value": "<string>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[user_agent]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
										},
										{
											"id": "6ba82e3d-4426-484b-814f-d8212aec8a6b",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "account_token",
															"value": "<string>"
														},
														{
															"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
															"key": "business_logo",
															"value": "<string>"
														},
														{
															"description": "The publicly sharable name for this account.",
															"key": "business_name",
															"value": "<string>"
														},
														{
															"description": "A CSS hex color value representing the primary branding color for this account.",
															"key": "business_primary_color",
															"value": "<string>"
														},
														{
															"description": "The URL that best shows the service or product provided by this account.",
															"key": "business_url",
															"value": "<string>"
														},
														{
															"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
															"key": "debit_negative_balances",
															"value": "<boolean>"
														},
														{
															"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
															"key": "decline_charge_on[avs_failure]",
															"value": "<boolean>"
														},
														{
															"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
															"key": "decline_charge_on[cvc_failure]",
															"value": "<boolean>"
														},
														{
															"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
															"key": "default_currency",
															"value": "<string>"
														},
														{
															"description": "Email address of the account representative. For Standard accounts, this is used to ask them to claim their Stripe account. For Custom accounts, this only makes the account easier to identify to platforms; Stripe does not email the account representative.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][city][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][country][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][line1][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][line2][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][postal_code][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][address][state][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][dob][day][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][dob][month][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][dob][year][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][first_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][last_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][maiden_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][personal_id_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][anim_6][verification][document][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][city][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][country][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][line1][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][line2][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][postal_code][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][address][state][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][dob][day][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][dob][month][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][dob][year][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][first_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][last_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][maiden_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][personal_id_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[additional_owners][consequat_f1_][verification][document][value]",
															"value": "<Error: Too many levels of nesting to fake this schema>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kana][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[address_kanji][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_tax_id]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[business_vat_id]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][day]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][month]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[dob][year]",
															"value": "<integer>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[first_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[gender]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name_kana]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[last_name_kanji]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[maiden_name]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kana][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_address_kanji][town]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[personal_id_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[phone_number]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[ssn_last_4]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[tax_id_registrar]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[type]",
															"value": "<string>"
														},
														{
															"description": "Information about the legal entity itself, including information about the associated account representative.",
															"key": "legal_entity[verification][document]",
															"value": "<string>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[delay_days]",
															"value": "<integer>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[interval]",
															"value": "<string>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[monthly_anchor]",
															"value": "<integer>"
														},
														{
															"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
															"key": "payout_schedule[weekly_anchor]",
															"value": "<string>"
														},
														{
															"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
															"key": "payout_statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
															"key": "product_description",
															"value": "<string>"
														},
														{
															"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable support email address for the business.",
															"key": "support_email",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable support phone number for the business.",
															"key": "support_phone",
															"value": "<string>"
														},
														{
															"description": "A publicly shareable URL that provides support for this account.",
															"key": "support_url",
															"value": "<string>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[date]",
															"value": "<unix-time>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[ip]",
															"value": "<string>"
														},
														{
															"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
															"key": "tos_acceptance[user_agent]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Login Link Create",
									"id": "af455972-7042-446e-b3cb-25f36bea664e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "incididunt anim",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "laboris dolore aute veniam Excepteur",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "redirect_url",
													"value": "exercitation est pariatur nostrud eiusmod",
													"description": "Where to redirect the user after they log out of their dashboard."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account/login_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account",
												"login_links"
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the account to create a login link for."
												}
											]
										},
										"description": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p><p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>"
									},
									"response": [
										{
											"id": "006f0353-da23-490a-9597-7e72ba0bb19b",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Where to redirect the user after they log out of their dashboard.",
															"key": "redirect_url",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/login_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"login_links"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to create a login link for."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "28350cf2-6c08-43b7-a53e-51f93c4aab4f",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Where to redirect the user after they log out of their dashboard.",
															"key": "redirect_url",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/login_links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"login_links"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to create a login link for."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Light Account Logout",
									"id": "d2ab794c-b1d1-43d6-a4f8-9a89b9c8ffd0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account",
												"logout"
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the account to log out."
												}
											]
										},
										"description": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p><p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>"
									},
									"response": [
										{
											"id": "051c9aa4-2167-4aaf-a58d-7a37b96aba9b",
											"name": "Successful response.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"logout"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to log out."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "e0843e28-627e-4f95-86d5-b0c99fd033aa",
											"name": "Error response.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"logout"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to log out."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Account Reject",
									"id": "cc2fec7f-918b-4d44-a2f3-822690263223",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "ex commodo in",
													"description": "(Required) The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`."
												},
												{
													"key": "expand[0]",
													"value": "velit dolor Dui",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "culpa velit officia eu",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account",
												"reject"
											],
											"variable": [
												{
													"key": "account",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the account to reject"
												}
											]
										},
										"description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may flag accounts as suspicious.</p><p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>"
									},
									"response": [
										{
											"id": "51e5d133-f27d-48cf-b8b4-2b42da25ee60",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.",
															"key": "reason",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"reject"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to reject"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
										},
										{
											"id": "d0672503-051d-4fc3-9c04-d2336d448b1d",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.",
															"key": "reason",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account",
														"reject"
													],
													"variable": [
														{
															"key": "account",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the account to reject"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "37bbe62b-15ca-4d38-9565-318085f05772"
						},
						{
							"name": "All Account",
							"id": "c830a4b5-38ab-46ed-96fa-9847bf3d282e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/accounts?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"accounts"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>"
							},
							"response": [
								{
									"id": "191454ab-452c-42e8-9109-285cf4288483",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"application_icon\": \"<string>\",\n      \"application_logo\": \"<string>\",\n      \"application_name\": \"<string>\",\n      \"application_url\": \"<string>\",\n      \"business_logo\": \"<string>\",\n      \"business_name\": \"<string>\",\n      \"business_url\": \"<string>\",\n      \"charges_enabled\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"debit_negative_balances\": \"<boolean>\",\n      \"decline_charge_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_currency\": \"<string>\",\n      \"details_submitted\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_accounts\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"keys\": \"<object>\",\n      \"legal_entity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"payout_schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payout_statement_descriptor\": \"<string>\",\n      \"payouts_enabled\": \"<boolean>\",\n      \"product_description\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"support_phone\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"tos_acceptance\": {\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"user_agent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"type\": \"<string>\",\n      \"verification\": {\n        \"fields_needed\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"disabled_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"due_by\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"application_icon\": \"<string>\",\n      \"application_logo\": \"<string>\",\n      \"application_name\": \"<string>\",\n      \"application_url\": \"<string>\",\n      \"business_logo\": \"<string>\",\n      \"business_name\": \"<string>\",\n      \"business_url\": \"<string>\",\n      \"charges_enabled\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"debit_negative_balances\": \"<boolean>\",\n      \"decline_charge_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_currency\": \"<string>\",\n      \"details_submitted\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_accounts\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"keys\": \"<object>\",\n      \"legal_entity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"payout_schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payout_statement_descriptor\": \"<string>\",\n      \"payouts_enabled\": \"<boolean>\",\n      \"product_description\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"support_phone\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"tos_acceptance\": {\n        \"date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"user_agent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"type\": \"<string>\",\n      \"verification\": {\n        \"fields_needed\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"disabled_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"due_by\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "ca0d10cf-f44d-4603-b198-8e9335587e3d",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Account Create",
							"id": "ec5efdd8-aeab-4641-8159-091a401e41de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_token",
											"value": "magna Ut commodo exercitation ad"
										},
										{
											"key": "business_logo",
											"value": "ut pariatur Excepteur Lorem",
											"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)"
										},
										{
											"key": "business_name",
											"value": "in quis ut tempor commodo",
											"description": "The publicly sharable name for this account."
										},
										{
											"key": "business_primary_color",
											"value": "esse dolore",
											"description": "A CSS hex color value representing the primary branding color for this account."
										},
										{
											"key": "business_url",
											"value": "sit",
											"description": "The URL that best shows the service or product provided by this account."
										},
										{
											"key": "country",
											"value": "commodo velit",
											"description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created."
										},
										{
											"key": "debit_negative_balances",
											"value": "true",
											"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances)."
										},
										{
											"key": "decline_charge_on[avs_failure]",
											"value": "true",
											"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
										},
										{
											"key": "decline_charge_on[cvc_failure]",
											"value": "",
											"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision."
										},
										{
											"key": "default_currency",
											"value": "velit in",
											"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts)."
										},
										{
											"key": "email",
											"value": "elit aute proident labore",
											"description": "The email address of the account holder. For Standard accounts, Stripe will email your user with instructions on how to set up their account. For Custom accounts, this is only to make the account easier to identify to you: Stripe will never directly email your users."
										},
										{
											"key": "expand[0]",
											"value": "in amet ad eu",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in ullamco",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "from_recipient",
											"value": "sit ad"
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][city][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][country][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][line1][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][line2][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][postal_code][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][address][state][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][dob][day][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][dob][month][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][dob][year][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][first_name]",
											"value": "do ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][last_name]",
											"value": "nisi dolor anim",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][maiden_name]",
											"value": "esse veniam",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][personal_id_number]",
											"value": "nulla adipisicing",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][reprehenderit_e][verification][document][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][city][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][country][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][line1][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][line2][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][postal_code][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][address][state][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][dob][day][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][dob][month][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][dob][year][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][first_name]",
											"value": "pariatur esse culpa",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][last_name]",
											"value": "aute deserunt",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][maiden_name]",
											"value": "in reprehenderit consequat ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][personal_id_number]",
											"value": "esse minim ipsum reprehenderit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[additional_owners][ut_9ad][verification][document][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][city]",
											"value": "quis sunt",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][country]",
											"value": "non amet dolore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][line1]",
											"value": "qui",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][line2]",
											"value": "aliqua sunt cillum Lorem",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][postal_code]",
											"value": "amet quis ex",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address][state]",
											"value": "sit ad Ut ea",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][city]",
											"value": "commodo",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][country]",
											"value": "sed irure deserunt",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][line1]",
											"value": "irure labore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][line2]",
											"value": "dolore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][postal_code]",
											"value": "ea aute voluptate est Excepteur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][state]",
											"value": "adipisicing ut pariatur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kana][town]",
											"value": "elit sit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][city]",
											"value": "cupidatat dolor do cillum",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][country]",
											"value": "elit dolore consectetur",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][line1]",
											"value": "enim Ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][line2]",
											"value": "ut sunt consectetur aliqua",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][postal_code]",
											"value": "sed",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][state]",
											"value": "cillum ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[address_kanji][town]",
											"value": "ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name]",
											"value": "ad",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name_kana]",
											"value": "eiusmod Lorem ",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_name_kanji]",
											"value": "nulla reprehenderit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_tax_id]",
											"value": "do adipisi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[business_vat_id]",
											"value": "incididunt irure fugiat ea",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][day]",
											"value": "65715296",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][month]",
											"value": "86341498",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[dob][year]",
											"value": "58528892",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name]",
											"value": "amet cupidatat magna ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name_kana]",
											"value": "ess",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[first_name_kanji]",
											"value": "exercitation laboris",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[gender]",
											"value": "ea adipisicing aute dolore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name]",
											"value": "amet sunt commodo et",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name_kana]",
											"value": "Lorem mollit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[last_name_kanji]",
											"value": "magna veniam laboris in voluptate",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[maiden_name]",
											"value": "sunt commodo",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][city]",
											"value": "pariatur ea dolor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][country]",
											"value": "no",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][line1]",
											"value": "ipsum velit occaecat dolor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][line2]",
											"value": "minim amet ex",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][postal_code]",
											"value": "cillum dolor dolore ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address][state]",
											"value": "laboris labore elit sint proident",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][city]",
											"value": "commodo culpa laboris dolore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][country]",
											"value": "do exercitation ut ullamco enim",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][line1]",
											"value": "deserunt mollit proi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][line2]",
											"value": "anim commodo occaecat ",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][postal_code]",
											"value": "do ut in ad eu",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][state]",
											"value": "proident et",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kana][town]",
											"value": "laboris ex consectetur sint Lorem",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][city]",
											"value": "adipisicing in sint tempor",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][country]",
											"value": "aliquip reprehenderi",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][line1]",
											"value": "ullamco enim sunt incididunt",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][line2]",
											"value": "culpa eu ",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][postal_code]",
											"value": "culpa minim aute esse",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][state]",
											"value": "ipsum proident commodo labore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_address_kanji][town]",
											"value": "mollit elit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[personal_id_number]",
											"value": "Ut",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[phone_number]",
											"value": "ut magna labore est",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[ssn_last_4]",
											"value": "proident sit",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[tax_id_registrar]",
											"value": "occaecat dolore",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[type]",
											"value": "in",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "legal_entity[verification][document]",
											"value": "esse incididunt laborum",
											"description": "Information about the legal entity itself, including information about the associated account representative."
										},
										{
											"key": "payout_schedule[delay_days]",
											"value": "40537686",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[interval]",
											"value": "four_times_monthly",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[monthly_anchor]",
											"value": "-18767614",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_schedule[weekly_anchor]",
											"value": "tuesday",
											"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation."
										},
										{
											"key": "payout_statement_descriptor",
											"value": "nostrud ut anim",
											"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard."
										},
										{
											"key": "product_description",
											"value": "occaecat quis",
											"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes."
										},
										{
											"key": "statement_descriptor",
											"value": "laboris esse fugiat ullamco",
											"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)"
										},
										{
											"key": "support_email",
											"value": "qui Lorem",
											"description": "A publicly shareable support email address for the business."
										},
										{
											"key": "support_phone",
											"value": "mollit",
											"description": "A publicly shareable support phone number for the business."
										},
										{
											"key": "support_url",
											"value": "reprehenderit",
											"description": "A publicly shareable URL that provides support for this account."
										},
										{
											"key": "tos_acceptance[date]",
											"value": "-47026317",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										},
										{
											"key": "tos_acceptance[ip]",
											"value": "irure",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										},
										{
											"key": "tos_acceptance[user_agent]",
											"value": "tempor cupidatat dolore",
											"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance)."
										},
										{
											"key": "type",
											"value": "custom",
											"description": "Whether you'd like to create a [Standard or Custom](/docs/connect/accounts) account. Standard accounts are normal Stripe accounts: Stripe will email the account holder to set up a username and password, and will handle all account management directly with them. Custom accounts have extra parameters available to them, and require that you, the platform, handle all communication with the account holder. Possible values are `standard` and `custom`."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"accounts"
									]
								},
								"description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.To do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p><p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and <code>type</code>are used to prefill the account application that we ask the account holder to complete.</p>"
							},
							"response": [
								{
									"id": "4e9f734c-2a6e-42f8-9e14-0a3d6e82482c",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_token",
													"value": "<string>"
												},
												{
													"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
													"key": "business_logo",
													"value": "<string>"
												},
												{
													"description": "The publicly sharable name for this account.",
													"key": "business_name",
													"value": "<string>"
												},
												{
													"description": "A CSS hex color value representing the primary branding color for this account.",
													"key": "business_primary_color",
													"value": "<string>"
												},
												{
													"description": "The URL that best shows the service or product provided by this account.",
													"key": "business_url",
													"value": "<string>"
												},
												{
													"description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created.",
													"key": "country",
													"value": "<string>"
												},
												{
													"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
													"key": "debit_negative_balances",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[avs_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[cvc_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
													"key": "default_currency",
													"value": "<string>"
												},
												{
													"description": "The email address of the account holder. For Standard accounts, Stripe will email your user with instructions on how to set up their account. For Custom accounts, this is only to make the account easier to identify to you: Stripe will never directly email your users.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "from_recipient",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][consectetur_7][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][amet_001][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][irurea7][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][day]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][month]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][year]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[gender]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[phone_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[type]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[verification][document]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[delay_days]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[interval]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[monthly_anchor]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[weekly_anchor]",
													"value": "<string>"
												},
												{
													"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
													"key": "payout_statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
													"key": "product_description",
													"value": "<string>"
												},
												{
													"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support email address for the business.",
													"key": "support_email",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support phone number for the business.",
													"key": "support_phone",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable URL that provides support for this account.",
													"key": "support_url",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[date]",
													"value": "<unix-time>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[ip]",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[user_agent]",
													"value": "<string>"
												},
												{
													"description": "Whether you'd like to create a [Standard or Custom](/docs/connect/accounts) account. Standard accounts are normal Stripe accounts: Stripe will email the account holder to set up a username and password, and will handle all account management directly with them. Custom accounts have extra parameters available to them, and require that you, the platform, handle all communication with the account holder. Possible values are `standard` and `custom`.",
													"key": "type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"application_icon\": \"<string>\",\n  \"application_logo\": \"<string>\",\n  \"application_name\": \"<string>\",\n  \"application_url\": \"<string>\",\n  \"business_logo\": \"<string>\",\n  \"business_name\": \"<string>\",\n  \"business_url\": \"<string>\",\n  \"charges_enabled\": \"<boolean>\",\n  \"country\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"debit_negative_balances\": \"<boolean>\",\n  \"decline_charge_on\": {\n    \"avs_failure\": \"<boolean>\",\n    \"cvc_failure\": \"<boolean>\"\n  },\n  \"default_currency\": \"<string>\",\n  \"details_submitted\": \"<boolean>\",\n  \"display_name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_accounts\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"keys\": \"<object>\",\n  \"legal_entity\": {\n    \"additional_owners\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_name_kana\": \"<string>\",\n    \"business_name_kanji\": \"<string>\",\n    \"business_tax_id_provided\": \"<boolean>\",\n    \"business_vat_id_provided\": \"<boolean>\",\n    \"dob\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"first_name\": \"<string>\",\n    \"first_name_kana\": \"<string>\",\n    \"first_name_kanji\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"last_name_kana\": \"<string>\",\n    \"last_name_kanji\": \"<string>\",\n    \"maiden_name\": \"<string>\",\n    \"personal_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kana\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_address_kanji\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"personal_id_number_provided\": \"<boolean>\",\n    \"phone_number\": \"<string>\",\n    \"ssn_last_4_provided\": \"<boolean>\",\n    \"tax_id_registrar\": \"<string>\",\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": \"<object>\",\n  \"payout_schedule\": {\n    \"delay_days\": \"<integer>\",\n    \"interval\": \"<string>\",\n    \"monthly_anchor\": \"<integer>\",\n    \"weekly_anchor\": \"<string>\"\n  },\n  \"payout_statement_descriptor\": \"<string>\",\n  \"payouts_enabled\": \"<boolean>\",\n  \"product_description\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"support_email\": \"<string>\",\n  \"support_phone\": \"<string>\",\n  \"timezone\": \"<string>\",\n  \"tos_acceptance\": {\n    \"date\": \"<unix-time>\",\n    \"ip\": \"<string>\",\n    \"user_agent\": \"<string>\"\n  },\n  \"type\": \"<string>\",\n  \"verification\": {\n    \"fields_needed\": [],\n    \"disabled_reason\": \"<string>\",\n    \"due_by\": \"<unix-time>\"\n  }\n}"
								},
								{
									"id": "d7394024-f928-420d-a6dc-9fbf6869e08d",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_token",
													"value": "<string>"
												},
												{
													"description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for this account (at least 128px x 128px)",
													"key": "business_logo",
													"value": "<string>"
												},
												{
													"description": "The publicly sharable name for this account.",
													"key": "business_name",
													"value": "<string>"
												},
												{
													"description": "A CSS hex color value representing the primary branding color for this account.",
													"key": "business_primary_color",
													"value": "<string>"
												},
												{
													"description": "The URL that best shows the service or product provided by this account.",
													"key": "business_url",
													"value": "<string>"
												},
												{
													"description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created.",
													"key": "country",
													"value": "<string>"
												},
												{
													"description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](/docs/connect/account-balances).",
													"key": "debit_negative_balances",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[avs_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Account-level settings to automatically decline certain types of charges, regardless of the card issuer's decision.",
													"key": "decline_charge_on[cvc_failure]",
													"value": "<boolean>"
												},
												{
													"description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
													"key": "default_currency",
													"value": "<string>"
												},
												{
													"description": "The email address of the account holder. For Standard accounts, Stripe will email your user with instructions on how to set up their account. For Custom accounts, this is only to make the account easier to identify to you: Stripe will never directly email your users.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "from_recipient",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][sunt7][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][quis_db][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][city][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][country][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][line1][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][line2][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][postal_code][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][address][state][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][dob][day][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][dob][month][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][dob][year][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[additional_owners][nisi_8][verification][document][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][day]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][month]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[dob][year]",
													"value": "<integer>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[gender]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[maiden_name]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[phone_number]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[type]",
													"value": "<string>"
												},
												{
													"description": "Information about the legal entity itself, including information about the associated account representative.",
													"key": "legal_entity[verification][document]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[delay_days]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[interval]",
													"value": "<string>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[monthly_anchor]",
													"value": "<integer>"
												},
												{
													"description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](/docs/connect/bank-transfers#payout-information) documentation.",
													"key": "payout_schedule[weekly_anchor]",
													"value": "<string>"
												},
												{
													"description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
													"key": "payout_statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
													"key": "product_description",
													"value": "<string>"
												},
												{
													"description": "The default text that appears on credit card statements when a charge is made [directly on the account](/docs/connect/direct-charges)",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support email address for the business.",
													"key": "support_email",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable support phone number for the business.",
													"key": "support_phone",
													"value": "<string>"
												},
												{
													"description": "A publicly shareable URL that provides support for this account.",
													"key": "support_url",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[date]",
													"value": "<unix-time>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[ip]",
													"value": "<string>"
												},
												{
													"description": "Details on the account's acceptance of the [Stripe Services Agreement](/docs/connect/updating-accounts#tos-acceptance).",
													"key": "tos_acceptance[user_agent]",
													"value": "<string>"
												},
												{
													"description": "Whether you'd like to create a [Standard or Custom](/docs/connect/accounts) account. Standard accounts are normal Stripe accounts: Stripe will email the account holder to set up a username and password, and will handle all account management directly with them. Custom accounts have extra parameters available to them, and require that you, the platform, handle all communication with the account holder. Possible values are `standard` and `custom`.",
													"key": "type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "b02c5081-d3c0-43f7-9c14-c2f6d6b902bb"
				},
				{
					"name": "apple_pay/domains",
					"item": [
						{
							"name": "{domain}",
							"item": [
								{
									"name": "Delete Apple Pay Domain",
									"id": "b877a502-2685-49d2-8fac-cbecfa5b60f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "2dc2aac6-1d5c-45f9-9dca-b8f18684a7c8",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"apple_pay",
														"domains",
														":domain"
													],
													"variable": [
														{
															"key": "domain",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "a6c8ad7b-7153-4e4a-a41f-583d3d322f11",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"apple_pay",
														"domains",
														":domain"
													],
													"variable": [
														{
															"key": "domain",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Apple Pay Domain",
									"id": "53592970-5444-43c4-9ade-21b431d1ec60",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains",
												":domain"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "domain",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "4078474a-7afe-477c-8017-6604eab8b383",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"apple_pay",
														"domains",
														":domain"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "domain",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"domain_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "eccc4666-c9d0-4b46-afd1-dd9265b973b8",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/apple_pay/domains/:domain?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"apple_pay",
														"domains",
														":domain"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "domain",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "a0dc130c-b7e2-4080-84a8-2458914fdbe8"
						},
						{
							"name": "All Apple Pay Domains",
							"id": "91822b74-6fc2-4a2e-9ec7-ccb7332486e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/apple_pay/domains?domain_name=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"apple_pay",
										"domains"
									],
									"query": [
										{
											"key": "domain_name",
											"value": "esse deserunt"
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								}
							},
							"response": [
								{
									"id": "67e62560-0d4d-465c-aee8-b479e1889207",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains?domain_name=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains"
											],
											"query": [
												{
													"key": "domain_name",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"domain_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"domain_name\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "d653cef7-3a28-49be-bd6e-1a671f5cb292",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains?domain_name=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains"
											],
											"query": [
												{
													"key": "domain_name",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Apple Pay Domain",
							"id": "69e5c59c-8baf-4075-b341-fa4ba6ea2153",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "domain_name",
											"value": "enim",
											"description": "(Required) "
										},
										{
											"key": "expand[0]",
											"value": "ex eu",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "ut",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/apple_pay/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"apple_pay",
										"domains"
									]
								}
							},
							"response": [
								{
									"id": "842e7a3d-4f9d-42eb-a24b-e1f771cb6ca7",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "domain_name",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"domain_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\"\n}"
								},
								{
									"id": "8d7baa0d-c28d-410f-9c8b-446bf31785bf",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "domain_name",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/apple_pay/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"apple_pay",
												"domains"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "b93a9e22-6e1c-4fc1-a2a9-7bebdb9f26fe"
				},
				{
					"name": "application_fees",
					"item": [
						{
							"name": "{fee}/refunds/{id}",
							"item": [
								{
									"name": "Retrieve Platform Earning Refund",
									"id": "80121881-ede0-4c8f-a75b-74f48dfbe513",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees",
												":fee",
												"refunds",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "fee",
													"value": "esse deserunt",
													"description": "(Required) ID of the application fee refunded."
												},
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) ID of refund to retrieve."
												}
											]
										},
										"description": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>"
									},
									"response": [
										{
											"id": "b8e63278-2578-413c-8733-4327230b6974",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":fee",
														"refunds",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fee",
															"value": "esse deserunt",
															"description": "(Required) ID of the application fee refunded."
														},
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"fee\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
										},
										{
											"id": "271c31a0-efad-4a54-a1dd-2c23fc023314",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":fee",
														"refunds",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fee",
															"value": "esse deserunt",
															"description": "(Required) ID of the application fee refunded."
														},
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Platform Earning Refund",
									"id": "6ea6be9b-b747-4c33-a87e-45eeeb61726a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "eiusmod Ut aliquip",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ad consectetur Lorem",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees",
												":fee",
												"refunds",
												":id"
											],
											"variable": [
												{
													"key": "fee",
													"value": "esse deserunt",
													"description": "(Required) ID of the application fee refunded."
												},
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) ID of refund to retrieve."
												}
											]
										},
										"description": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>This request only accepts metadata as an argument.</p>"
									},
									"response": [
										{
											"id": "f2d27f7d-0143-448c-a1b4-4a154789ebfa",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":fee",
														"refunds",
														":id"
													],
													"variable": [
														{
															"key": "fee",
															"value": "esse deserunt",
															"description": "(Required) ID of the application fee refunded."
														},
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"fee\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
										},
										{
											"id": "f03452ac-6be5-403b-b115-28ad56b52fbd",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:fee/refunds/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":fee",
														"refunds",
														":id"
													],
													"variable": [
														{
															"key": "fee",
															"value": "esse deserunt",
															"description": "(Required) ID of the application fee refunded."
														},
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "e4c222aa-71e9-4513-956b-b109f591a1ce"
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "refunds",
									"item": [
										{
											"name": "All Platform Earnings Refunds",
											"id": "112f913b-813e-41ec-b07d-8588d83a4a45",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id/refunds?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id",
														"refunds"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the application fee whose refunds will be retrieved."
														}
													]
												},
												"description": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>"
											},
											"response": [
												{
													"id": "7ea620d2-83f2-48be-8d49-0da28e5e3db5",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/application_fees/:id/refunds?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"application_fees",
																":id",
																"refunds"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the application fee whose refunds will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "a57b8529-be3b-4fac-8ee6-472846d4da98",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/application_fees/:id/refunds?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"application_fees",
																":id",
																"refunds"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the application fee whose refunds will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Platform Earning Refund",
											"id": "ed25b8ed-c8be-4608-a0dd-a81608ad7bd4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "50407074"
														},
														{
															"key": "directive",
															"value": "anim id consequat"
														},
														{
															"key": "expand[0]",
															"value": "laborum sunt consequat velit cillum",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "Duis Excepteur",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id/refunds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id",
														"refunds"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "df74c272-d3c9-400f-b47f-3c8910d19ba3",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amount",
																	"value": "<integer>"
																},
																{
																	"key": "directive",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/application_fees/:id/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"application_fees",
																":id",
																"refunds"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"fee\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
												},
												{
													"id": "ac63fd60-a65b-4108-bfc4-478e5d663fa2",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amount",
																	"value": "<integer>"
																},
																{
																	"key": "directive",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/application_fees/:id/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"application_fees",
																":id",
																"refunds"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "adc9d739-899d-4de8-8d3c-690c71c756cb"
								},
								{
									"name": "Retrieve Platform Earning",
									"id": "411ae19e-db31-4bb3-b461-759872a793c8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the fee to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>"
									},
									"response": [
										{
											"id": "16d587e4-5c0d-4796-9a30-491bf76b474a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the fee to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"originating_transaction\": \"<string>\"\n}"
										},
										{
											"id": "2bfed733-ebcb-4ec4-abf4-c0ab46767da2",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the fee to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Deprecated Create Refund Platform Earning",
									"id": "45ab49ad-3479-4da4-ba2c-e6774cfd3d37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "5436500"
												},
												{
													"key": "directive",
													"value": "adipisicing commodo nostrud"
												},
												{
													"key": "expand[0]",
													"value": "cillum veniam aliqua",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "voluptate nulla magna dolor",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees/:id/refund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees",
												":id",
												"refund"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "f26c6f6b-26dd-4759-a6f1-2fd339c9b515",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "<integer>"
														},
														{
															"key": "directive",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id/refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id",
														"refund"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"originating_transaction\": \"<string>\"\n}"
										},
										{
											"id": "3e4f6db0-2451-438a-b990-a819f17bbe56",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "<integer>"
														},
														{
															"key": "directive",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/application_fees/:id/refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"application_fees",
														":id",
														"refund"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "3549a388-38a9-4da0-a71c-1056b52d7de1"
						},
						{
							"name": "All Platform Earnings",
							"id": "bbaa686f-ac86-4008-8460-f963c73702dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/application_fees?charge=esse deserunt&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"application_fees"
									],
									"query": [
										{
											"key": "charge",
											"value": "esse deserunt",
											"description": "Only return application fees for the charge specified by this charge ID."
										},
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>"
							},
							"response": [
								{
									"id": "040e0a66-de22-4226-95ba-f6481b8a9626",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees?charge=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"account\": \"<string>\",\n      \"amount\": \"<integer>\",\n      \"amount_refunded\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"originating_transaction\": \"<string>\"\n    },\n    {\n      \"account\": \"<string>\",\n      \"amount\": \"<integer>\",\n      \"amount_refunded\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"originating_transaction\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "9c57f47c-57f8-4ef1-b3ca-ce3c07458c8a",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/application_fees?charge=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"application_fees"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "a583a3f7-f0d6-4137-9c7a-48579c7607ec"
				},
				{
					"name": "balance",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "All Balance Transactions",
									"id": "a7f331d1-6806-454b-9055-6ba1d6115663",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/balance/history?available_on[gt]=-13431299&available_on[gte]=48353647&available_on[lt]=-92044334&available_on[lte]=-79364890&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&currency=adipisicing incididunt esse&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&payout=esse deserunt&source=esse deserunt&starting_after=esse deserunt&type=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"balance",
												"history"
											],
											"query": [
												{
													"key": "available_on[gt]",
													"value": "-13431299"
												},
												{
													"key": "available_on[gte]",
													"value": "48353647"
												},
												{
													"key": "available_on[lt]",
													"value": "-92044334"
												},
												{
													"key": "available_on[lte]",
													"value": "-79364890"
												},
												{
													"key": "created[gt]",
													"value": "-13431299"
												},
												{
													"key": "created[gte]",
													"value": "48353647"
												},
												{
													"key": "created[lt]",
													"value": "-92044334"
												},
												{
													"key": "created[lte]",
													"value": "-79364890"
												},
												{
													"key": "currency",
													"value": "adipisicing incididunt esse"
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "payout",
													"value": "esse deserunt",
													"description": "For automatic Stripe payouts only, only returns transactions that were payed out on the specified payout ID."
												},
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "Only returns the original transaction."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "type",
													"value": "esse deserunt",
													"description": "Only returns transactions of the given type. One of: `charge`, `refund`, `adjustment`, `application_fee`, `application_fee_refund`, `transfer`, `payment`, `payout`, `payout_failure`, `stripe_fee`, or `network_cost`."
												}
											]
										},
										"description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>"
									},
									"response": [
										{
											"id": "a7f55659-c7fd-4a64-b005-aab85557b281",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/balance/history?available_on[gt]=<integer>&available_on[gte]=<integer>&available_on[lt]=<integer>&available_on[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&currency=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&payout=<string>&source=<string>&starting_after=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"balance",
														"history"
													],
													"query": [
														{
															"key": "available_on[gt]",
															"value": "<integer>"
														},
														{
															"key": "available_on[gte]",
															"value": "<integer>"
														},
														{
															"key": "available_on[lt]",
															"value": "<integer>"
														},
														{
															"key": "available_on[lte]",
															"value": "<integer>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "currency",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "payout",
															"value": "<string>"
														},
														{
															"key": "source",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "3234a207-3be0-4b12-9908-45dc9ec123f4",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/balance/history?available_on[gt]=<integer>&available_on[gte]=<integer>&available_on[lt]=<integer>&available_on[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&currency=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&payout=<string>&source=<string>&starting_after=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"balance",
														"history"
													],
													"query": [
														{
															"key": "available_on[gt]",
															"value": "<integer>"
														},
														{
															"key": "available_on[gte]",
															"value": "<integer>"
														},
														{
															"key": "available_on[lt]",
															"value": "<integer>"
														},
														{
															"key": "available_on[lte]",
															"value": "<integer>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "currency",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "payout",
															"value": "<string>"
														},
														{
															"key": "source",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Balance Transaction",
									"id": "cba6a4ad-91f2-49b0-a417-af99a2abf923",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/balance/history/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"balance",
												"history",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired balance transaction, as found on any API object that affects the balance (e.g., a charge or transfer)."
												}
											]
										},
										"description": "<p>Retrieves the balance transaction with the given ID.</p>"
									},
									"response": [
										{
											"id": "1d6c1a88-3a02-431e-b0f6-17cb69d2bdce",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/balance/history/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"balance",
														"history",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired balance transaction, as found on any API object that affects the balance (e.g., a charge or transfer)."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"available_on\": \"<unix-time>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"fee\": \"<integer>\",\n  \"fee_details\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"type\": \"<string>\",\n      \"application\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"type\": \"<string>\",\n      \"application\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"net\": \"<integer>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"exchange_rate\": \"<number>\",\n  \"source\": \"<string>\"\n}"
										},
										{
											"id": "5d1b3c88-c8b2-48d4-aadb-baf51a4eb718",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/balance/history/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"balance",
														"history",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired balance transaction, as found on any API object that affects the balance (e.g., a charge or transfer)."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "d5d6a255-f206-4e15-9901-30b9db18cac4"
						},
						{
							"name": "Balance Retrieve",
							"id": "651b0c02-476b-40f6-abf5-d87c588a580c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/balance?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"balance"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"description": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.</p>"
							},
							"response": [
								{
									"id": "8607672c-d953-4ee2-8b6e-c1ddf2fba574",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/balance?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"balance"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"available\": [],\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"pending\": []\n}"
								},
								{
									"id": "6e4142d7-620f-4d5b-b5da-d56e803cbfe3",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/balance?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"balance"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "5c66b229-9e9b-4075-9111-be8a6caa8e0a"
				},
				{
					"name": "bitcoin",
					"item": [
						{
							"name": "receivers",
							"item": [
								{
									"name": "Bitcoin All Receivers",
									"id": "e665e382-cb91-44b7-be85-9bf774945d9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bitcoin/receivers?active=false&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&filled=false&limit=66746697&starting_after=esse deserunt&uncaptured_funds=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bitcoin",
												"receivers"
											],
											"query": [
												{
													"key": "active",
													"value": "false",
													"description": "Filter for active receivers."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "filled",
													"value": "false",
													"description": "Filter for filled receivers."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "uncaptured_funds",
													"value": "true",
													"description": "Filter for receivers with uncaptured funds."
												}
											]
										},
										"description": "<p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>"
									},
									"response": [
										{
											"id": "8f96a71a-f919-4ec2-9bc8-66ae321d65d6",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers?active=<boolean>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&filled=<boolean>&limit=<integer>&starting_after=<string>&uncaptured_funds=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers"
													],
													"query": [
														{
															"key": "active",
															"value": "<boolean>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "filled",
															"value": "<boolean>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "uncaptured_funds",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"active\": \"<boolean>\",\n      \"amount\": \"<integer>\",\n      \"amount_received\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"bitcoin_amount_received\": \"<integer>\",\n      \"bitcoin_uri\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"filled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"inbound_address\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"uncaptured_funds\": \"<boolean>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"email\": \"<string>\",\n      \"payment\": \"<string>\",\n      \"refund_address\": \"<string>\",\n      \"transactions\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"used_for_payment\": \"<boolean>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"amount\": \"<integer>\",\n      \"amount_received\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"bitcoin_amount_received\": \"<integer>\",\n      \"bitcoin_uri\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"filled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"inbound_address\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"uncaptured_funds\": \"<boolean>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"email\": \"<string>\",\n      \"payment\": \"<string>\",\n      \"refund_address\": \"<string>\",\n      \"transactions\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"used_for_payment\": \"<boolean>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "b91f8ead-e65f-4208-bd76-a48376b8e31d",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers?active=<boolean>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&filled=<boolean>&limit=<integer>&starting_after=<string>&uncaptured_funds=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers"
													],
													"query": [
														{
															"key": "active",
															"value": "<boolean>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "filled",
															"value": "<boolean>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "uncaptured_funds",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Bitcoin Retrieve Receiver",
									"id": "153ce9f6-57d7-4700-a012-3f512673f364",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bitcoin/receivers/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bitcoin",
												"receivers",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Retrieves the Bitcoin receiver with the given ID.</p>"
									},
									"response": [
										{
											"id": "28fc3f9a-945d-464d-ac8e-d63b8a6b4659",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"amount\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"bitcoin_amount\": \"<integer>\",\n  \"bitcoin_amount_received\": \"<integer>\",\n  \"bitcoin_uri\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"filled\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"inbound_address\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"uncaptured_funds\": \"<boolean>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"email\": \"<string>\",\n  \"payment\": \"<string>\",\n  \"refund_address\": \"<string>\",\n  \"transactions\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bitcoin_amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receiver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bitcoin_amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receiver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"used_for_payment\": \"<boolean>\"\n}"
										},
										{
											"id": "3ff8b12a-8ece-4e5f-8ac4-2ba3df70b801",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Bitcoin All Transactions",
									"id": "0549124e-5032-4fe2-a3c2-18f94a4a762c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bitcoin/receivers/:receiver/transactions?customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bitcoin",
												"receivers",
												":receiver",
												"transactions"
											],
											"query": [
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "Only return transactions for the customer specified by this customer ID."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											],
											"variable": [
												{
													"key": "receiver",
													"value": "esse deserunt",
													"description": "(Required) Only return transactions for the receiver specified by this receiver ID."
												}
											]
										}
									},
									"response": [
										{
											"id": "b5ca4733-dcfe-4d6f-bc34-b9e86a3806a7",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers/:receiver/transactions?customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers",
														":receiver",
														"transactions"
													],
													"query": [
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "receiver",
															"value": "esse deserunt",
															"description": "(Required) Only return transactions for the receiver specified by this receiver ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"receiver\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"receiver\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "bb5817fc-9aef-4e28-b685-ad7ef5a3600b",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/bitcoin/receivers/:receiver/transactions?customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"bitcoin",
														"receivers",
														":receiver",
														"transactions"
													],
													"query": [
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "receiver",
															"value": "esse deserunt",
															"description": "(Required) Only return transactions for the receiver specified by this receiver ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "23e906a9-3e00-4b92-bfd7-1850c8c72806"
						},
						{
							"name": "Bitcoin All Transactions",
							"id": "2e333b22-31b6-4fb9-9ea4-9fdb333105b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/bitcoin/transactions?customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&receiver=esse deserunt&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bitcoin",
										"transactions"
									],
									"query": [
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "Only return transactions for the customer specified by this customer ID."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "receiver",
											"value": "esse deserunt",
											"description": "Only return transactions for the receiver specified by this receiver ID."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								}
							},
							"response": [
								{
									"id": "67c1f0d6-7cbd-4ff9-b762-a4844226c73a",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bitcoin/transactions?customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&receiver=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bitcoin",
												"transactions"
											],
											"query": [
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "receiver",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"receiver\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"bitcoin_amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"receiver\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "c20b04b5-86af-408f-bc39-c9feba6c96b5",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bitcoin/transactions?customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&receiver=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bitcoin",
												"transactions"
											],
											"query": [
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "receiver",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "e8b3b6cd-5353-435d-88d8-2a9593c45828"
				},
				{
					"name": "charges",
					"item": [
						{
							"name": "{charge}",
							"item": [
								{
									"name": "dispute",
									"item": [
										{
											"name": "Retrieve Charge Dispute",
											"id": "d4363028-9c7a-48ce-bb85-ce79424f0fee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/dispute?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"dispute"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "622b90af-4f64-466c-b05f-dd9ea31f2d5d",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
												},
												{
													"id": "87707a95-971d-4b02-bcb6-e490ee78d78e",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Charge Dispute",
											"id": "e48be7e0-e182-4009-81b4-d9dc05698bea",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "evidence[access_activity_log]",
															"value": "velit",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[billing_address]",
															"value": "velit proident",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[cancellation_policy]",
															"value": "culpa deseru",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[cancellation_policy_disclosure]",
															"value": "ut pariatur occaecat velit",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[cancellation_rebuttal]",
															"value": "cupidatat do",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[customer_communication]",
															"value": "dolore in la",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[customer_email_address]",
															"value": "sunt pariatur sint ipsum cupidatat",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[customer_name]",
															"value": "culpa Excepteur",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[customer_purchase_ip]",
															"value": "sint Lorem",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[customer_signature]",
															"value": "proident incididu",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[duplicate_charge_documentation]",
															"value": "ipsum officia",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[duplicate_charge_explanation]",
															"value": "deserunt",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[duplicate_charge_id]",
															"value": "magna cillum",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[product_description]",
															"value": "dolore anim",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[receipt]",
															"value": "cupidatat ",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[refund_policy]",
															"value": "Excepteur cupid",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[refund_policy_disclosure]",
															"value": "ex",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[refund_refusal_explanation]",
															"value": "cupidatat Ut",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[service_date]",
															"value": "aliqua aute do",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[service_documentation]",
															"value": "amet sunt tempor quis",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[shipping_address]",
															"value": "enim ex in velit",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[shipping_carrier]",
															"value": "sint ut",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[shipping_date]",
															"value": "ut dolor",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[shipping_documentation]",
															"value": "Ut consectetur in ex",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[shipping_tracking_number]",
															"value": "consectetur",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[uncategorized_file]",
															"value": "quis",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "evidence[uncategorized_text]",
															"value": "labore",
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
														},
														{
															"key": "expand[0]",
															"value": "culpa ad cillum",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "proident consectetur mollit deserunt",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "submit",
															"value": "true",
															"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default)."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/dispute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"dispute"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "201f42cb-b536-4bcd-9cda-f94b4a8cedde",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[access_activity_log]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[billing_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_policy]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_policy_disclosure]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_rebuttal]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_communication]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_email_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_name]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_purchase_ip]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_signature]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_explanation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_id]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[product_description]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[receipt]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_policy]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_policy_disclosure]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_refusal_explanation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[service_date]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[service_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_carrier]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_date]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_tracking_number]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[uncategorized_file]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[uncategorized_text]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
																	"key": "submit",
																	"value": "<boolean>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
												},
												{
													"id": "619b27dd-05cc-4050-a5f4-391d60d25b3c",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[access_activity_log]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[billing_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_policy]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_policy_disclosure]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[cancellation_rebuttal]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_communication]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_email_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_name]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_purchase_ip]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[customer_signature]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_explanation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[duplicate_charge_id]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[product_description]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[receipt]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_policy]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_policy_disclosure]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[refund_refusal_explanation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[service_date]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[service_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_address]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_carrier]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_date]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_documentation]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[shipping_tracking_number]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[uncategorized_file]",
																	"value": "<string>"
																},
																{
																	"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
																	"key": "evidence[uncategorized_text]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
																	"key": "submit",
																	"value": "<boolean>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Close Charge Dispute",
											"id": "d92d7dd1-e38d-41c1-95ae-5e56b3d6293a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "dolor",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "Duis in nostrud velit",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/dispute/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"dispute",
														"close"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "bcb40245-18a5-4c57-b8b0-4de90a8412e0",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute/close",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute",
																"close"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
												},
												{
													"id": "490686a0-9f07-4096-8896-fb16abdcc040",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/dispute/close",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"dispute",
																"close"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "8c3021b0-03ff-46c4-ac8c-6ba66f0355b0"
								},
								{
									"name": "refunds",
									"item": [
										{
											"name": "{refund}",
											"item": [
												{
													"name": "Retrieve Charge Refund",
													"id": "4586530d-5505-4a99-85e6-5b0c3f89b30a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds",
																":refund"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																},
																{
																	"key": "refund",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "78f4fd7e-114d-468a-85d4-290c0dde6a2a",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"charges",
																		":charge",
																		"refunds",
																		":refund"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "charge",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		},
																		{
																			"key": "refund",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
														},
														{
															"id": "39a1e071-c16d-4310-95d2-418d6f8efbe0",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"charges",
																		":charge",
																		"refunds",
																		":refund"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "charge",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		},
																		{
																			"key": "refund",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Charge Refund",
													"id": "867b0d15-b8ee-4371-8414-d5722ade5a6e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "expand[0]",
																	"value": "cupidatat",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "sint anim",
																	"description": "Specifies which fields in the response should be expanded."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds",
																":refund"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																},
																{
																	"key": "refund",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "834aeffd-8eb8-4850-94c8-e64c6d51f6cb",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"charges",
																		":charge",
																		"refunds",
																		":refund"
																	],
																	"variable": [
																		{
																			"key": "charge",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		},
																		{
																			"key": "refund",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
														},
														{
															"id": "c2ffbdf2-b3f9-4e43-a313-bd98e44cdb9e",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/charges/:charge/refunds/:refund",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"charges",
																		":charge",
																		"refunds",
																		":refund"
																	],
																	"variable": [
																		{
																			"key": "charge",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		},
																		{
																			"key": "refund",
																			"value": "adipisicing incididunt esse",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "5d551575-08aa-4c15-9af6-7154cbcf8b52"
										},
										{
											"name": "All Charge Refunds",
											"id": "b7846d26-32e1-4d3c-bf80-d231c80ed675",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/refunds?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"refunds"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "charge",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the charge whose refunds will be retrieved."
														}
													]
												},
												"description": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>"
											},
											"response": [
												{
													"id": "78d4d91a-4611-4023-b065-6624c80ab448",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the charge whose refunds will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_reason\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_reason\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"status\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "10694a1d-4632-4701-8113-0fcb1b52dbcc",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "adipisicing incididunt esse",
																	"description": "(Required) The ID of the charge whose refunds will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Unified Payments Create Refund",
											"id": "48b9f111-41dc-4d98-a04b-a589b76591e3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "61992606"
														},
														{
															"key": "description",
															"value": "ut nisi mollit"
														},
														{
															"key": "expand[0]",
															"value": "Ut magna non",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "veniam in proident",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "reason",
															"value": "fraudulent"
														},
														{
															"key": "refund_application_fee",
															"value": "false"
														},
														{
															"key": "reverse_transfer",
															"value": "true"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/refunds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"refunds"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "d1357d75-218b-4289-a721-f5538653330e",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amount",
																	"value": "<integer>"
																},
																{
																	"key": "description",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "reason",
																	"value": "<string>"
																},
																{
																	"key": "refund_application_fee",
																	"value": "<boolean>"
																},
																{
																	"key": "reverse_transfer",
																	"value": "<boolean>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
												},
												{
													"id": "631cdae5-4246-4db6-b6ef-e2579f023d9a",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amount",
																	"value": "<integer>"
																},
																{
																	"key": "description",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "reason",
																	"value": "<string>"
																},
																{
																	"key": "refund_application_fee",
																	"value": "<boolean>"
																},
																{
																	"key": "reverse_transfer",
																	"value": "<boolean>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/charges/:charge/refunds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"charges",
																":charge",
																"refunds"
															],
															"variable": [
																{
																	"key": "charge",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "23756423-810f-4b5b-a754-061f6315c570"
								},
								{
									"name": "Retrieve Charge",
									"id": "539d3ab7-85a8-4856-95b2-519b23c02770",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/charges/:charge?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges",
												":charge"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "charge",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the charge to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>"
									},
									"response": [
										{
											"id": "8149b1e9-3b9c-4513-af84-2f8645baad27",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the charge to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "d55dfac9-40a2-4fa4-b812-f9587fbc710f",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the charge to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Charge",
									"id": "4fbace0a-4fac-478c-9fa1-919a92002ebf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer",
													"value": "culpa",
													"description": "The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge."
												},
												{
													"key": "description",
													"value": "qui laboris",
													"description": "An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing."
												},
												{
													"key": "expand[0]",
													"value": "dolor ex laborum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "fraud_details[user_report]",
													"value": "fraudulent",
													"description": "A set of key/value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Note that you must refund a charge before setting the `user_report` to `fraudulent`. Stripe will use the information you send to improve our fraud detection algorithms."
												},
												{
													"key": "receipt_email",
													"value": "cupidatat esse consequat",
													"description": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address."
												},
												{
													"key": "shipping[address][line1]",
													"value": "nostrud Ut",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[address][city]",
													"value": "Duis enim Excepteur elit ullamco",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[address][country]",
													"value": "qui et aliqua",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[address][line2]",
													"value": "sunt sit cupidatat",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "dolore reprehenderit mollit officia",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[address][state]",
													"value": "officia Lorem cillum",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[name]",
													"value": "adipisicing quis",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[carrier]",
													"value": "reprehenderit ad",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[phone]",
													"value": "Ut ut",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "shipping[tracking_number]",
													"value": "ullamco au",
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
												},
												{
													"key": "transfer_group",
													"value": "e",
													"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/charges/:charge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges",
												":charge"
											],
											"variable": [
												{
													"key": "charge",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
									},
									"response": [
										{
											"id": "40a27115-29f8-43df-a81f-0ba60445f10e",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "A set of key/value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Note that you must refund a charge before setting the `user_report` to `fraudulent`. Stripe will use the information you send to improve our fraud detection algorithms.",
															"key": "fraud_details[user_report]",
															"value": "<string>"
														},
														{
															"description": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[carrier]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[phone]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[tracking_number]",
															"value": "<string>"
														},
														{
															"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "9213f329-2713-48d5-b660-ada76c65141a",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "A set of key/value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Note that you must refund a charge before setting the `user_report` to `fraudulent`. Stripe will use the information you send to improve our fraud detection algorithms.",
															"key": "fraud_details[user_report]",
															"value": "<string>"
														},
														{
															"description": "This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[carrier]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[phone]",
															"value": "<string>"
														},
														{
															"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
															"key": "shipping[tracking_number]",
															"value": "<string>"
														},
														{
															"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Charge Capture",
									"id": "5a6eba9b-334b-42c3-b870-c3dcffe1e6ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "-86265812",
													"description": "The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded."
												},
												{
													"key": "application_fee",
													"value": "63187986",
													"description": "An application fee to add on to this charge. Can only be used with Stripe Connect."
												},
												{
													"key": "destination[amount]",
													"value": "76570371",
													"description": "An optional dictionary containing a new destination amount to use. Can only be used with destination charges created with Stripe Connect."
												},
												{
													"key": "expand[0]",
													"value": "sint Excepteur quis sunt",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "incididunt Excepteur sed et esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "receipt_email",
													"value": "non",
													"description": "The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode."
												},
												{
													"key": "statement_descriptor",
													"value": "dolor",
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to *22 characters*. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket`. The statement description must contain at least one letter, may not include `<>\"'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. Updating this value will overwrite the previous statement descriptor of this charge. While most banks display this information consistently, some may display it incorrectly or not at all."
												},
												{
													"key": "transfer_group",
													"value": "mollit fugiat nisi in",
													"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/charges/:charge/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges",
												":charge",
												"capture"
											],
											"variable": [
												{
													"key": "charge",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href=\"#create_charge\">created a charge</a> with the capture option set to false.</p><p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>"
									},
									"response": [
										{
											"id": "e94cece5-20fa-46ee-841e-8a747ac32e60",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An application fee to add on to this charge. Can only be used with Stripe Connect.",
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "An optional dictionary containing a new destination amount to use. Can only be used with destination charges created with Stripe Connect.",
															"key": "destination[amount]",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to *22 characters*. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket`. The statement description must contain at least one letter, may not include `<>\"'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. Updating this value will overwrite the previous statement descriptor of this charge. While most banks display this information consistently, some may display it incorrectly or not at all.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"capture"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "3f865d3e-075a-4499-9246-50c088e3c6b2",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An application fee to add on to this charge. Can only be used with Stripe Connect.",
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "An optional dictionary containing a new destination amount to use. Can only be used with destination charges created with Stripe Connect.",
															"key": "destination[amount]",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to *22 characters*. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket`. The statement description must contain at least one letter, may not include `<>\"'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. Updating this value will overwrite the previous statement descriptor of this charge. While most banks display this information consistently, some may display it incorrectly or not at all.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"capture"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Charge Refund",
									"id": "af9b317e-ccfe-41c3-b255-7325ce609c70",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "-28626671"
												},
												{
													"key": "description",
													"value": "non"
												},
												{
													"key": "expand[0]",
													"value": "do laboris",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "velit in dolore",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "reason",
													"value": "duplicate"
												},
												{
													"key": "refund_application_fee",
													"value": "false"
												},
												{
													"key": "reverse_transfer",
													"value": "false"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/charges/:charge/refund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges",
												":charge",
												"refund"
											],
											"variable": [
												{
													"key": "charge",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "8211988d-30af-4643-84b3-a6d61aef8b9a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "<integer>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "reason",
															"value": "<string>"
														},
														{
															"key": "refund_application_fee",
															"value": "<boolean>"
														},
														{
															"key": "reverse_transfer",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"refund"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "e55e820a-a833-4cd5-ac65-5c75984041ec",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "amount",
															"value": "<integer>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "reason",
															"value": "<string>"
														},
														{
															"key": "refund_application_fee",
															"value": "<boolean>"
														},
														{
															"key": "reverse_transfer",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/charges/:charge/refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"charges",
														":charge",
														"refund"
													],
													"variable": [
														{
															"key": "charge",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "9ea15312-ea76-4b16-b6ad-e0d66f21e729"
						},
						{
							"name": "All Charges",
							"id": "630374df-4725-4b99-b078-153d55762d04",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/charges?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&customer=esse deserunt&ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&source[object]=occaecat in consectetur eiusmod&starting_after=adipisicing incididunt esse&transfer_group=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"charges"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "Only return charges for the customer specified by this customer ID."
										},
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "source[object]",
											"value": "occaecat in consectetur eiusmod",
											"description": "A filter on the list, based on the source of the charge. The value can be a dictionary with the following options:"
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "transfer_group",
											"value": "esse deserunt",
											"description": "Only return charges for this transfer group."
										}
									]
								},
								"description": "<p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>"
							},
							"response": [
								{
									"id": "45ba3042-8e65-43e3-a616-f1347f8ef688",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/charges?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&source[object]=<string>&starting_after=<string>&transfer_group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "source[object]",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"amount_refunded\": \"<integer>\",\n      \"captured\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"paid\": \"<boolean>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": \"<string>\",\n      \"application\": \"<string>\",\n      \"application_fee\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"dispute\": \"<string>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"fraud_details\": \"<object>\",\n      \"invoice\": \"<string>\",\n      \"on_behalf_of\": \"<string>\",\n      \"order\": \"<string>\",\n      \"outcome\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"receipt_email\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"review\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source_transfer\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"transfer\": \"<string>\",\n      \"transfer_group\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"amount_refunded\": \"<integer>\",\n      \"captured\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"paid\": \"<boolean>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": \"<string>\",\n      \"application\": \"<string>\",\n      \"application_fee\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"dispute\": \"<string>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"fraud_details\": \"<object>\",\n      \"invoice\": \"<string>\",\n      \"on_behalf_of\": \"<string>\",\n      \"order\": \"<string>\",\n      \"outcome\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"receipt_email\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"review\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source_transfer\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"transfer\": \"<string>\",\n      \"transfer_group\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "08660fa4-5d9a-4c45-9569-e92c130e496c",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/charges?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&source[object]=<string>&starting_after=<string>&transfer_group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "source[object]",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Charge",
							"id": "7d2f1fb3-166d-4ca1-a9cc-b84ef4c34c24",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "alternate_statement_descriptors[kana]",
											"value": "sit eu et in"
										},
										{
											"key": "alternate_statement_descriptors[kanji]",
											"value": "aliquip a"
										},
										{
											"key": "amount",
											"value": "1975458",
											"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts)."
										},
										{
											"key": "application",
											"value": "exer"
										},
										{
											"key": "application_fee",
											"value": "82650565",
											"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees)."
										},
										{
											"key": "capture",
											"value": "false",
											"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation."
										},
										{
											"key": "card_program",
											"value": "deserunt exercitation dolore sint"
										},
										{
											"key": "cross_border_classification",
											"value": "export"
										},
										{
											"key": "currency",
											"value": "consectetur occaecat Ut in",
											"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "customer",
											"value": "enim",
											"description": "The ID of an existing customer that will be charged in this request."
										},
										{
											"key": "description",
											"value": "eiusmod in",
											"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing."
										},
										{
											"key": "destination[account]",
											"value": "veniam sunt",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "destination[amount]",
											"value": "90489695",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "device_id",
											"value": "esse ad"
										},
										{
											"key": "exchange_rate",
											"value": "66495654.607078075"
										},
										{
											"key": "expand[0]",
											"value": "aliqua qui",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "do amet ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "external_id",
											"value": "nulla labore fugiat enim nostrud"
										},
										{
											"key": "idempotency_key",
											"value": "officia adipisicing"
										},
										{
											"key": "include[0]",
											"value": "occaecat irure amet minim"
										},
										{
											"key": "include[1]",
											"value": "moll"
										},
										{
											"key": "invoice",
											"value": "cupidatat ut fugiat"
										},
										{
											"key": "invoice_source",
											"value": "tempor fugiat nisi sunt"
										},
										{
											"key": "ip",
											"value": "ullamco id exercitation magna"
										},
										{
											"key": "level3[line_items][0][product_code]",
											"value": "incididunt"
										},
										{
											"key": "level3[line_items][0][product_description]",
											"value": "Duis"
										},
										{
											"key": "level3[line_items][0][discount_amount]",
											"value": "-66049462"
										},
										{
											"key": "level3[line_items][0][quantity]",
											"value": "53237477"
										},
										{
											"key": "level3[line_items][0][tax_amount]",
											"value": "21878837"
										},
										{
											"key": "level3[line_items][0][unit_cost]",
											"value": "44206474"
										},
										{
											"key": "level3[line_items][1][product_code]",
											"value": "in "
										},
										{
											"key": "level3[line_items][1][product_description]",
											"value": "commodo u"
										},
										{
											"key": "level3[line_items][1][discount_amount]",
											"value": "78084963"
										},
										{
											"key": "level3[line_items][1][quantity]",
											"value": "-24627318"
										},
										{
											"key": "level3[line_items][1][tax_amount]",
											"value": "52307155"
										},
										{
											"key": "level3[line_items][1][unit_cost]",
											"value": "57303622"
										},
										{
											"key": "level3[merchant_reference]",
											"value": "qui mollit"
										},
										{
											"key": "level3[customer_reference]",
											"value": "fugia"
										},
										{
											"key": "level3[shipping_address_zip]",
											"value": "est ame"
										},
										{
											"key": "level3[shipping_amount]",
											"value": "-55938514"
										},
										{
											"key": "level3[shipping_from_zip]",
											"value": "labore in"
										},
										{
											"key": "on_behalf_of",
											"value": "cillum commodo cupidatat sunt",
											"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of)."
										},
										{
											"key": "order",
											"value": "officia reprehenderit"
										},
										{
											"key": "payment_method",
											"value": "esse est adipisicing ipsum"
										},
										{
											"key": "payment_user_agent",
											"value": "dolor tempor cupidatat ex"
										},
										{
											"key": "receipt_email",
											"value": "culpa",
											"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails)."
										},
										{
											"key": "recurring",
											"value": "false"
										},
										{
											"key": "referrer",
											"value": "est occaecat cillum in"
										},
										{
											"key": "shipping[address][line1]",
											"value": "consectetur Duis",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[address][city]",
											"value": "nostrud elit sunt cupidatat",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[address][country]",
											"value": "laboris fugiat id elit l",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[address][line2]",
											"value": "est sed laborum velit",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[address][postal_code]",
											"value": "occaecat ",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[address][state]",
											"value": "amet sunt dolore aliquip",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[name]",
											"value": "reprehenderit mollit esse",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[carrier]",
											"value": "magna",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[phone]",
											"value": "dolor sunt",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[tracking_number]",
											"value": "Duis proident est nostrud",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "statement_address[city]",
											"value": "officia ut ea aliqua"
										},
										{
											"key": "statement_address[line1]",
											"value": "velit dolor"
										},
										{
											"key": "statement_address[postal_code]",
											"value": "veniam in laboris fugiat Duis"
										},
										{
											"key": "statement_address[state]",
											"value": "voluptate cupidatat Excepteur"
										},
										{
											"key": "statement_address[line2]",
											"value": "magna pariatur reprehenderit"
										},
										{
											"key": "transfer_group",
											"value": "do",
											"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions)."
										},
										{
											"key": "trust[safety]",
											"value": "safe"
										},
										{
											"key": "uncaptured",
											"value": "false"
										},
										{
											"key": "user_agent",
											"value": "Ut esse"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"charges"
									]
								},
								"description": "<p>To charge a credit card or other payment source, you create a <code>Charge</code> object. If your API key is in test mode, the supplied payment source (e.g., card) won’t actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).</p>"
							},
							"response": [
								{
									"id": "f8e2f928-1caf-4a3e-930c-03d9e1faa748",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "alternate_statement_descriptors[kana]",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kanji]",
													"value": "<string>"
												},
												{
													"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts).",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "application",
													"value": "<string>"
												},
												{
													"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees).",
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation.",
													"key": "capture",
													"value": "<boolean>"
												},
												{
													"key": "card_program",
													"value": "<string>"
												},
												{
													"key": "cross_border_classification",
													"value": "<string>"
												},
												{
													"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing customer that will be charged in this request.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges).",
													"key": "destination[account]",
													"value": "<string>"
												},
												{
													"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges).",
													"key": "destination[amount]",
													"value": "<integer>"
												},
												{
													"key": "device_id",
													"value": "<string>"
												},
												{
													"key": "exchange_rate",
													"value": "<number>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "idempotency_key",
													"value": "<string>"
												},
												{
													"key": "include[0]",
													"value": "<string>"
												},
												{
													"key": "include[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "invoice_source",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[merchant_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[customer_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_address_zip]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[shipping_from_zip]",
													"value": "<string>"
												},
												{
													"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of).",
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "payment_method",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"key": "recurring",
													"value": "<boolean>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"key": "statement_address[city]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line1]",
													"value": "<string>"
												},
												{
													"key": "statement_address[postal_code]",
													"value": "<string>"
												},
												{
													"key": "statement_address[state]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line2]",
													"value": "<string>"
												},
												{
													"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions).",
													"key": "transfer_group",
													"value": "<string>"
												},
												{
													"key": "trust[safety]",
													"value": "<string>"
												},
												{
													"key": "uncaptured",
													"value": "<boolean>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
								},
								{
									"id": "56890d5a-24ad-4929-a1c6-3dcd7df32a45",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "alternate_statement_descriptors[kana]",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kanji]",
													"value": "<string>"
												},
												{
													"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts).",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "application",
													"value": "<string>"
												},
												{
													"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees).",
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation.",
													"key": "capture",
													"value": "<boolean>"
												},
												{
													"key": "card_program",
													"value": "<string>"
												},
												{
													"key": "cross_border_classification",
													"value": "<string>"
												},
												{
													"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing customer that will be charged in this request.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges).",
													"key": "destination[account]",
													"value": "<string>"
												},
												{
													"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges).",
													"key": "destination[amount]",
													"value": "<integer>"
												},
												{
													"key": "device_id",
													"value": "<string>"
												},
												{
													"key": "exchange_rate",
													"value": "<number>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "idempotency_key",
													"value": "<string>"
												},
												{
													"key": "include[0]",
													"value": "<string>"
												},
												{
													"key": "include[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "invoice_source",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[merchant_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[customer_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_address_zip]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[shipping_from_zip]",
													"value": "<string>"
												},
												{
													"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of).",
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "payment_method",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"key": "recurring",
													"value": "<boolean>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods.",
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"key": "statement_address[city]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line1]",
													"value": "<string>"
												},
												{
													"key": "statement_address[postal_code]",
													"value": "<string>"
												},
												{
													"key": "statement_address[state]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line2]",
													"value": "<string>"
												},
												{
													"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions).",
													"key": "transfer_group",
													"value": "<string>"
												},
												{
													"key": "trust[safety]",
													"value": "<string>"
												},
												{
													"key": "uncaptured",
													"value": "<boolean>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"charges"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "1cfa9871-937f-485c-8d32-32482ba53cc8"
				},
				{
					"name": "country_specs",
					"item": [
						{
							"name": "All Country Specs",
							"id": "e9244448-cdcc-4cf7-a972-88f0d678300c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/country_specs?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"country_specs"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Lists all Country Spec objects available in the API.</p>"
							},
							"response": [
								{
									"id": "4dcfbf93-2e35-45d2-9b47-8d27e8ea1127",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/country_specs?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"country_specs"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"default_currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"supported_bank_account_currencies\": \"<object>\",\n      \"supported_payment_currencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"supported_payment_methods\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"supported_transfer_countries\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"verification_fields\": \"<object>\"\n    },\n    {\n      \"default_currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"supported_bank_account_currencies\": \"<object>\",\n      \"supported_payment_currencies\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"supported_payment_methods\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"supported_transfer_countries\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"verification_fields\": \"<object>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "dcefa7e5-6494-492e-8fe6-847a0d8efa1e",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/country_specs?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"country_specs"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Country Spec",
							"id": "62f86c2a-7b22-46fa-b07f-666825c2101e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/country_specs/:country?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"country_specs",
										":country"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "country",
											"value": "esse deserunt",
											"description": "(Required) An ISO 3166-1 alpha-2 country code. Available country codes can be listed with the [List Country Specs](/docs/api#list_country_specs) endpoint."
										}
									]
								},
								"description": "<p>Returns a Country Spec for a given Country code.</p>"
							},
							"response": [
								{
									"id": "31552cb5-6a5e-4ce9-aed7-6d74b0e13f99",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/country_specs/:country?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"country_specs",
												":country"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "country",
													"value": "esse deserunt",
													"description": "(Required) An ISO 3166-1 alpha-2 country code. Available country codes can be listed with the [List Country Specs](/docs/api#list_country_specs) endpoint."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"default_currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"supported_bank_account_currencies\": \"<object>\",\n  \"supported_payment_currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"supported_payment_methods\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"supported_transfer_countries\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"verification_fields\": \"<object>\"\n}"
								},
								{
									"id": "ad546c63-7274-4e43-ab98-41ca1ad62980",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/country_specs/:country?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"country_specs",
												":country"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "country",
													"value": "esse deserunt",
													"description": "(Required) An ISO 3166-1 alpha-2 country code. Available country codes can be listed with the [List Country Specs](/docs/api#list_country_specs) endpoint."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "ca2b556d-2ffe-4e9b-b86a-0fde2dbce5aa"
				},
				{
					"name": "coupons",
					"item": [
						{
							"name": "{coupon}",
							"item": [
								{
									"name": "Delete Coupon",
									"id": "c234efd1-9332-4b08-a850-0db771a5c212",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/coupons/:coupon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons",
												":coupon"
											],
											"variable": [
												{
													"key": "coupon",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the coupon to be deleted."
												}
											]
										},
										"description": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>"
									},
									"response": [
										{
											"id": "77aa464f-c6fe-4454-a08f-34097762c181",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the coupon to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "882ae80c-ecba-4054-affd-13ab80d59846",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the coupon to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Coupon",
									"id": "ae4b037e-fd87-48c4-bb6e-c915df10409f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/coupons/:coupon?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons",
												":coupon"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "coupon",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired coupon."
												}
											]
										},
										"description": "<p>Retrieves the coupon with the given ID.</p>"
									},
									"response": [
										{
											"id": "a87a73c3-5670-4e71-9d08-f0869a4341d5",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired coupon."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"duration\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"times_redeemed\": \"<integer>\",\n  \"valid\": \"<boolean>\",\n  \"amount_off\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"duration_in_months\": \"<integer>\",\n  \"max_redemptions\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"percent_off\": \"<number>\",\n  \"redeem_by\": \"<unix-time>\"\n}"
										},
										{
											"id": "ae709796-881d-4282-8bd5-270b533c580c",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired coupon."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Coupon",
									"id": "ef5f151a-15fe-4051-986b-f1c05f62b023",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "occaecat et consectetur veniam",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Excepteur ad sit",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "name",
													"value": "amet esse ex magna",
													"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/coupons/:coupon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons",
												":coupon"
											],
											"variable": [
												{
													"key": "coupon",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the coupon to be updated."
												}
											]
										},
										"description": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>"
									},
									"response": [
										{
											"id": "57df499b-27a0-4fcb-8e87-a2a754b11d5c",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
															"key": "name",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the coupon to be updated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"duration\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"times_redeemed\": \"<integer>\",\n  \"valid\": \"<boolean>\",\n  \"amount_off\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"duration_in_months\": \"<integer>\",\n  \"max_redemptions\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"percent_off\": \"<number>\",\n  \"redeem_by\": \"<unix-time>\"\n}"
										},
										{
											"id": "f0e10cb0-bcd4-444c-a649-999a5c0f374b",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
															"key": "name",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/coupons/:coupon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"coupons",
														":coupon"
													],
													"variable": [
														{
															"key": "coupon",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the coupon to be updated."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "be94f64f-3598-400b-9337-a849fe79365b"
						},
						{
							"name": "All Coupons",
							"id": "0f79f40d-8758-47e4-85f3-b4aa36612b83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/coupons?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"coupons"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your coupons.</p>"
							},
							"response": [
								{
									"id": "35aa62af-8a65-466d-99d1-55f8326ffffb",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/coupons?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"duration\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"times_redeemed\": \"<integer>\",\n      \"valid\": \"<boolean>\",\n      \"amount_off\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"duration_in_months\": \"<integer>\",\n      \"max_redemptions\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"percent_off\": \"<number>\",\n      \"redeem_by\": \"<unix-time>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"duration\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"times_redeemed\": \"<integer>\",\n      \"valid\": \"<boolean>\",\n      \"amount_off\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"duration_in_months\": \"<integer>\",\n      \"max_redemptions\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"percent_off\": \"<number>\",\n      \"redeem_by\": \"<unix-time>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "44986094-1acf-4100-9992-b3d6a0c1f648",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/coupons?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Coupon",
							"id": "43928a3d-a888-4ba6-b745-b2e93a2388bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "duration",
											"value": "repeating",
											"description": "(Required) Specifies how long the discount will be in effect. Can be `forever`, `once`, or `repeating`."
										},
										{
											"key": "amount_off",
											"value": "45965142",
											"description": "A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed)."
										},
										{
											"key": "currency",
											"value": "elit id exercitation",
											"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed)."
										},
										{
											"key": "duration_in_months",
											"value": "51555185",
											"description": "Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect."
										},
										{
											"key": "expand[0]",
											"value": "deserunt Duis occaecat",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "nulla reprehenderit proident aliquip",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "id",
											"value": "elit sint",
											"description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you'll give to your customer to use when signing up (e.g., `FALL25OFF`). If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you."
										},
										{
											"key": "max_redemptions",
											"value": "6788029",
											"description": "A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use."
										},
										{
											"key": "name",
											"value": "sit ea",
											"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set."
										},
										{
											"key": "percent_off",
											"value": "70907387.71653214",
											"description": "A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed)."
										},
										{
											"key": "redeem_by",
											"value": "-16004754",
											"description": "Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/coupons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"coupons"
									]
								},
								"description": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p><p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>"
							},
							"response": [
								{
									"id": "01782d40-25f7-4ce8-9a23-db4c5074ebd3",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Specifies how long the discount will be in effect. Can be `forever`, `once`, or `repeating`.",
													"key": "duration",
													"value": "<string>"
												},
												{
													"description": "A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed).",
													"key": "amount_off",
													"value": "<integer>"
												},
												{
													"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect.",
													"key": "duration_in_months",
													"value": "<integer>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you'll give to your customer to use when signing up (e.g., `FALL25OFF`). If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.",
													"key": "max_redemptions",
													"value": "<integer>"
												},
												{
													"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed).",
													"key": "percent_off",
													"value": "<number>"
												},
												{
													"description": "Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.",
													"key": "redeem_by",
													"value": "<unix-time>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/coupons",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"duration\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"times_redeemed\": \"<integer>\",\n  \"valid\": \"<boolean>\",\n  \"amount_off\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"duration_in_months\": \"<integer>\",\n  \"max_redemptions\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"percent_off\": \"<number>\",\n  \"redeem_by\": \"<unix-time>\"\n}"
								},
								{
									"id": "a25b844a-14af-4ba8-892f-68872f8ec038",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Specifies how long the discount will be in effect. Can be `forever`, `once`, or `repeating`.",
													"key": "duration",
													"value": "<string>"
												},
												{
													"description": "A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed).",
													"key": "amount_off",
													"value": "<integer>"
												},
												{
													"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect.",
													"key": "duration_in_months",
													"value": "<integer>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. This is often a specific code you'll give to your customer to use when signing up (e.g., `FALL25OFF`). If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use.",
													"key": "max_redemptions",
													"value": "<integer>"
												},
												{
													"description": "Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed).",
													"key": "percent_off",
													"value": "<number>"
												},
												{
													"description": "Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.",
													"key": "redeem_by",
													"value": "<unix-time>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/coupons",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"coupons"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "7906efda-0511-4784-9522-1aca2d042a83"
				},
				{
					"name": "customers",
					"item": [
						{
							"name": "{customer}",
							"item": [
								{
									"name": "bank_accounts",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Customer Source",
													"id": "281d3008-98fd-46a9-86ca-926f65860572",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source to be deleted."
																}
															]
														}
													},
													"response": [
														{
															"id": "a8c1c2d2-2cd0-4fc0-91a2-48cef17d6b52",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "6ccdb27d-46a3-4166-a3b2-36dc1c5795f7",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Customer Bank Account",
													"id": "97253caa-371b-4ba9-900a-d1cf6cf03e82",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) ID of bank account to retrieve."
																}
															]
														},
														"description": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>"
													},
													"response": [
														{
															"id": "c4b7f8b4-fe6f-4f7f-a1bb-46458e753a5c",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) ID of bank account to retrieve."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "76c88e68-c9dc-495c-9dda-d8247ae2ef27",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) ID of bank account to retrieve."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Customer Source",
													"id": "9047f0bb-666f-47e1-a34f-4a926547afe8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "account_holder_name",
																	"value": "do",
																	"description": "The name of the person or business that owns the bank account."
																},
																{
																	"key": "account_holder_type",
																	"value": "individual",
																	"description": "The type of entity that holds the account. This can be either `individual` or `company`."
																},
																{
																	"key": "address_city",
																	"value": "enim dolor occaecat",
																	"description": "City/District/Suburb/Town/Village."
																},
																{
																	"key": "address_country",
																	"value": "fugiat magna",
																	"description": "Billing address country, if provided when creating card."
																},
																{
																	"key": "address_line1",
																	"value": "",
																	"description": "Address line 1 (Street address/PO Box/Company name)."
																},
																{
																	"key": "address_line2",
																	"value": "aute incididunt nostrud ut",
																	"description": "Address line 2 (Apartment/Suite/Unit/Building)."
																},
																{
																	"key": "address_state",
																	"value": "irure quis dolore laboris",
																	"description": "State/County/Province/Region."
																},
																{
																	"key": "address_zip",
																	"value": "sit labore et Lorem ea",
																	"description": "ZIP or postal code"
																},
																{
																	"key": "exp_month",
																	"value": "consec",
																	"description": "Two digit number representing the card’s expiration month."
																},
																{
																	"key": "exp_year",
																	"value": "esse ea n",
																	"description": "Four digit number representing the card’s expiration year."
																},
																{
																	"key": "expand[0]",
																	"value": "laborum cupidatat et",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "Lorem nulla commodo",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "name",
																	"value": "ut ea reprehenderit esse",
																	"description": "Cardholder name."
																},
																{
																	"key": "owner[address][city]",
																	"value": "commodo ad veniam"
																},
																{
																	"key": "owner[address][country]",
																	"value": "cupidatat officia"
																},
																{
																	"key": "owner[address][line1]",
																	"value": "q"
																},
																{
																	"key": "owner[address][line2]",
																	"value": "est in"
																},
																{
																	"key": "owner[address][postal_code]",
																	"value": "non anim"
																},
																{
																	"key": "owner[address][state]",
																	"value": "amet est velit ullamco in"
																},
																{
																	"key": "owner[email]",
																	"value": "anim do elit"
																},
																{
																	"key": "owner[name]",
																	"value": "ut eiusmod"
																},
																{
																	"key": "owner[phone]",
																	"value": "irure dolore nisi occaecat"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the card to be updated."
																}
															]
														}
													},
													"response": [
														{
															"id": "df6ddc9b-94a3-42d6-9d9a-e15497a440d1",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brand\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"funding\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"account\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_line1_check\": \"<string>\",\n  \"address_line2\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_zip_check\": \"<string>\",\n  \"available_payout_methods\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"cvc_check\": \"<string>\",\n  \"default_for_currency\": \"<boolean>\",\n  \"dynamic_last4\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"name\": \"<string>\",\n  \"recipient\": \"<string>\",\n  \"tokenization_method\": \"<string>\"\n}"
														},
														{
															"id": "90a74fc8-b40d-45ac-91e7-447431363f66",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Verify Customer Source",
													"id": "c63da992-32c1-4131-ba6f-cc76707fa2ec",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amounts[0]",
																	"value": "-20584733",
																	"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account."
																},
																{
																	"key": "amounts[1]",
																	"value": "75793588",
																	"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account."
																},
																{
																	"key": "expand[0]",
																	"value": "laboris voluptate consequat",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "in laboris veniam",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "verification_method",
																	"value": "ex tempor exercitation"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source to be verified."
																}
															]
														}
													},
													"response": [
														{
															"id": "6e001076-c832-451c-b008-7e671739748e",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[0]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[1]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"key": "verification_method",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be verified."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "67c893b6-83f9-41e5-922b-1a78154a9164",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[0]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[1]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"key": "verification_method",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts/:id/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"bank_accounts",
																		":id",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be verified."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "3c2b70e0-764a-4fa0-bfe5-0a560189b443"
										},
										{
											"name": "All Customer Bank Accounts",
											"id": "5c36501a-b88f-4bde-8d64-3ef8a3814abd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"bank_accounts"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the customer whose bank accounts will be retrieved."
														}
													]
												},
												"description": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>"
											},
											"response": [
												{
													"id": "a573d52c-ab7f-4a50-85b5-8ddf39bc8c72",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose bank accounts will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"account\": \"<string>\",\n      \"account_holder_name\": \"<string>\",\n      \"account_holder_type\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"routing_number\": \"<string>\"\n    },\n    {\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"account\": \"<string>\",\n      \"account_holder_name\": \"<string>\",\n      \"account_holder_type\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"routing_number\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "75d15138-cc0c-4c35-a331-a56893d668e7",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose bank accounts will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Customer Source",
											"id": "a444aa3f-c20d-488d-91da-000933f6cc1c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "exercitation non Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "voluptate in est Excepteur ad",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"bank_accounts"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p><p>If the card’s owner has no default card, then the new card will become the default.However, if the owner already has a default, then it will not change.To change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,or <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>"
											},
											"response": [
												{
													"id": "4f400f66-690a-4883-a832-d5fea5031005",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "7576bebb-d3a1-41c5-a20d-a19fbb420a92",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/bank_accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"bank_accounts"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "1a276461-dc20-4b31-ac01-a81e211be879"
								},
								{
									"name": "cards",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Customer Source",
													"id": "66e16e17-75f4-4401-9a20-305ddf297888",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source to be deleted."
																}
															]
														}
													},
													"response": [
														{
															"id": "76b55d12-a51e-4caa-bc89-28a29f3d6d56",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "05a65878-8cc9-4839-bc0b-3b4614af2dd3",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Customer Card",
													"id": "fe2d8d34-7ef5-48bb-b2b4-d9f1f55877c3",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the card to be retrieved."
																}
															]
														}
													},
													"response": [
														{
															"id": "8b4b2cbd-ebbf-4c03-af0e-f7a3c99e34a2",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be retrieved."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brand\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"funding\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"account\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_line1_check\": \"<string>\",\n  \"address_line2\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_zip_check\": \"<string>\",\n  \"available_payout_methods\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"cvc_check\": \"<string>\",\n  \"default_for_currency\": \"<boolean>\",\n  \"dynamic_last4\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"name\": \"<string>\",\n  \"recipient\": \"<string>\",\n  \"tokenization_method\": \"<string>\"\n}"
														},
														{
															"id": "04a5cf86-828b-46d4-affa-99e7e9cd59a1",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be retrieved."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Customer Source",
													"id": "79c66d8a-7702-4447-8a2c-793ccc9d7292",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "account_holder_name",
																	"value": "do",
																	"description": "The name of the person or business that owns the bank account."
																},
																{
																	"key": "account_holder_type",
																	"value": "individual",
																	"description": "The type of entity that holds the account. This can be either `individual` or `company`."
																},
																{
																	"key": "address_city",
																	"value": "enim dolor occaecat",
																	"description": "City/District/Suburb/Town/Village."
																},
																{
																	"key": "address_country",
																	"value": "fugiat magna",
																	"description": "Billing address country, if provided when creating card."
																},
																{
																	"key": "address_line1",
																	"value": "",
																	"description": "Address line 1 (Street address/PO Box/Company name)."
																},
																{
																	"key": "address_line2",
																	"value": "aute incididunt nostrud ut",
																	"description": "Address line 2 (Apartment/Suite/Unit/Building)."
																},
																{
																	"key": "address_state",
																	"value": "irure quis dolore laboris",
																	"description": "State/County/Province/Region."
																},
																{
																	"key": "address_zip",
																	"value": "sit labore et Lorem ea",
																	"description": "ZIP or postal code"
																},
																{
																	"key": "exp_month",
																	"value": "consec",
																	"description": "Two digit number representing the card’s expiration month."
																},
																{
																	"key": "exp_year",
																	"value": "esse ea n",
																	"description": "Four digit number representing the card’s expiration year."
																},
																{
																	"key": "expand[0]",
																	"value": "laborum cupidatat et",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "Lorem nulla commodo",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "name",
																	"value": "ut ea reprehenderit esse",
																	"description": "Cardholder name."
																},
																{
																	"key": "owner[address][city]",
																	"value": "commodo ad veniam"
																},
																{
																	"key": "owner[address][country]",
																	"value": "cupidatat officia"
																},
																{
																	"key": "owner[address][line1]",
																	"value": "q"
																},
																{
																	"key": "owner[address][line2]",
																	"value": "est in"
																},
																{
																	"key": "owner[address][postal_code]",
																	"value": "non anim"
																},
																{
																	"key": "owner[address][state]",
																	"value": "amet est velit ullamco in"
																},
																{
																	"key": "owner[email]",
																	"value": "anim do elit"
																},
																{
																	"key": "owner[name]",
																	"value": "ut eiusmod"
																},
																{
																	"key": "owner[phone]",
																	"value": "irure dolore nisi occaecat"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the card to be updated."
																}
															]
														}
													},
													"response": [
														{
															"id": "fca8a2c7-3532-4214-a294-3c54974b59b7",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brand\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"funding\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"account\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_line1_check\": \"<string>\",\n  \"address_line2\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_zip_check\": \"<string>\",\n  \"available_payout_methods\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"cvc_check\": \"<string>\",\n  \"default_for_currency\": \"<boolean>\",\n  \"dynamic_last4\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"name\": \"<string>\",\n  \"recipient\": \"<string>\",\n  \"tokenization_method\": \"<string>\"\n}"
														},
														{
															"id": "436eb5b7-ef42-4993-89b8-641612ceec11",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/cards/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"cards",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "46f3b010-1916-4b94-9fbb-e176a62a71b6"
										},
										{
											"name": "All Customer Cards",
											"id": "e915a33f-5711-401d-86bb-ca8024ba567b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/cards?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"cards"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the customer whose cards will be retrieved."
														}
													]
												}
											},
											"response": [
												{
													"id": "0ca0d5e7-edb1-4fbb-a618-40232fe07856",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose cards will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": \"<string>\",\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    {\n      \"brand\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"funding\": \"<string>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"account\": \"<string>\",\n      \"address_city\": \"<string>\",\n      \"address_country\": \"<string>\",\n      \"address_line1\": \"<string>\",\n      \"address_line1_check\": \"<string>\",\n      \"address_line2\": \"<string>\",\n      \"address_state\": \"<string>\",\n      \"address_zip\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"available_payout_methods\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"country\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"default_for_currency\": \"<boolean>\",\n      \"dynamic_last4\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "d047943a-f628-4b79-a4cb-b990c7a0a9fb",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose cards will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Customer Source",
											"id": "c616684a-ec7c-4bb6-9e75-6e2455fc962a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "exercitation non Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "voluptate in est Excepteur ad",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/cards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"cards"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p><p>If the card’s owner has no default card, then the new card will become the default.However, if the owner already has a default, then it will not change.To change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,or <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>"
											},
											"response": [
												{
													"id": "4ed73be7-c4c9-4e88-bcf0-dfb60c1737af",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "087915e6-e07a-4f3a-b146-80549fafc029",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/cards",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"cards"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "1d58c0f2-cef4-4960-991d-bfa0f377d645"
								},
								{
									"name": "discount",
									"item": [
										{
											"name": "Delete Customer Discount",
											"id": "89e65066-d562-4779-a25e-d5ccb7df53cc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/discount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"discount"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>Removes the currently applied discount on a customer.</p>"
											},
											"response": [
												{
													"id": "a6903556-61ee-48da-b464-bd8fa3aeb406",
													"name": "Successful response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/discount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"discount"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deleted\": \"<boolean>\",\n  \"object\": \"<string>\"\n}"
												},
												{
													"id": "552f4dfd-6262-43c0-b2c0-de58f5a5d3a4",
													"name": "Error response.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/discount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"discount"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Retrieve Customer Discount",
											"id": "27786b25-412c-45dc-9e40-ea5184bc55ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/discount?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"discount"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5f44bc67-0299-492d-a157-8fc41eaf4d2a",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/discount?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"discount"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"coupon\": {\n    \"created\": \"<unix-time>\",\n    \"duration\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"times_redeemed\": \"<integer>\",\n    \"valid\": \"<boolean>\",\n    \"amount_off\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"duration_in_months\": \"<integer>\",\n    \"max_redemptions\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"percent_off\": \"<number>\",\n    \"redeem_by\": \"<unix-time>\"\n  },\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"end\": \"<unix-time>\",\n  \"subscription\": \"<string>\"\n}"
												},
												{
													"id": "282c181c-a02f-4e07-b819-7e51e94d8f22",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/discount?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"discount"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "aa9882f7-34fe-4c90-916b-c3e4f4bec9d5"
								},
								{
									"name": "sources",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Customer Source",
													"id": "7feae23a-8548-4af0-9653-15a014245711",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source to be deleted."
																}
															]
														}
													},
													"response": [
														{
															"id": "56f4a0fe-e520-4e8f-a4aa-a96c035e8646",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "49f88d92-a731-4dcd-946b-5789cdf71e00",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be deleted."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Customer Source",
													"id": "1c0b8faf-2cdc-41cf-8f92-a8a653494880",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "cillum deserunt cupidatat fugiat",
																	"description": "(Required) The ID of the source to be retrieved."
																}
															]
														}
													},
													"response": [
														{
															"id": "1f904e8c-375f-4fc2-ac4d-999331b8f647",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "cillum deserunt cupidatat fugiat",
																			"description": "(Required) The ID of the source to be retrieved."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "8e2e7b6d-c52f-4c9a-a6a9-6b82cde65802",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "cillum deserunt cupidatat fugiat",
																			"description": "(Required) The ID of the source to be retrieved."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Customer Source",
													"id": "c4d91895-a424-4a3e-befd-50074f3a4ad6",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "account_holder_name",
																	"value": "do",
																	"description": "The name of the person or business that owns the bank account."
																},
																{
																	"key": "account_holder_type",
																	"value": "individual",
																	"description": "The type of entity that holds the account. This can be either `individual` or `company`."
																},
																{
																	"key": "address_city",
																	"value": "enim dolor occaecat",
																	"description": "City/District/Suburb/Town/Village."
																},
																{
																	"key": "address_country",
																	"value": "fugiat magna",
																	"description": "Billing address country, if provided when creating card."
																},
																{
																	"key": "address_line1",
																	"value": "",
																	"description": "Address line 1 (Street address/PO Box/Company name)."
																},
																{
																	"key": "address_line2",
																	"value": "aute incididunt nostrud ut",
																	"description": "Address line 2 (Apartment/Suite/Unit/Building)."
																},
																{
																	"key": "address_state",
																	"value": "irure quis dolore laboris",
																	"description": "State/County/Province/Region."
																},
																{
																	"key": "address_zip",
																	"value": "sit labore et Lorem ea",
																	"description": "ZIP or postal code"
																},
																{
																	"key": "exp_month",
																	"value": "consec",
																	"description": "Two digit number representing the card’s expiration month."
																},
																{
																	"key": "exp_year",
																	"value": "esse ea n",
																	"description": "Four digit number representing the card’s expiration year."
																},
																{
																	"key": "expand[0]",
																	"value": "laborum cupidatat et",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "Lorem nulla commodo",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "name",
																	"value": "ut ea reprehenderit esse",
																	"description": "Cardholder name."
																},
																{
																	"key": "owner[address][city]",
																	"value": "commodo ad veniam"
																},
																{
																	"key": "owner[address][country]",
																	"value": "cupidatat officia"
																},
																{
																	"key": "owner[address][line1]",
																	"value": "q"
																},
																{
																	"key": "owner[address][line2]",
																	"value": "est in"
																},
																{
																	"key": "owner[address][postal_code]",
																	"value": "non anim"
																},
																{
																	"key": "owner[address][state]",
																	"value": "amet est velit ullamco in"
																},
																{
																	"key": "owner[email]",
																	"value": "anim do elit"
																},
																{
																	"key": "owner[name]",
																	"value": "ut eiusmod"
																},
																{
																	"key": "owner[phone]",
																	"value": "irure dolore nisi occaecat"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources",
																":id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the card to be updated."
																}
															]
														}
													},
													"response": [
														{
															"id": "46cc304b-507d-4d65-b1a2-01d02d537497",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brand\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"funding\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"account\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_line1_check\": \"<string>\",\n  \"address_line2\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_zip_check\": \"<string>\",\n  \"available_payout_methods\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"cvc_check\": \"<string>\",\n  \"default_for_currency\": \"<boolean>\",\n  \"dynamic_last4\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"name\": \"<string>\",\n  \"recipient\": \"<string>\",\n  \"tokenization_method\": \"<string>\"\n}"
														},
														{
															"id": "a6600788-e6f7-4339-92db-d65cd4664eed",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "The name of the person or business that owns the bank account.",
																			"key": "account_holder_name",
																			"value": "<string>"
																		},
																		{
																			"description": "The type of entity that holds the account. This can be either `individual` or `company`.",
																			"key": "account_holder_type",
																			"value": "<string>"
																		},
																		{
																			"description": "City/District/Suburb/Town/Village.",
																			"key": "address_city",
																			"value": "<string>"
																		},
																		{
																			"description": "Billing address country, if provided when creating card.",
																			"key": "address_country",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 1 (Street address/PO Box/Company name).",
																			"key": "address_line1",
																			"value": "<string>"
																		},
																		{
																			"description": "Address line 2 (Apartment/Suite/Unit/Building).",
																			"key": "address_line2",
																			"value": "<string>"
																		},
																		{
																			"description": "State/County/Province/Region.",
																			"key": "address_state",
																			"value": "<string>"
																		},
																		{
																			"description": "ZIP or postal code",
																			"key": "address_zip",
																			"value": "<string>"
																		},
																		{
																			"description": "Two digit number representing the card’s expiration month.",
																			"key": "exp_month",
																			"value": "<string>"
																		},
																		{
																			"description": "Four digit number representing the card’s expiration year.",
																			"key": "exp_year",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "Cardholder name.",
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][city]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][country]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line1]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][line2]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][postal_code]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[address][state]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[email]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[name]",
																			"value": "<string>"
																		},
																		{
																			"key": "owner[phone]",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the card to be updated."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Verify Customer Source",
													"id": "e9094c00-bdf4-4ae4-b3ea-6f5646336e65",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "amounts[0]",
																	"value": "-20584733",
																	"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account."
																},
																{
																	"key": "amounts[1]",
																	"value": "75793588",
																	"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account."
																},
																{
																	"key": "expand[0]",
																	"value": "laboris voluptate consequat",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "in laboris veniam",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "verification_method",
																	"value": "ex tempor exercitation"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources",
																":id",
																"verify"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source to be verified."
																}
															]
														}
													},
													"response": [
														{
															"id": "4d40c991-a984-4c47-8e2f-d22912221d76",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[0]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[1]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"key": "verification_method",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be verified."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
														},
														{
															"id": "bd0328f5-c83f-4a70-8cae-90661b8e555a",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[0]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.",
																			"key": "amounts[1]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"key": "verification_method",
																			"value": "<string>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/sources/:id/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"sources",
																		":id",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "id",
																			"value": "esse deserunt",
																			"description": "(Required) The ID of the source to be verified."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "2c53a622-bcac-418e-9deb-3125ff12da43"
										},
										{
											"name": "All Customer Sources",
											"id": "474f0cc6-19ae-44eb-868e-3cd9c69a4c64",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/sources?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse&type=esse deserunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"sources"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "adipisicing incididunt esse",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														},
														{
															"key": "type",
															"value": "esse deserunt"
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the customer whose sources will be retrieved."
														}
													]
												}
											},
											"response": [
												{
													"id": "c0aa5112-228f-4822-bef1-7a45cf589fa6",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose sources will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"application_icon\": \"<string>\",\n      \"application_logo\": \"<string>\",\n      \"application_name\": \"<string>\",\n      \"application_url\": \"<string>\",\n      \"business_logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_name\": \"<string>\",\n      \"business_url\": \"<string>\",\n      \"charges_enabled\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"debit_negative_balances\": \"<boolean>\",\n      \"decline_charge_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_currency\": \"<string>\",\n      \"details_submitted\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_accounts\": {\n        \"data\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"has_more\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"url\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"keys\": \"<object>\",\n      \"legal_entity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"payout_schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payout_statement_descriptor\": \"<string>\",\n      \"payouts_enabled\": \"<boolean>\",\n      \"product_description\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"support_phone\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"tos_acceptance\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"<string>\",\n      \"verification\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"application_icon\": \"<string>\",\n      \"application_logo\": \"<string>\",\n      \"application_name\": \"<string>\",\n      \"application_url\": \"<string>\",\n      \"business_logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"business_name\": \"<string>\",\n      \"business_url\": \"<string>\",\n      \"charges_enabled\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"debit_negative_balances\": \"<boolean>\",\n      \"decline_charge_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"default_currency\": \"<string>\",\n      \"details_submitted\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_accounts\": {\n        \"data\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"has_more\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"url\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"keys\": \"<object>\",\n      \"legal_entity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"payout_schedule\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"payout_statement_descriptor\": \"<string>\",\n      \"payouts_enabled\": \"<boolean>\",\n      \"product_description\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"support_email\": \"<string>\",\n      \"support_phone\": \"<string>\",\n      \"timezone\": \"<string>\",\n      \"tos_acceptance\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": \"<string>\",\n      \"verification\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "da854eea-3c90-4f24-b660-c9732ba47fa5",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose sources will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Customer Source",
											"id": "42bdf1ae-2bdf-40d3-b300-d4018d06c1e9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "exercitation non Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "voluptate in est Excepteur ad",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"sources"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p><p>If the card’s owner has no default card, then the new card will become the default.However, if the owner already has a default, then it will not change.To change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,or <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>"
											},
											"response": [
												{
													"id": "46a3682d-a75a-4a9e-975d-94ef5d2d0e87",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"country\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"account\": \"<string>\",\n  \"account_holder_name\": \"<string>\",\n  \"account_holder_type\": \"<string>\",\n  \"bank_name\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"fingerprint\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"routing_number\": \"<string>\"\n}"
												},
												{
													"id": "eff54359-01fd-4e92-a7c0-63702b80aac9",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"sources"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "cb55b299-c9e9-4f1f-a802-03b8055f61c4"
								},
								{
									"name": "subscriptions",
									"item": [
										{
											"name": "{subscription_exposed_id}",
											"item": [
												{
													"name": "discount",
													"item": [
														{
															"name": "Delete Customer Discount",
															"id": "ed5c9147-8f13-4320-875f-aacd56cfa6c6",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id",
																		"discount"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "<p>Removes the currently applied discount on a customer.</p>"
															},
															"response": [
																{
																	"id": "a909ad7a-fe5c-48a2-b7de-453726fae2bf",
																	"name": "Successful response.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"customers",
																				":customer",
																				"subscriptions",
																				":subscription_exposed_id",
																				"discount"
																			],
																			"variable": [
																				{
																					"key": "customer",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "subscription_exposed_id",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"deleted\": \"<boolean>\",\n  \"object\": \"<string>\"\n}"
																},
																{
																	"id": "ee32fc93-cdd9-4d52-8ee7-338beefe4f72",
																	"name": "Error response.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"customers",
																				":customer",
																				"subscriptions",
																				":subscription_exposed_id",
																				"discount"
																			],
																			"variable": [
																				{
																					"key": "customer",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "subscription_exposed_id",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Retrieve Customer Discount",
															"id": "82404a0c-8965-4feb-b772-8cbf00796408",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id",
																		"discount"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "enim Ut culpa ut",
																			"description": "Specifies which fields in the response should be expanded."
																		},
																		{
																			"key": "expand[1]",
																			"value": "cupidatat ullamco esse",
																			"description": "Specifies which fields in the response should be expanded."
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"id": "bd737d44-1e69-4a79-8655-8cbc015b68a7",
																	"name": "Successful response.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount?expand[0]=<string>&expand[1]=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"customers",
																				":customer",
																				"subscriptions",
																				":subscription_exposed_id",
																				"discount"
																			],
																			"query": [
																				{
																					"key": "expand[0]",
																					"value": "<string>"
																				},
																				{
																					"key": "expand[1]",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "customer",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "subscription_exposed_id",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"coupon\": {\n    \"created\": \"<unix-time>\",\n    \"duration\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"times_redeemed\": \"<integer>\",\n    \"valid\": \"<boolean>\",\n    \"amount_off\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"duration_in_months\": \"<integer>\",\n    \"max_redemptions\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"percent_off\": \"<number>\",\n    \"redeem_by\": \"<unix-time>\"\n  },\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"end\": \"<unix-time>\",\n  \"subscription\": \"<string>\"\n}"
																},
																{
																	"id": "e49f0752-2742-4e75-8495-1a4496a8b1fb",
																	"name": "Error response.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id/discount?expand[0]=<string>&expand[1]=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"customers",
																				":customer",
																				"subscriptions",
																				":subscription_exposed_id",
																				"discount"
																			],
																			"query": [
																				{
																					"key": "expand[0]",
																					"value": "<string>"
																				},
																				{
																					"key": "expand[1]",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "customer",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "subscription_exposed_id",
																					"value": "esse deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
																}
															]
														}
													],
													"id": "79e48eba-0b19-48ee-8a29-0077bbfdab53"
												},
												{
													"name": "Delete Customer Subscription",
													"id": "607e23a6-ccce-40cc-ae40-9bc71869d284",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "at_period_end",
																	"value": "true",
																	"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions",
																":subscription_exposed_id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "subscription_exposed_id",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "<p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p><p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p><p>By default, upon subscription cancellation, Stripe will close all unpaid invoices for the customer. This is designed to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can reopen the invoices manually after subscription cancellation to have us proceed with payment collection. Or, you could even re-attempt payment yourself on all unpaid invoices before allowing the customer to cancel the subscription at all.</p>"
													},
													"response": [
														{
															"id": "1385346b-a9bb-49f3-8f1c-e6f354125745",
															"name": "Successful response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period.",
																			"key": "at_period_end",
																			"value": "<boolean>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
														},
														{
															"id": "75b3d220-5994-4fff-9098-4fde5dd835ea",
															"name": "Error response.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period.",
																			"key": "at_period_end",
																			"value": "<boolean>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Retrieve Customer Subscription",
													"id": "e41023ae-35ca-4570-b634-b7c8d3593a95",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions",
																":subscription_exposed_id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "enim Ut culpa ut",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "cupidatat ullamco esse",
																	"description": "Specifies which fields in the response should be expanded."
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "subscription_exposed_id",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "<p>Retrieves the subscription with the given ID on the given customer.</p>"
													},
													"response": [
														{
															"id": "7421505f-c105-4c19-bd7d-5633155d139d",
															"name": "Successful response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subscription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interval\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interval_count\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"livemode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"usage_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"aggregate_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_scheme\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nickname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
														},
														{
															"id": "7afac0fa-a0e3-41d9-b1e1-69ab8e29330f",
															"name": "Error response.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id?expand[0]=<string>&expand[1]=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"query": [
																		{
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"key": "expand[1]",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Customer Subscription",
													"id": "bce1d4ac-daa5-4eaa-a50d-6bde7e95d400",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "application_fee_percent",
																	"value": "99728138.46227992",
																	"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions)."
																},
																{
																	"key": "billing",
																	"value": "charge_automatically",
																	"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`."
																},
																{
																	"key": "billing_cycle_anchor",
																	"value": "nulla deserun",
																	"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices."
																},
																{
																	"key": "cancel_at_period_end",
																	"value": "true",
																	"description": "Boolean indicating whether this subscription should cancel at the end of the current period."
																},
																{
																	"key": "coupon",
																	"value": "elit s",
																	"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription."
																},
																{
																	"key": "days_until_due",
																	"value": "3605760",
																	"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`."
																},
																{
																	"key": "expand[0]",
																	"value": "aute ad est cupidatat",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "expand[1]",
																	"value": "e",
																	"description": "Specifies which fields in the response should be expanded."
																},
																{
																	"key": "items[0][clear_usage]",
																	"value": "true",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[0][deleted]",
																	"value": "true",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[0][id]",
																	"value": "sint fugiat",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[0][plan]",
																	"value": "eiusmod ut",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[0][quantity]",
																	"value": "97218380",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[1][clear_usage]",
																	"value": "true",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[1][deleted]",
																	"value": "",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[1][id]",
																	"value": "deserunt in laboris",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[1][plan]",
																	"value": "dolor ut aliquip cupidatat",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "items[1][quantity]",
																	"value": "-33218042",
																	"description": "List of subscription items, each with an attached plan."
																},
																{
																	"key": "prorate",
																	"value": "true",
																	"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created."
																},
																{
																	"key": "proration_date",
																	"value": "-40648381",
																	"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations."
																},
																{
																	"key": "tax_percent",
																	"value": "-55533504.86406092",
																	"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string."
																},
																{
																	"key": "trial_end",
																	"value": "minim exercitation aliqua",
																	"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately."
																},
																{
																	"key": "trial_from_plan",
																	"value": "true",
																	"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions",
																":subscription_exposed_id"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the customer to subscribe."
																},
																{
																	"key": "subscription_exposed_id",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the subscription to update."
																}
															]
														},
														"description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>"
													},
													"response": [
														{
															"id": "2e376a1f-79d5-4ae7-b27d-9fa0cf0a579d",
															"name": "Successful response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
																			"key": "application_fee_percent",
																			"value": "<number>"
																		},
																		{
																			"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
																			"key": "billing",
																			"value": "<string>"
																		},
																		{
																			"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
																			"key": "billing_cycle_anchor",
																			"value": "<string>"
																		},
																		{
																			"description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
																			"key": "cancel_at_period_end",
																			"value": "<boolean>"
																		},
																		{
																			"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
																			"key": "coupon",
																			"value": "<string>"
																		},
																		{
																			"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
																			"key": "days_until_due",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][clear_usage]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][deleted]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][id]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][metadata]",
																			"value": "<object>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][plan]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][quantity]",
																			"value": "<integer>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][clear_usage]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][deleted]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][id]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][metadata]",
																			"value": "<object>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][plan]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][quantity]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
																			"key": "prorate",
																			"value": "<boolean>"
																		},
																		{
																			"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
																			"key": "proration_date",
																			"value": "<unix-time>"
																		},
																		{
																			"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
																			"key": "tax_percent",
																			"value": "<number>"
																		},
																		{
																			"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
																			"key": "trial_end",
																			"value": "<string>"
																		},
																		{
																			"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
																			"key": "trial_from_plan",
																			"value": "<boolean>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) The identifier of the customer to subscribe."
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) The identifier of the subscription to update."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
														},
														{
															"id": "1865b099-cb02-4129-bf0d-09610e360b0b",
															"name": "Error response.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
																			"key": "application_fee_percent",
																			"value": "<number>"
																		},
																		{
																			"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
																			"key": "billing",
																			"value": "<string>"
																		},
																		{
																			"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
																			"key": "billing_cycle_anchor",
																			"value": "<string>"
																		},
																		{
																			"description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
																			"key": "cancel_at_period_end",
																			"value": "<boolean>"
																		},
																		{
																			"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
																			"key": "coupon",
																			"value": "<string>"
																		},
																		{
																			"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
																			"key": "days_until_due",
																			"value": "<integer>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[0]",
																			"value": "<string>"
																		},
																		{
																			"description": "Specifies which fields in the response should be expanded.",
																			"key": "expand[1]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][clear_usage]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][deleted]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][id]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][metadata]",
																			"value": "<object>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][plan]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[0][quantity]",
																			"value": "<integer>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][clear_usage]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][deleted]",
																			"value": "<boolean>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][id]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][metadata]",
																			"value": "<object>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][plan]",
																			"value": "<string>"
																		},
																		{
																			"description": "List of subscription items, each with an attached plan.",
																			"key": "items[1][quantity]",
																			"value": "<integer>"
																		},
																		{
																			"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
																			"key": "prorate",
																			"value": "<boolean>"
																		},
																		{
																			"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
																			"key": "proration_date",
																			"value": "<unix-time>"
																		},
																		{
																			"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
																			"key": "tax_percent",
																			"value": "<number>"
																		},
																		{
																			"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
																			"key": "trial_end",
																			"value": "<string>"
																		},
																		{
																			"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
																			"key": "trial_from_plan",
																			"value": "<boolean>"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions/:subscription_exposed_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"customers",
																		":customer",
																		"subscriptions",
																		":subscription_exposed_id"
																	],
																	"variable": [
																		{
																			"key": "customer",
																			"value": "esse deserunt",
																			"description": "(Required) The identifier of the customer to subscribe."
																		},
																		{
																			"key": "subscription_exposed_id",
																			"value": "esse deserunt",
																			"description": "(Required) The identifier of the subscription to update."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
														}
													]
												}
											],
											"id": "415a203a-0414-4d1a-a7ef-80f2045bb459"
										},
										{
											"name": "All Customer Subscriptions",
											"id": "70a9b530-46ea-4a22-b1c0-281b59c0da55",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"subscriptions"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the customer whose subscriptions will be retrieved."
														}
													]
												},
												"description": "<p>You can see a list of the customer’s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>"
											},
											"response": [
												{
													"id": "83d7c050-5af3-457a-8121-704a543ed604",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose subscriptions will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"cancel_at_period_end\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"customer\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"start\": \"<unix-time>\",\n      \"status\": \"<string>\",\n      \"application_fee_percent\": \"<number>\",\n      \"billing\": \"<string>\",\n      \"billing_cycle_anchor\": \"<unix-time>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"current_period_end\": \"<unix-time>\",\n      \"current_period_start\": \"<unix-time>\",\n      \"days_until_due\": \"<integer>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ended_at\": \"<unix-time>\",\n      \"items\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"trial_end\": \"<unix-time>\",\n      \"trial_start\": \"<unix-time>\"\n    },\n    {\n      \"cancel_at_period_end\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"customer\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"start\": \"<unix-time>\",\n      \"status\": \"<string>\",\n      \"application_fee_percent\": \"<number>\",\n      \"billing\": \"<string>\",\n      \"billing_cycle_anchor\": \"<unix-time>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"current_period_end\": \"<unix-time>\",\n      \"current_period_start\": \"<unix-time>\",\n      \"days_until_due\": \"<integer>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ended_at\": \"<unix-time>\",\n      \"items\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"trial_end\": \"<unix-time>\",\n      \"trial_start\": \"<unix-time>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "64d5226d-f093-4b2e-91a9-6def74dd220e",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the customer whose subscriptions will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Create Customer Subscription",
											"id": "e07c1191-b8c5-493f-a3a4-4b4451290982",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "application_fee_percent",
															"value": "-11465345.187463611",
															"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions)."
														},
														{
															"key": "billing",
															"value": "charge_automatically",
															"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`."
														},
														{
															"key": "billing_cycle_anchor",
															"value": "culpa",
															"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices."
														},
														{
															"key": "coupon",
															"value": "in occaecat eu",
															"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription."
														},
														{
															"key": "days_until_due",
															"value": "56236971",
															"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`."
														},
														{
															"key": "expand[0]",
															"value": "in Lorem",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "aliqua",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "items[0][plan]",
															"value": "aliqua",
															"description": "List of subscription items, each with an attached plan."
														},
														{
															"key": "items[0][quantity]",
															"value": "-25216574",
															"description": "List of subscription items, each with an attached plan."
														},
														{
															"key": "items[1][plan]",
															"value": "exercitation culpa nulla amet quis",
															"description": "List of subscription items, each with an attached plan."
														},
														{
															"key": "items[1][quantity]",
															"value": "-84689248",
															"description": "List of subscription items, each with an attached plan."
														},
														{
															"key": "prorate",
															"value": "false",
															"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created."
														},
														{
															"key": "tax_percent",
															"value": "57623819.74390659",
															"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string."
														},
														{
															"key": "trial_end",
															"value": "officia laboris Ut",
															"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately."
														},
														{
															"key": "trial_from_plan",
															"value": "true",
															"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed."
														},
														{
															"key": "trial_period_days",
															"value": "-94835748",
															"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer",
														"subscriptions"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to subscribe."
														}
													]
												},
												"description": "<p>Creates a new subscription on an existing customer.</p>"
											},
											"response": [
												{
													"id": "a3481f74-f0bf-404a-9e48-55415001aa72",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
																	"key": "application_fee_percent",
																	"value": "<number>"
																},
																{
																	"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
																	"key": "billing",
																	"value": "<string>"
																},
																{
																	"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
																	"key": "billing_cycle_anchor",
																	"value": "<string>"
																},
																{
																	"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
																	"key": "coupon",
																	"value": "<string>"
																},
																{
																	"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
																	"key": "days_until_due",
																	"value": "<integer>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[0][plan]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[0][quantity]",
																	"value": "<integer>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[1][plan]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[1][quantity]",
																	"value": "<integer>"
																},
																{
																	"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
																	"key": "prorate",
																	"value": "<boolean>"
																},
																{
																	"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
																	"key": "tax_percent",
																	"value": "<number>"
																},
																{
																	"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
																	"key": "trial_end",
																	"value": "<string>"
																},
																{
																	"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
																	"key": "trial_from_plan",
																	"value": "<boolean>"
																},
																{
																	"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan.",
																	"key": "trial_period_days",
																	"value": "<integer>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the customer to subscribe."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
												},
												{
													"id": "d2eb0ab0-df42-4154-9bbe-8812b19804e9",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
																	"key": "application_fee_percent",
																	"value": "<number>"
																},
																{
																	"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
																	"key": "billing",
																	"value": "<string>"
																},
																{
																	"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
																	"key": "billing_cycle_anchor",
																	"value": "<string>"
																},
																{
																	"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
																	"key": "coupon",
																	"value": "<string>"
																},
																{
																	"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
																	"key": "days_until_due",
																	"value": "<integer>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[0][plan]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[0][quantity]",
																	"value": "<integer>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[1][plan]",
																	"value": "<string>"
																},
																{
																	"description": "List of subscription items, each with an attached plan.",
																	"key": "items[1][quantity]",
																	"value": "<integer>"
																},
																{
																	"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
																	"key": "prorate",
																	"value": "<boolean>"
																},
																{
																	"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
																	"key": "tax_percent",
																	"value": "<number>"
																},
																{
																	"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
																	"key": "trial_end",
																	"value": "<string>"
																},
																{
																	"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
																	"key": "trial_from_plan",
																	"value": "<boolean>"
																},
																{
																	"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan.",
																	"key": "trial_period_days",
																	"value": "<integer>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/customers/:customer/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"customers",
																":customer",
																"subscriptions"
															],
															"variable": [
																{
																	"key": "customer",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the customer to subscribe."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "27913d60-6764-422a-acb3-9fd120f3a772"
								},
								{
									"name": "Delete Customer",
									"id": "b6bf2c37-b9cc-46aa-8f7b-0db22516aa06",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/customers/:customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers",
												":customer"
											],
											"variable": [
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the customer to be deleted."
												}
											]
										},
										"description": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>"
									},
									"response": [
										{
											"id": "fb88295a-3d6d-454a-a3c7-e93fc0f9c92a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "24b8f861-69d1-4c3e-aa4a-d3e5dcb77609",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Customer",
									"id": "73b2a0da-9b7f-43f7-af00-ac351512a8ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/customers/:customer?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers",
												":customer"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the customer to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>"
									},
									"response": [
										{
											"id": "3a11056d-304d-4d5d-8592-2c167de8ca79",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"sources\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"account_balance\": \"<integer>\",\n  \"business_vat_id\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"default_source\": \"<string>\",\n  \"delinquent\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subscription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"email\": \"<string>\",\n  \"invoice_prefix\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"subscriptions\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										},
										{
											"id": "597791aa-a91c-4a42-9549-385d2a8ae07d",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Customer Update",
									"id": "e13687d6-f95e-42b3-94ab-5335d43f81ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_balance",
													"value": "25524379",
													"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice."
												},
												{
													"key": "business_vat_id",
													"value": "occaecat quis",
													"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders."
												},
												{
													"key": "coupon",
													"value": "magna"
												},
												{
													"key": "default_alipay_account",
													"value": "ipsum",
													"description": "ID of Alipay account to make the customer's new default for invoice payments."
												},
												{
													"key": "default_bank_account",
													"value": "dolor sint",
													"description": "ID of bank account to make the customer's new default for invoice payments."
												},
												{
													"key": "default_card",
													"value": "ut culpa Duis Lorem",
													"description": "ID of card to make the customer's new default for invoice payments."
												},
												{
													"key": "default_source",
													"value": "veni",
													"description": "ID of the source to make the customer's new default."
												},
												{
													"key": "description",
													"value": "aliqua Excepteur id veniam",
													"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard."
												},
												{
													"key": "email",
													"value": "veniam",
													"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*."
												},
												{
													"key": "expand[0]",
													"value": "proident pariatur ullamco laborum cillum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "laborum enim deserunt dolor eiusmod",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "invoice_prefix",
													"value": "in",
													"description": "The prefix for the customer used to generate unique invoice numbers."
												},
												{
													"key": "shipping[address][line1]",
													"value": "quis labore"
												},
												{
													"key": "shipping[address][city]",
													"value": "ex minim commodo in"
												},
												{
													"key": "shipping[address][country]",
													"value": "nulla ea sint eiusmod in"
												},
												{
													"key": "shipping[address][line2]",
													"value": "pariatur fugiat id ipsum commodo"
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "aute eu"
												},
												{
													"key": "shipping[address][state]",
													"value": "culpa qui"
												},
												{
													"key": "shipping[name]",
													"value": "cillum"
												},
												{
													"key": "shipping[phone]",
													"value": "enim laborum"
												},
												{
													"key": "trial_end",
													"value": "veniam do aliqua magna consectetur",
													"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/customers/:customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers",
												":customer"
											],
											"variable": [
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the customer to subscribe."
												}
											]
										}
									},
									"response": [
										{
											"id": "ba8aa518-78a6-44d2-b98f-f4b97c12588c",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
															"key": "account_balance",
															"value": "<integer>"
														},
														{
															"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders.",
															"key": "business_vat_id",
															"value": "<string>"
														},
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "ID of Alipay account to make the customer's new default for invoice payments.",
															"key": "default_alipay_account",
															"value": "<string>"
														},
														{
															"description": "ID of bank account to make the customer's new default for invoice payments.",
															"key": "default_bank_account",
															"value": "<string>"
														},
														{
															"description": "ID of card to make the customer's new default for invoice payments.",
															"key": "default_card",
															"value": "<string>"
														},
														{
															"description": "ID of the source to make the customer's new default.",
															"key": "default_source",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The prefix for the customer used to generate unique invoice numbers.",
															"key": "invoice_prefix",
															"value": "<string>"
														},
														{
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"key": "shipping[phone]",
															"value": "<string>"
														},
														{
															"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
															"key": "trial_end",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to subscribe."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"sources\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"account_balance\": \"<integer>\",\n  \"business_vat_id\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"default_source\": \"<string>\",\n  \"delinquent\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"email\": \"<string>\",\n  \"invoice_prefix\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\"\n  },\n  \"subscriptions\": {\n    \"data\": [\n      {\n        \"cancel_at_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_cycle_anchor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"canceled_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"days_until_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ended_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tax_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"cancel_at_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_cycle_anchor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"canceled_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"days_until_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ended_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tax_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										},
										{
											"id": "58d39df6-3533-492f-a749-6250a189207c",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
															"key": "account_balance",
															"value": "<integer>"
														},
														{
															"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders.",
															"key": "business_vat_id",
															"value": "<string>"
														},
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "ID of Alipay account to make the customer's new default for invoice payments.",
															"key": "default_alipay_account",
															"value": "<string>"
														},
														{
															"description": "ID of bank account to make the customer's new default for invoice payments.",
															"key": "default_bank_account",
															"value": "<string>"
														},
														{
															"description": "ID of card to make the customer's new default for invoice payments.",
															"key": "default_card",
															"value": "<string>"
														},
														{
															"description": "ID of the source to make the customer's new default.",
															"key": "default_source",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The prefix for the customer used to generate unique invoice numbers.",
															"key": "invoice_prefix",
															"value": "<string>"
														},
														{
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"key": "shipping[phone]",
															"value": "<string>"
														},
														{
															"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
															"key": "trial_end",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/customers/:customer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"customers",
														":customer"
													],
													"variable": [
														{
															"key": "customer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the customer to subscribe."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "fb2d493c-4b42-4f5d-a1d7-16782cdd6fbd"
						},
						{
							"name": "All Customers",
							"id": "26f4f473-41c4-4d74-8da1-688d1bdab0a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/customers?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&email=sunt fugiat Ut eiusmod&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "email",
											"value": "sunt fugiat Ut eiusmod",
											"description": "A filter on the list based on the customer's `email` field. The value must be a string."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>"
							},
							"response": [
								{
									"id": "af79d85e-17d9-436b-bf52-14abf033b9f7",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/customers?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&email=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"sources\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"account_balance\": \"<integer>\",\n      \"business_vat_id\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"default_source\": \"<string>\",\n      \"delinquent\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": \"<string>\",\n      \"invoice_prefix\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subscriptions\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"sources\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"account_balance\": \"<integer>\",\n      \"business_vat_id\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"default_source\": \"<string>\",\n      \"delinquent\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": \"<string>\",\n      \"invoice_prefix\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subscriptions\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "a39a627c-30cd-48a2-8d79-25587ea4ec7a",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/customers?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&email=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Customer Create",
							"id": "f2c399dc-e0d1-4bb0-a999-b66b756ca063",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_balance",
											"value": "-97125229",
											"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice."
										},
										{
											"key": "business_vat_id",
											"value": "veniam pariatur labore ut",
											"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders."
										},
										{
											"key": "coupon",
											"value": "qui anim dolore aliquip"
										},
										{
											"key": "customer",
											"value": "Excepteur"
										},
										{
											"key": "default_source",
											"value": "elit",
											"description": "ID of the source to make the customer's new default."
										},
										{
											"key": "description",
											"value": "in eiusmod",
											"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard."
										},
										{
											"key": "email",
											"value": "deserunt fugiat",
											"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*."
										},
										{
											"key": "expand[0]",
											"value": "ipsum Ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "est esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "id",
											"value": "id voluptate",
											"description": "A custom ID to use for the customer"
										},
										{
											"key": "invoice_prefix",
											"value": "anim eiusmod",
											"description": "The prefix for the customer used to generate unique invoice numbers."
										},
										{
											"key": "shipping[address][line1]",
											"value": "enim Excepteur est in"
										},
										{
											"key": "shipping[address][city]",
											"value": "enim exercitation consequat"
										},
										{
											"key": "shipping[address][country]",
											"value": "esse sit"
										},
										{
											"key": "shipping[address][line2]",
											"value": "mollit dolor aliquip veniam"
										},
										{
											"key": "shipping[address][postal_code]",
											"value": "eiusmod dolore deserunt"
										},
										{
											"key": "shipping[address][state]",
											"value": "quis"
										},
										{
											"key": "shipping[name]",
											"value": "pariatur tempor"
										},
										{
											"key": "shipping[phone]",
											"value": "aute id"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customers"
									]
								},
								"description": "<p>Creates a new customer object.</p>"
							},
							"response": [
								{
									"id": "0d828e4d-4d43-4209-bb70-538b30c6d891",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
													"key": "account_balance",
													"value": "<integer>"
												},
												{
													"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders.",
													"key": "business_vat_id",
													"value": "<string>"
												},
												{
													"key": "coupon",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "ID of the source to make the customer's new default.",
													"key": "default_source",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "A custom ID to use for the customer",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The prefix for the customer used to generate unique invoice numbers.",
													"key": "invoice_prefix",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"key": "shipping[phone]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/customers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"sources\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"account_balance\": \"<integer>\",\n  \"business_vat_id\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"default_source\": \"<string>\",\n  \"delinquent\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"email\": \"<string>\",\n  \"invoice_prefix\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\"\n  },\n  \"subscriptions\": {\n    \"data\": [\n      {\n        \"cancel_at_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_cycle_anchor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"canceled_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"days_until_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ended_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tax_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"cancel_at_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_cycle_anchor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"canceled_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"current_period_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"days_until_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ended_at\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tax_percent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
								},
								{
									"id": "ad9c17c7-609a-4236-a61c-aff80ab48597",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "An integer amount in %s that represents the account balance for your customer. Account balances only affect invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
													"key": "account_balance",
													"value": "<integer>"
												},
												{
													"description": "The customer's VAT identification number. This field is copied to issued invoices. If you are using the Orders API, this field gets passed to the tax provider you are using for your orders.",
													"key": "business_vat_id",
													"value": "<string>"
												},
												{
													"key": "coupon",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "ID of the source to make the customer's new default.",
													"key": "default_source",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "A custom ID to use for the customer",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The prefix for the customer used to generate unique invoice numbers.",
													"key": "invoice_prefix",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"key": "shipping[phone]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/customers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"customers"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "6283cea3-f7d4-447b-ba73-efb68097409d"
				},
				{
					"name": "disputes",
					"item": [
						{
							"name": "{dispute}",
							"item": [
								{
									"name": "Retrieve Dispute",
									"id": "35583f39-8b30-48e9-82bb-641696ca93fd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/disputes/:dispute?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"disputes",
												":dispute"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "dispute",
													"value": "esse deserunt",
													"description": "(Required) ID of dispute to retrieve."
												}
											]
										},
										"description": "<p>Retrieves the dispute with the given ID.</p>"
									},
									"response": [
										{
											"id": "c25eb6fb-406a-4918-bfc9-f2d500d11b71",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of dispute to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
										},
										{
											"id": "9e931093-6ea1-466c-ac03-715ca5de04f5",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of dispute to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Dispute",
									"id": "be717521-f03d-47a1-bde5-e5ed054880c8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "evidence[access_activity_log]",
													"value": "velit",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[billing_address]",
													"value": "velit proident",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[cancellation_policy]",
													"value": "culpa deseru",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[cancellation_policy_disclosure]",
													"value": "ut pariatur occaecat velit",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[cancellation_rebuttal]",
													"value": "cupidatat do",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[customer_communication]",
													"value": "dolore in la",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[customer_email_address]",
													"value": "sunt pariatur sint ipsum cupidatat",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[customer_name]",
													"value": "culpa Excepteur",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[customer_purchase_ip]",
													"value": "sint Lorem",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[customer_signature]",
													"value": "proident incididu",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[duplicate_charge_documentation]",
													"value": "ipsum officia",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[duplicate_charge_explanation]",
													"value": "deserunt",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[duplicate_charge_id]",
													"value": "magna cillum",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[product_description]",
													"value": "dolore anim",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[receipt]",
													"value": "cupidatat ",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[refund_policy]",
													"value": "Excepteur cupid",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[refund_policy_disclosure]",
													"value": "ex",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[refund_refusal_explanation]",
													"value": "cupidatat Ut",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[service_date]",
													"value": "aliqua aute do",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[service_documentation]",
													"value": "amet sunt tempor quis",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[shipping_address]",
													"value": "enim ex in velit",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[shipping_carrier]",
													"value": "sint ut",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[shipping_date]",
													"value": "ut dolor",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[shipping_documentation]",
													"value": "Ut consectetur in ex",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[shipping_tracking_number]",
													"value": "consectetur",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[uncategorized_file]",
													"value": "quis",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "evidence[uncategorized_text]",
													"value": "labore",
													"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000."
												},
												{
													"key": "expand[0]",
													"value": "culpa ad cillum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "proident consectetur mollit deserunt",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "submit",
													"value": "true",
													"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default)."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/disputes/:dispute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"disputes",
												":dispute"
											],
											"variable": [
												{
													"key": "dispute",
													"value": "esse deserunt",
													"description": "(Required) ID of the dispute to update."
												}
											]
										},
										"description": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p><p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>"
									},
									"response": [
										{
											"id": "85ca5d73-c375-4a84-bc17-d4d9e1c67ef0",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[access_activity_log]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[billing_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_policy]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_policy_disclosure]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_rebuttal]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_communication]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_email_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_name]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_purchase_ip]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_signature]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_explanation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_id]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[product_description]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[receipt]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_policy]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_policy_disclosure]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_refusal_explanation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[service_date]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[service_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_carrier]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_date]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_tracking_number]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[uncategorized_text]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
															"key": "submit",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute"
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of the dispute to update."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
										},
										{
											"id": "1fceb703-3f5a-4ce3-9551-3ad5ebd3cd4e",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[access_activity_log]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[billing_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_policy]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_policy_disclosure]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[cancellation_rebuttal]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_communication]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_email_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_name]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_purchase_ip]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[customer_signature]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_explanation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[duplicate_charge_id]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[product_description]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[receipt]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_policy]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_policy_disclosure]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[refund_refusal_explanation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[service_date]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[service_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_address]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_carrier]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_date]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_documentation]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[shipping_tracking_number]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.",
															"key": "evidence[uncategorized_text]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).",
															"key": "submit",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute"
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of the dispute to update."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Close Dispute",
									"id": "0d42ed69-0d4a-47b5-801a-b7d5873076c9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/disputes/:dispute/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"disputes",
												":dispute",
												"close"
											],
											"variable": [
												{
													"key": "dispute",
													"value": "esse deserunt",
													"description": "(Required) ID of the dispute to close."
												}
											]
										},
										"description": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p><p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>"
									},
									"response": [
										{
											"id": "09774ee8-53e2-43c5-810f-9c72668733d7",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute",
														"close"
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of the dispute to close."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"available_on\": \"<unix-time>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"fee\": \"<integer>\",\n      \"fee_details\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"<string>\",\n      \"net\": \"<integer>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"exchange_rate\": \"<number>\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"access_activity_log\": \"<string>\",\n    \"billing_address\": \"<string>\",\n    \"cancellation_policy\": \"<string>\",\n    \"cancellation_policy_disclosure\": \"<string>\",\n    \"cancellation_rebuttal\": \"<string>\",\n    \"customer_communication\": \"<string>\",\n    \"customer_email_address\": \"<string>\",\n    \"customer_name\": \"<string>\",\n    \"customer_purchase_ip\": \"<string>\",\n    \"customer_signature\": \"<string>\",\n    \"duplicate_charge_documentation\": \"<string>\",\n    \"duplicate_charge_explanation\": \"<string>\",\n    \"duplicate_charge_id\": \"<string>\",\n    \"product_description\": \"<string>\",\n    \"receipt\": \"<string>\",\n    \"refund_policy\": \"<string>\",\n    \"refund_policy_disclosure\": \"<string>\",\n    \"refund_refusal_explanation\": \"<string>\",\n    \"service_date\": \"<string>\",\n    \"service_documentation\": \"<string>\",\n    \"shipping_address\": \"<string>\",\n    \"shipping_carrier\": \"<string>\",\n    \"shipping_date\": \"<string>\",\n    \"shipping_documentation\": \"<string>\",\n    \"shipping_tracking_number\": \"<string>\",\n    \"uncategorized_file\": \"<string>\",\n    \"uncategorized_text\": \"<string>\"\n  },\n  \"evidence_details\": {\n    \"has_evidence\": \"<boolean>\",\n    \"past_due\": \"<boolean>\",\n    \"submission_count\": \"<integer>\",\n    \"due_by\": \"<unix-time>\"\n  },\n  \"id\": \"<string>\",\n  \"is_charge_refundable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\"\n}"
										},
										{
											"id": "6488cb94-d5cb-4960-a4d5-849b39c03e84",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/disputes/:dispute/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"disputes",
														":dispute",
														"close"
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) ID of the dispute to close."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "7ba20031-5d82-45eb-b38d-7fdcfe8fcc48"
						},
						{
							"name": "All Disputes",
							"id": "83fb6266-cd89-4cf4-8701-3833839d29cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/disputes?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"disputes"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your disputes.</p>"
							},
							"response": [
								{
									"id": "8369e39e-5001-41a0-b621-2a66f34bb788",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/disputes?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"disputes"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"balance_transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"evidence\": {\n        \"access_activity_log\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_policy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_policy_disclosure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_rebuttal\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_communication\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_email_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_purchase_ip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_signature\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_explanation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"product_description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_policy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_policy_disclosure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_refusal_explanation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"service_date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"service_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_carrier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_tracking_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uncategorized_file\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uncategorized_text\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"evidence_details\": {\n        \"has_evidence\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"past_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"submission_count\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"due_by\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"is_charge_refundable\": \"<boolean>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"balance_transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"evidence\": {\n        \"access_activity_log\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_policy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_policy_disclosure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cancellation_rebuttal\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_communication\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_email_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_purchase_ip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer_signature\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_explanation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"duplicate_charge_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"product_description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_policy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_policy_disclosure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund_refusal_explanation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"service_date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"service_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_carrier\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_date\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_documentation\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping_tracking_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uncategorized_file\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"uncategorized_text\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"evidence_details\": {\n        \"has_evidence\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"past_due\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"submission_count\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"due_by\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"is_charge_refundable\": \"<boolean>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"status\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "2499ec52-e547-4f1b-9f6b-8bc932605c21",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/disputes?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"disputes"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "6e18f691-b6eb-4e29-9a00-fdbf77ecd911"
				},
				{
					"name": "ephemeral_keys",
					"item": [
						{
							"name": "Create Ephemeral Key",
							"id": "dc84a76b-b2b5-416c-9b5a-9c52959bc25f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "enim laborum fugiat",
											"description": "(Required) The ID of the Customer you'd like to modify using the resulting ephemeral key."
										},
										{
											"key": "expand[0]",
											"value": "id magna commodo in in",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "ut quis ea ut occaecat",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ephemeral_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ephemeral_keys"
									]
								},
								"description": "<p>Creates a short-lived API key for a given resource.</p>"
							},
							"response": [
								{
									"id": "3cb8f98f-33fc-4d05-a911-46c2eb4e811f",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The ID of the Customer you'd like to modify using the resulting ephemeral key.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ephemeral_keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ephemeral_keys"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"expires\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"secret\": \"<string>\"\n}"
								},
								{
									"id": "8bb1837c-6e9a-4cb2-b1b3-9c6a9badd4a9",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The ID of the Customer you'd like to modify using the resulting ephemeral key.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ephemeral_keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ephemeral_keys"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Ephemeral Key",
							"id": "918bb6f3-e796-40fd-9cdf-c5b1a181a688",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ephemeral_keys/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ephemeral_keys",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "esse deserunt",
											"description": "(Required) The ID of the key you'd like to invalidate."
										}
									]
								},
								"description": "<p>Invalidates a short-lived API key for a given resource.</p>"
							},
							"response": [
								{
									"id": "b73d902b-eac7-451e-9925-9dbd02a32bf9",
									"name": "Successful response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ephemeral_keys/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ephemeral_keys",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "esse deserunt",
													"description": "(Required) The ID of the key you'd like to invalidate."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"expires\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"secret\": \"<string>\"\n}"
								},
								{
									"id": "e131354e-c382-4682-b6f4-f725f2112a07",
									"name": "Error response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ephemeral_keys/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ephemeral_keys",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "esse deserunt",
													"description": "(Required) The ID of the key you'd like to invalidate."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "9e745b1d-f5f4-430f-b296-860e480f6420"
				},
				{
					"name": "events",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Notification Event Retrieve",
									"id": "66348229-81fa-4e2c-9e66-da45427db65e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/events/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"events",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the event to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>"
									},
									"response": [
										{
											"id": "1e78b629-8bc4-4ff9-b457-b7156a36e213",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/events/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"events",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the event to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"data\": {\n    \"object\": \"<object>\",\n    \"previous_attributes\": \"<object>\"\n  },\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"pending_webhooks\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"api_version\": \"<string>\",\n  \"request\": {\n    \"id\": \"<string>\",\n    \"idempotency_key\": \"<string>\"\n  }\n}"
										},
										{
											"id": "5c96d776-ca3f-4b09-b9f3-dcbedbd29dc8",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/events/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"events",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the event to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Notification Event Retry",
									"id": "6bb08197-1e0b-424a-b4e2-92853841ed67",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/events/:id/retry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"events",
												":id",
												"retry"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Resend an event. This only works in testmode</p>"
									},
									"response": [
										{
											"id": "39ee9fe5-075e-46cd-9946-22149356dd09",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/events/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"events",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"data\": {\n    \"object\": \"<object>\",\n    \"previous_attributes\": \"<object>\"\n  },\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"pending_webhooks\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"api_version\": \"<string>\",\n  \"request\": {\n    \"id\": \"<string>\",\n    \"idempotency_key\": \"<string>\"\n  }\n}"
										},
										{
											"id": "6b77cbdf-3914-4821-aa56-b49aa86cbd16",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/events/:id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"events",
														":id",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "534e3f64-d50d-4998-96ce-0216b608e7b1"
						},
						{
							"name": "Notification Event All",
							"id": "79fb9b38-4acc-4e36-854f-abbad176649a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/events?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&delivery_success=true&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&type=esse deserunt&types[0]=enim Ut culpa ut&types[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"events"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "delivery_success",
											"value": "true",
											"description": "Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "type",
											"value": "esse deserunt",
											"description": "A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property."
										},
										{
											"key": "types[0]",
											"value": "enim Ut culpa ut",
											"description": "An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both."
										},
										{
											"key": "types[1]",
											"value": "cupidatat ullamco esse",
											"description": "An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both."
										}
									]
								},
								"description": "<p>List events, going back up to 30 days.</p>"
							},
							"response": [
								{
									"id": "294d1104-8639-4087-9463-730a4919d818",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/events?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&delivery_success=<boolean>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>&types[0]=<string>&types[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"events"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "delivery_success",
													"value": "<boolean>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "types[0]",
													"value": "<string>"
												},
												{
													"key": "types[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"data\": {\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"previous_attributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"pending_webhooks\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"api_version\": \"<string>\",\n      \"request\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"data\": {\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"previous_attributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"pending_webhooks\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"api_version\": \"<string>\",\n      \"request\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "de2627c5-8beb-461b-a1f5-b7f6befe3fcd",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/events?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&delivery_success=<boolean>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>&types[0]=<string>&types[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"events"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "delivery_success",
													"value": "<boolean>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "types[0]",
													"value": "<string>"
												},
												{
													"key": "types[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "3af6f46c-bc78-4057-9eab-5824756966db"
				},
				{
					"name": "exchange_rates",
					"item": [
						{
							"name": "All Exchange Rate",
							"id": "c03a7b09-8dcf-4229-b1e1-6f3ed71adf72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/exchange_rates?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"exchange_rates"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>"
							},
							"response": [
								{
									"id": "7ca7f40a-4ecd-40b5-ad9a-fea49498ab30",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/exchange_rates?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"exchange_rates"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"rates\": \"<object>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"rates\": \"<object>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "af75cb4f-6a9b-401d-b197-631f5a8ef58c",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/exchange_rates?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"exchange_rates"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Exchange Rate",
							"id": "79e86029-9cbe-4f71-a6dd-72ab092e55bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/exchange_rates/:currency?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"exchange_rates",
										":currency"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "currency",
											"value": "ul",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										}
									]
								},
								"description": "<p>Retrieves the exchange rates from the given currency to every supported currency.</p>"
							},
							"response": [
								{
									"id": "aeda020e-94b5-4f53-9bf4-a910c16ae433",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/exchange_rates/:currency?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"exchange_rates",
												":currency"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "currency",
													"value": "ul",
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"rates\": \"<object>\"\n}"
								},
								{
									"id": "7e030590-4516-44f2-8b88-e4221e89aafb",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/exchange_rates/:currency?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"exchange_rates",
												":currency"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "currency",
													"value": "ul",
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "db7e2059-05de-4aa4-90af-29cf0a3365fb"
				},
				{
					"name": "file_links",
					"item": [
						{
							"name": "{link}",
							"item": [
								{
									"name": "File File Link Retrieve",
									"id": "2298f094-a665-4e33-8d2b-a7be7cb295fc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/file_links/:link?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links",
												":link"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "link",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The identifier of the file link to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the file link with the given ID.</p>"
									},
									"response": [
										{
											"id": "7fd39b77-51d6-42b4-877d-10c8d199c1b7",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/file_links/:link?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"file_links",
														":link"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "link",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The identifier of the file link to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"expired\": \"<boolean>\",\n  \"file\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"expires_at\": \"<unix-time>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "a6b09b1a-ce2f-4d2c-85db-4d3d072ed373",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/file_links/:link?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"file_links",
														":link"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "link",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The identifier of the file link to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "File File Link Update",
									"id": "ade174ff-33e6-44dc-8001-5f4d0c231f03",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "aliquip labore amet",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ea non",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/file_links/:link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links",
												":link"
											],
											"variable": [
												{
													"key": "link",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the file link."
												}
											]
										},
										"description": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>"
									},
									"response": [
										{
											"id": "0177a536-a995-4d6c-b02b-08a6e69c3324",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/file_links/:link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"file_links",
														":link"
													],
													"variable": [
														{
															"key": "link",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the file link."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"expired\": \"<boolean>\",\n  \"file\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"expires_at\": \"<unix-time>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "cb42c071-eaf3-4680-89d0-04009f934f8a",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/file_links/:link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"file_links",
														":link"
													],
													"variable": [
														{
															"key": "link",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the file link."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "e27806a5-cafe-4902-81bb-6d9819c9052a"
						},
						{
							"name": "File File Link All",
							"id": "e7a0734f-49cc-4504-af66-7101faa5e107",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/file_links?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&expired=true&file=esse deserunt&limit=66746697&starting_after=adipisicing incididunt esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"file_links"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expired",
											"value": "true",
											"description": "Filter links by their expiration status. By default, all links are returned."
										},
										{
											"key": "file",
											"value": "esse deserunt",
											"description": "Only return links for the given file."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of file links.</p>"
							},
							"response": [
								{
									"id": "35a6bf74-951b-48c3-a7f2-65532dba1bae",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/file_links?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&expired=<boolean>&file=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "expired",
													"value": "<boolean>"
												},
												{
													"key": "file",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"expired\": \"<boolean>\",\n      \"file\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"expires_at\": \"<unix-time>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"expired\": \"<boolean>\",\n      \"file\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"expires_at\": \"<unix-time>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "3e403d7d-58c3-4542-bcff-cf966120bcab",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/file_links?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&expired=<boolean>&file=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "expired",
													"value": "<boolean>"
												},
												{
													"key": "file",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "File File Link Create",
							"id": "0be70df4-35f1-401c-acbd-d06652f22484",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "file",
											"value": "id ipsum deserunt quis",
											"description": "(Required) The ID of the file."
										},
										{
											"key": "expand[0]",
											"value": "nisi ut esse dolore",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "minim do",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expires_at",
											"value": "86536709",
											"description": "A future timestamp after which the link will no longer be usable."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/file_links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"file_links"
									]
								},
								"description": "<p>Creates a new file link object.</p>"
							},
							"response": [
								{
									"id": "7e254113-6265-40f6-976f-8be03d5d4d1d",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The ID of the file.",
													"key": "file",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "A future timestamp after which the link will no longer be usable.",
													"key": "expires_at",
													"value": "<unix-time>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/file_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"expired\": \"<boolean>\",\n  \"file\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"expires_at\": \"<unix-time>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "52aa3c32-5ee5-44f5-816c-0c2f8991c027",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The ID of the file.",
													"key": "file",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "A future timestamp after which the link will no longer be usable.",
													"key": "expires_at",
													"value": "<unix-time>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/file_links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"file_links"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "f2ec022e-1371-4ce6-82a0-3e2c7c6c6e02"
				},
				{
					"name": "files",
					"item": [
						{
							"name": "File File Upload All",
							"id": "52aba284-74ea-4bb8-b39c-69c8fd6d3ba1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/files?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&purpose=product_feed&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"files"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "purpose",
											"value": "product_feed",
											"description": "The file purpose to filter queries by. If none is provided, files will not be filtered by purpose."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of the files that you have uploaded to Stripe. The file uploads are returned sorted by creation date, with the most recently created file uploads appearing first.</p>"
							},
							"response": [
								{
									"id": "e44e4a87-a789-4e11-a3f5-4e1401821673",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/files?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&purpose=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"files"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "purpose",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "8c5b8632-a98f-4308-84fd-63bf6ca3962f",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/files?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&purpose=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"files"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "purpose",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "File File Upload Create",
							"id": "ca50b552-c514-4009-8688-18517bbf8c38",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "consequat et ea esse",
											"type": "text",
											"description": "(Required) A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the `multipart/form-data` protocol)."
										},
										{
											"key": "purpose",
											"value": "pci_document",
											"type": "text",
											"description": "(Required) The purpose of the uploaded file. Possible values are `business_logo`, `customer_signature`, `dispute_evidence`, `identity_document`, `pci_document`, or `tax_document_user_upload` (This can only be one of business_logo,customer_signature,dispute_evidence,identity_document,pci_document,tax_document_user_upload)"
										},
										{
											"key": "expand",
											"value": "[\"ea cillum id amet\",\"mollit\"]",
											"type": "text",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "https://files.stripe.com/v1/files",
									"protocol": "https",
									"host": [
										"files",
										"stripe",
										"com"
									],
									"path": [
										"v1",
										"files"
									]
								},
								"description": "<p>To upload a file to Stripe, you’ll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p><p>All of Stripe’s officially supported API libraries should have support for sending <code>multipart/form-data</code>.</p>"
							},
							"response": [
								{
									"id": "66645af5-fc7f-4154-b967-3da6a3ad6c40",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "(Required) A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the `multipart/form-data` protocol).",
													"key": "file",
													"value": "<string>",
													"type": "text"
												},
												{
													"description": "(Required) The purpose of the uploaded file. Possible values are `business_logo`, `customer_signature`, `dispute_evidence`, `identity_document`, `pci_document`, or `tax_document_user_upload` (This can only be one of business_logo,customer_signature,dispute_evidence,identity_document,pci_document,tax_document_user_upload)",
													"key": "purpose",
													"value": "<string>",
													"type": "text"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand",
													"value": "[\"<string>\",\"<string>\"]",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://files.stripe.com/v1/files",
											"protocol": "https",
											"host": [
												"files",
												"stripe",
												"com"
											],
											"path": [
												"v1",
												"files"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"purpose\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "19984cb5-00a8-47d6-b80f-ff10872e2fd4",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "(Required) A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the `multipart/form-data` protocol).",
													"key": "file",
													"value": "<string>",
													"type": "text"
												},
												{
													"description": "(Required) The purpose of the uploaded file. Possible values are `business_logo`, `customer_signature`, `dispute_evidence`, `identity_document`, `pci_document`, or `tax_document_user_upload` (This can only be one of business_logo,customer_signature,dispute_evidence,identity_document,pci_document,tax_document_user_upload)",
													"key": "purpose",
													"value": "<string>",
													"type": "text"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand",
													"value": "[\"<string>\",\"<string>\"]",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://files.stripe.com/v1/files",
											"protocol": "https",
											"host": [
												"files",
												"stripe",
												"com"
											],
											"path": [
												"v1",
												"files"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "File File Upload Retrieve",
							"id": "51a139b3-3c05-47cc-aa9e-938c54001dfd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/files/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"files",
										":id"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "esse deserunt",
											"description": "(Required) The identifier of the file upload to be retrieved."
										}
									]
								},
								"description": "<p>Retrieves the details of an existing file object. Supply the unique file upload ID from a file creation request, and Stripe will return the corresponding transfer information.</p>"
							},
							"response": [
								{
									"id": "a399dab1-126b-4345-84bf-b21149e4d2f8",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/files/:id?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"files",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the file upload to be retrieved."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"purpose\": \"<string>\",\n  \"size\": \"<integer>\",\n  \"filename\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "c5d5173d-46ee-40b2-abc5-c5e54e4981ec",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/files/:id?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"files",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the file upload to be retrieved."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "f3235eb0-3b24-431d-bc0b-40160c667d4b"
				},
				{
					"name": "invoiceitems",
					"item": [
						{
							"name": "{invoiceitem}",
							"item": [
								{
									"name": "Delete Invoice Item",
									"id": "0f12bea5-a876-4ab4-b72b-b976e3695a83",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems",
												":invoiceitem"
											],
											"variable": [
												{
													"key": "invoiceitem",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the invoice item to be deleted."
												}
											]
										},
										"description": "<p>Removes an invoice item from the upcoming invoice. Removing an invoice item is only possible before the invoice it’s attached to is closed.</p>"
									},
									"response": [
										{
											"id": "250c56fa-12b6-4515-82cf-71b0022a84a7",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the invoice item to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\"\n}"
										},
										{
											"id": "39aeffb1-6180-48c5-a799-0ba3e6333618",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the invoice item to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Invoice Item",
									"id": "e3195c0d-9e0c-4748-8d33-576efbc5fd01",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems",
												":invoiceitem"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "invoiceitem",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired invoice item."
												}
											]
										},
										"description": "<p>Retrieves the invoice item with the given ID.</p>"
									},
									"response": [
										{
											"id": "97e0204b-f83c-4571-bcc9-fc81e3f73213",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired invoice item."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"discountable\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"proration\": \"<boolean>\",\n  \"quantity\": \"<integer>\",\n  \"unit_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"invoice\": \"<string>\",\n  \"period\": \"<object>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"subscription_item\": \"<string>\"\n}"
										},
										{
											"id": "e905eb84-f460-46a5-b52f-de16d449de68",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired invoice item."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Invoice Item",
									"id": "0464a08e-359e-442b-8c9a-8dd451d4588d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "87569157",
													"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount."
												},
												{
													"key": "description",
													"value": "dolor ipsum pariatur",
													"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking."
												},
												{
													"key": "discountable",
													"value": "false",
													"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations."
												},
												{
													"key": "expand[0]",
													"value": "ipsum non eiusmod Ut mollit",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "eu Duis in",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "quantity",
													"value": "41381169",
													"description": "Non-negative integer. The quantity of units for the invoice item."
												},
												{
													"key": "unit_amount",
													"value": "69064429",
													"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems",
												":invoiceitem"
											],
											"variable": [
												{
													"key": "invoiceitem",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>"
									},
									"response": [
										{
											"id": "856f61cd-d6d6-4e11-8b83-aa766299bcba",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.",
															"key": "discountable",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Non-negative integer. The quantity of units for the invoice item.",
															"key": "quantity",
															"value": "<integer>"
														},
														{
															"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
															"key": "unit_amount",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"discountable\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"proration\": \"<boolean>\",\n  \"quantity\": \"<integer>\",\n  \"unit_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"invoice\": \"<string>\",\n  \"period\": \"<object>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"subscription_item\": \"<string>\"\n}"
										},
										{
											"id": "3cf87808-f0a4-405c-8251-80fedd619040",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.",
															"key": "discountable",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Non-negative integer. The quantity of units for the invoice item.",
															"key": "quantity",
															"value": "<integer>"
														},
														{
															"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
															"key": "unit_amount",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoiceitems/:invoiceitem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoiceitems",
														":invoiceitem"
													],
													"variable": [
														{
															"key": "invoiceitem",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "23f6aef0-84de-40f9-89f3-bebf423e010d"
						},
						{
							"name": "All Invoice Items",
							"id": "5430ff83-1fbf-4794-85a7-82ccb7e1f30a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/invoiceitems?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&invoice=esse deserunt&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"invoiceitems"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "invoice",
											"value": "esse deserunt",
											"description": "Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>"
							},
							"response": [
								{
									"id": "132d1602-669c-47e1-bbc6-e5e81af8ae4d",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&invoice=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"date\": \"<unix-time>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"proration\": \"<boolean>\",\n      \"quantity\": \"<integer>\",\n      \"unit_amount\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"invoice\": \"<string>\",\n      \"period\": \"<object>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"date\": \"<unix-time>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"proration\": \"<boolean>\",\n      \"quantity\": \"<integer>\",\n      \"unit_amount\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"invoice\": \"<string>\",\n      \"period\": \"<object>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "16f32d74-3a7f-4560-9b9c-c7f77cbba37a",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&invoice=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Invoice Item",
							"id": "18f30b11-9e98-4d9a-bf4b-1beae9e8082d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "currency",
											"value": "aute",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "customer",
											"value": "et laboris",
											"description": "(Required) The ID of the customer who will be billed when this invoice item is billed."
										},
										{
											"key": "amount",
											"value": "13381471",
											"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount."
										},
										{
											"key": "description",
											"value": "anim ullamco",
											"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking."
										},
										{
											"key": "discountable",
											"value": "true",
											"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items."
										},
										{
											"key": "expand[0]",
											"value": "labore ex nulla do Ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in incididunt fugiat",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "invoice",
											"value": "fugiat id",
											"description": "The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. Use this when adding invoice items in response to an invoice.created webhook. You cannot add an invoice item to an invoice that has already been paid, attempted or closed."
										},
										{
											"key": "quantity",
											"value": "53921203",
											"description": "Non-negative integer. The quantity of units for the invoice item."
										},
										{
											"key": "subscription",
											"value": "cupidatat",
											"description": "The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription."
										},
										{
											"key": "unit_amount",
											"value": "85002232",
											"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/invoiceitems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"invoiceitems"
									]
								},
								"description": "<p>Adds an arbitrary charge or credit to the customer’s upcoming invoice.</p>"
							},
							"response": [
								{
									"id": "8f3c8731-6ac2-4f73-88b3-f6e8c478c9b6",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The ID of the customer who will be billed when this invoice item is billed.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.",
													"key": "discountable",
													"value": "<boolean>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. Use this when adding invoice items in response to an invoice.created webhook. You cannot add an invoice item to an invoice that has already been paid, attempted or closed.",
													"key": "invoice",
													"value": "<string>"
												},
												{
													"description": "Non-negative integer. The quantity of units for the invoice item.",
													"key": "quantity",
													"value": "<integer>"
												},
												{
													"description": "The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
													"key": "unit_amount",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"discountable\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"proration\": \"<boolean>\",\n  \"quantity\": \"<integer>\",\n  \"unit_amount\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"invoice\": \"<string>\",\n  \"period\": \"<object>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"subscription_item\": \"<string>\"\n}"
								},
								{
									"id": "d26a59d0-0010-4250-886e-096a47431d0e",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The ID of the customer who will be billed when this invoice item is billed.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "The integer amount in **%s** of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.",
													"key": "discountable",
													"value": "<boolean>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. Use this when adding invoice items in response to an invoice.created webhook. You cannot add an invoice item to an invoice that has already been paid, attempted or closed.",
													"key": "invoice",
													"value": "<string>"
												},
												{
													"description": "Non-negative integer. The quantity of units for the invoice item.",
													"key": "quantity",
													"value": "<integer>"
												},
												{
													"description": "The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "The integer unit amount in **%s** of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
													"key": "unit_amount",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoiceitems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoiceitems"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "29c5c5a4-3b02-4ec3-99b2-993a19b2d780"
				},
				{
					"name": "invoices",
					"item": [
						{
							"name": "upcoming",
							"item": [
								{
									"name": "Retrieve Upcoming Invoice",
									"id": "fe6299a4-938e-4bf6-bbf8-962e5cadf42f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/upcoming?coupon=esse deserunt&customer=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&invoice_items[0][amount]=51981675&invoice_items[0][currency]=sunt incididunt aute nostrud&invoice_items[0][description]=amet nostrud id&invoice_items[0][discountable]=true&invoice_items[0][invoiceitem]=ullamco magna ex&invoice_items[1][amount]=59664606&invoice_items[1][currency]=non ex nisi tempor&invoice_items[1][description]=nulla amet&invoice_items[1][discountable]=true&invoice_items[1][invoiceitem]=commodo aliquip eiusmod&subscription=esse deserunt&subscription_items[0][clear_usage]=&subscription_items[0][deleted]=true&subscription_items[0][id]=minim deserunt&subscription_items[0][plan]=qui Ut&subscription_items[0][quantity]=79994692&subscription_items[1][clear_usage]=&subscription_items[1][deleted]=true&subscription_items[1][id]=ipsum&subscription_items[1][plan]=est irure&subscription_items[1][quantity]=-67885471&subscription_prorate=true&subscription_proration_date=66746697&subscription_tax_percent=-10019950.77323991&subscription_trial_from_plan=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												"upcoming"
											],
											"query": [
												{
													"key": "coupon",
													"value": "esse deserunt",
													"description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string."
												},
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the customer whose upcoming invoice you'd like to retrieve."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "invoice_items[0][amount]",
													"value": "51981675",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[0][currency]",
													"value": "sunt incididunt aute nostrud",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[0][description]",
													"value": "amet nostrud id",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[0][discountable]",
													"value": "true",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[0][invoiceitem]",
													"value": "ullamco magna ex",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[1][amount]",
													"value": "59664606",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[1][currency]",
													"value": "non ex nisi tempor",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[1][description]",
													"value": "nulla amet",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[1][discountable]",
													"value": "true",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "invoice_items[1][invoiceitem]",
													"value": "commodo aliquip eiusmod",
													"description": "List of invoice items to add or update in the upcoming invoice preview."
												},
												{
													"key": "subscription",
													"value": "esse deserunt",
													"description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions."
												},
												{
													"key": "subscription_items[0][clear_usage]",
													"value": "",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[0][deleted]",
													"value": "true",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[0][id]",
													"value": "minim deserunt",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[0][plan]",
													"value": "qui Ut",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[0][quantity]",
													"value": "79994692",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[1][clear_usage]",
													"value": "",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[1][deleted]",
													"value": "true",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[1][id]",
													"value": "ipsum",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[1][plan]",
													"value": "est irure",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_items[1][quantity]",
													"value": "-67885471",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "subscription_prorate",
													"value": "true",
													"description": "If previewing an update to a subscription, this decides whether the preview will show the result of applying prorations or not. If set, one of `subscription_items` or `subscription`, and one of `subscription_items` or `subscription_trial_end` are required."
												},
												{
													"key": "subscription_proration_date",
													"value": "66746697",
													"description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration` cannot be set to false."
												},
												{
													"key": "subscription_tax_percent",
													"value": "-10019950.77323991",
													"description": "If provided, the invoice returned will preview updating or creating a subscription with that tax percent. If set, one of `subscription_items` or `subscription` is required."
												},
												{
													"key": "subscription_trial_from_plan",
													"value": "true",
													"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed."
												}
											]
										},
										"description": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.</p><p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p><p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>"
									},
									"response": [
										{
											"id": "6c84e430-5eef-49f0-944e-e7de8bad8762",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/upcoming?coupon=<string>&customer=<string>&expand[0]=<string>&expand[1]=<string>&invoice_items[0][amount]=<integer>&invoice_items[0][currency]=<string>&invoice_items[0][description]=<string>&invoice_items[0][discountable]=<boolean>&invoice_items[0][invoiceitem]=<string>&invoice_items[0][metadata]=<object>&invoice_items[1][amount]=<integer>&invoice_items[1][currency]=<string>&invoice_items[1][description]=<string>&invoice_items[1][discountable]=<boolean>&invoice_items[1][invoiceitem]=<string>&invoice_items[1][metadata]=<object>&subscription=<string>&subscription_items[0][clear_usage]=<boolean>&subscription_items[0][deleted]=<boolean>&subscription_items[0][id]=<string>&subscription_items[0][metadata]=<object>&subscription_items[0][plan]=<string>&subscription_items[0][quantity]=<integer>&subscription_items[1][clear_usage]=<boolean>&subscription_items[1][deleted]=<boolean>&subscription_items[1][id]=<string>&subscription_items[1][metadata]=<object>&subscription_items[1][plan]=<string>&subscription_items[1][quantity]=<integer>&subscription_prorate=<boolean>&subscription_proration_date=<unix-time>&subscription_tax_percent=<number>&subscription_trial_from_plan=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														"upcoming"
													],
													"query": [
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][amount]",
															"value": "<integer>"
														},
														{
															"key": "invoice_items[0][currency]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][description]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][discountable]",
															"value": "<boolean>"
														},
														{
															"key": "invoice_items[0][invoiceitem]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "invoice_items[1][amount]",
															"value": "<integer>"
														},
														{
															"key": "invoice_items[1][currency]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][description]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][discountable]",
															"value": "<boolean>"
														},
														{
															"key": "invoice_items[1][invoiceitem]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[0][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[1][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_prorate",
															"value": "<boolean>"
														},
														{
															"key": "subscription_proration_date",
															"value": "<unix-time>"
														},
														{
															"key": "subscription_tax_percent",
															"value": "<number>"
														},
														{
															"key": "subscription_trial_from_plan",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount_due\": \"<integer>\",\n  \"amount_paid\": \"<integer>\",\n  \"amount_remaining\": \"<integer>\",\n  \"attempt_count\": \"<integer>\",\n  \"attempted\": \"<boolean>\",\n  \"closed\": \"<boolean>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"forgiven\": \"<boolean>\",\n  \"lines\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"period_end\": \"<unix-time>\",\n  \"period_start\": \"<unix-time>\",\n  \"starting_balance\": \"<integer>\",\n  \"subtotal\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"application_fee\": \"<integer>\",\n  \"auto_advance\": \"<boolean>\",\n  \"billing\": \"<string>\",\n  \"billing_reason\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"due_date\": \"<unix-time>\",\n  \"ending_balance\": \"<integer>\",\n  \"hosted_invoice_url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"invoice_pdf\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_payment_attempt\": \"<unix-time>\",\n  \"number\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"subscription_proration_date\": \"<integer>\",\n  \"tax\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"webhooks_delivered_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "9c0c2edb-339e-4baf-ac8c-b8c5312abbd7",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/upcoming?coupon=<string>&customer=<string>&expand[0]=<string>&expand[1]=<string>&invoice_items[0][amount]=<integer>&invoice_items[0][currency]=<string>&invoice_items[0][description]=<string>&invoice_items[0][discountable]=<boolean>&invoice_items[0][invoiceitem]=<string>&invoice_items[0][metadata]=<object>&invoice_items[1][amount]=<integer>&invoice_items[1][currency]=<string>&invoice_items[1][description]=<string>&invoice_items[1][discountable]=<boolean>&invoice_items[1][invoiceitem]=<string>&invoice_items[1][metadata]=<object>&subscription=<string>&subscription_items[0][clear_usage]=<boolean>&subscription_items[0][deleted]=<boolean>&subscription_items[0][id]=<string>&subscription_items[0][metadata]=<object>&subscription_items[0][plan]=<string>&subscription_items[0][quantity]=<integer>&subscription_items[1][clear_usage]=<boolean>&subscription_items[1][deleted]=<boolean>&subscription_items[1][id]=<string>&subscription_items[1][metadata]=<object>&subscription_items[1][plan]=<string>&subscription_items[1][quantity]=<integer>&subscription_prorate=<boolean>&subscription_proration_date=<unix-time>&subscription_tax_percent=<number>&subscription_trial_from_plan=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														"upcoming"
													],
													"query": [
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][amount]",
															"value": "<integer>"
														},
														{
															"key": "invoice_items[0][currency]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][description]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][discountable]",
															"value": "<boolean>"
														},
														{
															"key": "invoice_items[0][invoiceitem]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "invoice_items[1][amount]",
															"value": "<integer>"
														},
														{
															"key": "invoice_items[1][currency]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][description]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][discountable]",
															"value": "<boolean>"
														},
														{
															"key": "invoice_items[1][invoiceitem]",
															"value": "<string>"
														},
														{
															"key": "invoice_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[0][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[1][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_prorate",
															"value": "<boolean>"
														},
														{
															"key": "subscription_proration_date",
															"value": "<unix-time>"
														},
														{
															"key": "subscription_tax_percent",
															"value": "<number>"
														},
														{
															"key": "subscription_trial_from_plan",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "All Upcoming Invoice Lines",
									"id": "61161651-0ed0-446f-9096-ff189c19aa1f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/upcoming/lines?coupon=esse deserunt&customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&subscription=esse deserunt&subscription_items[0][clear_usage]=&subscription_items[0][deleted]=true&subscription_items[0][id]=minim deserunt&subscription_items[0][plan]=qui Ut&subscription_items[0][quantity]=79994692&subscription_items[1][clear_usage]=&subscription_items[1][deleted]=true&subscription_items[1][id]=ipsum&subscription_items[1][plan]=est irure&subscription_items[1][quantity]=-67885471&subscription_prorate=true&subscription_proration_date=66746697&subscription_tax_percent=-10019950.77323991&subscription_trial_from_plan=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												"upcoming",
												"lines"
											],
											"query": [
												{
													"key": "coupon",
													"value": "esse deserunt",
													"description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string."
												},
												{
													"key": "customer",
													"value": "esse deserunt",
													"description": "(Required) The customer of the upcoming invoice is required. In other cases it is ignored."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "subscription",
													"value": "esse deserunt",
													"description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions."
												},
												{
													"key": "subscription_items[0][clear_usage]",
													"value": "",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[0][deleted]",
													"value": "true",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[0][id]",
													"value": "minim deserunt",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[0][plan]",
													"value": "qui Ut",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[0][quantity]",
													"value": "79994692",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[1][clear_usage]",
													"value": "",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[1][deleted]",
													"value": "true",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[1][id]",
													"value": "ipsum",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[1][plan]",
													"value": "est irure",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_items[1][quantity]",
													"value": "-67885471",
													"description": "Preview updating the subscription with this list of items. Otherwise this parameter is ignored."
												},
												{
													"key": "subscription_prorate",
													"value": "true",
													"description": "If previewing an update to a subscription, this decides whether the preview will show the result of applying prorations or not. If set, one of `subscription_items` or `subscription`, and one of `subscription_items` or `subscription_trial_end` are required."
												},
												{
													"key": "subscription_proration_date",
													"value": "66746697",
													"description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration` cannot be set to false."
												},
												{
													"key": "subscription_tax_percent",
													"value": "-10019950.77323991",
													"description": "If provided, the invoice returned will preview updating or creating a subscription with that tax percent. If set, one of `subscription_items` or `subscription` is required."
												},
												{
													"key": "subscription_trial_from_plan",
													"value": "true",
													"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed."
												}
											]
										},
										"description": "<p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
									},
									"response": [
										{
											"id": "d358cd42-e939-450f-8cc7-7eacdb28abb0",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/upcoming/lines?coupon=<string>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>&subscription_items[0][clear_usage]=<boolean>&subscription_items[0][deleted]=<boolean>&subscription_items[0][id]=<string>&subscription_items[0][metadata]=<object>&subscription_items[0][plan]=<string>&subscription_items[0][quantity]=<integer>&subscription_items[1][clear_usage]=<boolean>&subscription_items[1][deleted]=<boolean>&subscription_items[1][id]=<string>&subscription_items[1][metadata]=<object>&subscription_items[1][plan]=<string>&subscription_items[1][quantity]=<integer>&subscription_prorate=<boolean>&subscription_proration_date=<unix-time>&subscription_tax_percent=<number>&subscription_trial_from_plan=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														"upcoming",
														"lines"
													],
													"query": [
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "subscription",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[0][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[1][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_prorate",
															"value": "<boolean>"
														},
														{
															"key": "subscription_proration_date",
															"value": "<unix-time>"
														},
														{
															"key": "subscription_tax_percent",
															"value": "<number>"
														},
														{
															"key": "subscription_trial_from_plan",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"period\": {\n        \"end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"proration\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"invoice_item\": \"<string>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"period\": {\n        \"end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"proration\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"invoice_item\": \"<string>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "450e9f32-99f3-4d0f-b785-45f0a661d83a",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/upcoming/lines?coupon=<string>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>&subscription_items[0][clear_usage]=<boolean>&subscription_items[0][deleted]=<boolean>&subscription_items[0][id]=<string>&subscription_items[0][metadata]=<object>&subscription_items[0][plan]=<string>&subscription_items[0][quantity]=<integer>&subscription_items[1][clear_usage]=<boolean>&subscription_items[1][deleted]=<boolean>&subscription_items[1][id]=<string>&subscription_items[1][metadata]=<object>&subscription_items[1][plan]=<string>&subscription_items[1][quantity]=<integer>&subscription_prorate=<boolean>&subscription_proration_date=<unix-time>&subscription_tax_percent=<number>&subscription_trial_from_plan=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														"upcoming",
														"lines"
													],
													"query": [
														{
															"key": "coupon",
															"value": "<string>"
														},
														{
															"key": "customer",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "subscription",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[0][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[0][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[0][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"key": "subscription_items[1][id]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][metadata]",
															"value": "<object>"
														},
														{
															"key": "subscription_items[1][plan]",
															"value": "<string>"
														},
														{
															"key": "subscription_items[1][quantity]",
															"value": "<integer>"
														},
														{
															"key": "subscription_prorate",
															"value": "<boolean>"
														},
														{
															"key": "subscription_proration_date",
															"value": "<unix-time>"
														},
														{
															"key": "subscription_tax_percent",
															"value": "<number>"
														},
														{
															"key": "subscription_trial_from_plan",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "0ba48155-cf56-434f-adec-933836ea7d4e"
						},
						{
							"name": "{invoice}",
							"item": [
								{
									"name": "Retrieve Invoice",
									"id": "eea5ae2f-e389-460e-8b47-83743c1f8a4d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/:invoice?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												":invoice"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "invoice",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the desired invoice."
												}
											]
										},
										"description": "<p>Retrieves the invoice with the given ID.</p>"
									},
									"response": [
										{
											"id": "9ea70aa3-86fb-4607-b337-1659e7d84a53",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the desired invoice."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount_due\": \"<integer>\",\n  \"amount_paid\": \"<integer>\",\n  \"amount_remaining\": \"<integer>\",\n  \"attempt_count\": \"<integer>\",\n  \"attempted\": \"<boolean>\",\n  \"closed\": \"<boolean>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"forgiven\": \"<boolean>\",\n  \"lines\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"period_end\": \"<unix-time>\",\n  \"period_start\": \"<unix-time>\",\n  \"starting_balance\": \"<integer>\",\n  \"subtotal\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"application_fee\": \"<integer>\",\n  \"auto_advance\": \"<boolean>\",\n  \"billing\": \"<string>\",\n  \"billing_reason\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"due_date\": \"<unix-time>\",\n  \"ending_balance\": \"<integer>\",\n  \"hosted_invoice_url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"invoice_pdf\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_payment_attempt\": \"<unix-time>\",\n  \"number\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"subscription_proration_date\": \"<integer>\",\n  \"tax\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"webhooks_delivered_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "8d08957b-d830-4ea8-8b04-5f5978dc1780",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the desired invoice."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Invoice",
									"id": "d15a7c32-e30f-48e7-b527-5e35635ac16e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "application_fee",
													"value": "-1430134",
													"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices)."
												},
												{
													"key": "closed",
													"value": "false",
													"description": "Boolean representing whether an invoice is closed or not. To close an invoice, pass true."
												},
												{
													"key": "days_until_due",
													"value": "89236809",
													"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`."
												},
												{
													"key": "description",
													"value": "fugiat ea nulla exercitation"
												},
												{
													"key": "due_date",
													"value": "72960866",
													"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`."
												},
												{
													"key": "expand[0]",
													"value": "fugiat Ut anim in",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cillum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "forgiven",
													"value": "true",
													"description": "Boolean representing whether an invoice is forgiven or not. To forgive an invoice, pass true. Forgiving an invoice instructs us to update the subscription status as if the invoice were successfully paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened."
												},
												{
													"key": "paid",
													"value": "false",
													"description": "Boolean representing whether an invoice is paid or not. To mark invoice as paid, pass true. Only applies to invoices where `billing=send_invoice`."
												},
												{
													"key": "statement_descriptor",
													"value": "adipisicing ",
													"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`."
												},
												{
													"key": "tax_percent",
													"value": "-3930331.1479546875",
													"description": "The percent tax rate applied to the invoice, represented as a non-negative decimal number (with at most four decimal places) between 0 and 100. To unset a previously-set value, pass an empty string. The tax rate of an attempted, paid or forgiven invoice cannot be changed."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/:invoice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												":invoice"
											],
											"variable": [
												{
													"key": "invoice",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Until an invoice is paid, it is marked as open (<code>closed=false</code>). If you’d like to stop Stripe from attempting to collect payment on an invoice or would simply like to close the invoice out as no longer owed by the customer, you can update the closed parameter.</p>"
									},
									"response": [
										{
											"id": "3a14789a-b8ca-41d3-8907-9bf511dbf387",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).",
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "Boolean representing whether an invoice is closed or not. To close an invoice, pass true.",
															"key": "closed",
															"value": "<boolean>"
														},
														{
															"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`.",
															"key": "days_until_due",
															"value": "<integer>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`.",
															"key": "due_date",
															"value": "<unix-time>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Boolean representing whether an invoice is forgiven or not. To forgive an invoice, pass true. Forgiving an invoice instructs us to update the subscription status as if the invoice were successfully paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened.",
															"key": "forgiven",
															"value": "<boolean>"
														},
														{
															"description": "Boolean representing whether an invoice is paid or not. To mark invoice as paid, pass true. Only applies to invoices where `billing=send_invoice`.",
															"key": "paid",
															"value": "<boolean>"
														},
														{
															"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "The percent tax rate applied to the invoice, represented as a non-negative decimal number (with at most four decimal places) between 0 and 100. To unset a previously-set value, pass an empty string. The tax rate of an attempted, paid or forgiven invoice cannot be changed.",
															"key": "tax_percent",
															"value": "<number>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice"
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount_due\": \"<integer>\",\n  \"amount_paid\": \"<integer>\",\n  \"amount_remaining\": \"<integer>\",\n  \"attempt_count\": \"<integer>\",\n  \"attempted\": \"<boolean>\",\n  \"closed\": \"<boolean>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"forgiven\": \"<boolean>\",\n  \"lines\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"period_end\": \"<unix-time>\",\n  \"period_start\": \"<unix-time>\",\n  \"starting_balance\": \"<integer>\",\n  \"subtotal\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"application_fee\": \"<integer>\",\n  \"auto_advance\": \"<boolean>\",\n  \"billing\": \"<string>\",\n  \"billing_reason\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"due_date\": \"<unix-time>\",\n  \"ending_balance\": \"<integer>\",\n  \"hosted_invoice_url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"invoice_pdf\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_payment_attempt\": \"<unix-time>\",\n  \"number\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"subscription_proration_date\": \"<integer>\",\n  \"tax\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"webhooks_delivered_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "e4322398-3936-45b4-a51f-ef5ae2e4bcbd",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).",
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "Boolean representing whether an invoice is closed or not. To close an invoice, pass true.",
															"key": "closed",
															"value": "<boolean>"
														},
														{
															"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`.",
															"key": "days_until_due",
															"value": "<integer>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`.",
															"key": "due_date",
															"value": "<unix-time>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Boolean representing whether an invoice is forgiven or not. To forgive an invoice, pass true. Forgiving an invoice instructs us to update the subscription status as if the invoice were successfully paid. Once an invoice has been forgiven, it cannot be unforgiven or reopened.",
															"key": "forgiven",
															"value": "<boolean>"
														},
														{
															"description": "Boolean representing whether an invoice is paid or not. To mark invoice as paid, pass true. Only applies to invoices where `billing=send_invoice`.",
															"key": "paid",
															"value": "<boolean>"
														},
														{
															"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "The percent tax rate applied to the invoice, represented as a non-negative decimal number (with at most four decimal places) between 0 and 100. To unset a previously-set value, pass an empty string. The tax rate of an attempted, paid or forgiven invoice cannot be changed.",
															"key": "tax_percent",
															"value": "<number>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice"
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "All Invoice Lines",
									"id": "a5f57235-fdc5-4f92-9422-5d51a39c75e6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/:invoice/lines?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												":invoice",
												"lines"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											],
											"variable": [
												{
													"key": "invoice",
													"value": "esse deserunt",
													"description": "(Required) The ID of the invoice containing the lines to be retrieved."
												}
											]
										},
										"description": "<p>When retrieving an invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>"
									},
									"response": [
										{
											"id": "6bfe85b2-756e-4163-ad7b-75c4dd6e81cb",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice/lines?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice",
														"lines"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) The ID of the invoice containing the lines to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"period\": {\n        \"end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"proration\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"invoice_item\": \"<string>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"discountable\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"period\": {\n        \"end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"proration\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"invoice_item\": \"<string>\",\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"subscription\": \"<string>\",\n      \"subscription_item\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "812bdf4a-08cc-4b5d-97d3-e3a2d0de5d6a",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice/lines?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice",
														"lines"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) The ID of the invoice containing the lines to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Pay Invoice",
									"id": "1ca90004-1ec1-4ba9-bbd2-4a2606c8f110",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "adipisicing consequat amet",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ea proident est do aliqua",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "forgive",
													"value": "true",
													"description": "Determines if invoice should be forgiven if source has insufficient funds to fully pay the invoice."
												},
												{
													"key": "source",
													"value": "aute",
													"description": "A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoices/:invoice/pay",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices",
												":invoice",
												"pay"
											],
											"variable": [
												{
													"key": "invoice",
													"value": "esse deserunt",
													"description": "(Required) ID of invoice to pay."
												}
											]
										},
										"description": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>"
									},
									"response": [
										{
											"id": "ce5a8d51-0971-411d-96e1-c8aa9683a97f",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Determines if invoice should be forgiven if source has insufficient funds to fully pay the invoice.",
															"key": "forgive",
															"value": "<boolean>"
														},
														{
															"description": "A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.",
															"key": "source",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice/pay",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice",
														"pay"
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) ID of invoice to pay."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount_due\": \"<integer>\",\n  \"amount_paid\": \"<integer>\",\n  \"amount_remaining\": \"<integer>\",\n  \"attempt_count\": \"<integer>\",\n  \"attempted\": \"<boolean>\",\n  \"closed\": \"<boolean>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"forgiven\": \"<boolean>\",\n  \"lines\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"period_end\": \"<unix-time>\",\n  \"period_start\": \"<unix-time>\",\n  \"starting_balance\": \"<integer>\",\n  \"subtotal\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"application_fee\": \"<integer>\",\n  \"auto_advance\": \"<boolean>\",\n  \"billing\": \"<string>\",\n  \"billing_reason\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"due_date\": \"<unix-time>\",\n  \"ending_balance\": \"<integer>\",\n  \"hosted_invoice_url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"invoice_pdf\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_payment_attempt\": \"<unix-time>\",\n  \"number\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"subscription_proration_date\": \"<integer>\",\n  \"tax\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"webhooks_delivered_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "22a8b855-7516-4e2b-83e2-b52881b05e63",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Determines if invoice should be forgiven if source has insufficient funds to fully pay the invoice.",
															"key": "forgive",
															"value": "<boolean>"
														},
														{
															"description": "A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.",
															"key": "source",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/invoices/:invoice/pay",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"invoices",
														":invoice",
														"pay"
													],
													"variable": [
														{
															"key": "invoice",
															"value": "esse deserunt",
															"description": "(Required) ID of invoice to pay."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "b3fe8d91-ffd4-4d89-9a76-ad86b48ed36b"
						},
						{
							"name": "All Invoices",
							"id": "ad5715bf-f8b3-48dc-a957-e6204deba649",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/invoices?billing=send_invoice&customer=esse deserunt&date[gt]=-13431299&date[gte]=48353647&date[lt]=-92044334&date[lte]=-79364890&due_date[gt]=-13431299&due_date[gte]=48353647&due_date[lt]=-92044334&due_date[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&subscription=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"invoices"
									],
									"query": [
										{
											"key": "billing",
											"value": "send_invoice",
											"description": "The billing mode of the invoice to retrieve. Either `charge_automatically` or `send_invoice`."
										},
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "Only return invoices for the customer specified by this customer ID."
										},
										{
											"key": "date[gt]",
											"value": "-13431299"
										},
										{
											"key": "date[gte]",
											"value": "48353647"
										},
										{
											"key": "date[lt]",
											"value": "-92044334"
										},
										{
											"key": "date[lte]",
											"value": "-79364890"
										},
										{
											"key": "due_date[gt]",
											"value": "-13431299"
										},
										{
											"key": "due_date[gte]",
											"value": "48353647"
										},
										{
											"key": "due_date[lt]",
											"value": "-92044334"
										},
										{
											"key": "due_date[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "subscription",
											"value": "esse deserunt",
											"description": "Only return invoices for the subscription specified by this subscription ID."
										}
									]
								},
								"description": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>"
							},
							"response": [
								{
									"id": "79fc1862-1a1b-4c07-aec3-41f324cb6d20",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices?billing=<string>&customer=<string>&date[gt]=<integer>&date[gte]=<integer>&date[lt]=<integer>&date[lte]=<integer>&due_date[gt]=<integer>&due_date[gte]=<integer>&due_date[lt]=<integer>&due_date[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices"
											],
											"query": [
												{
													"key": "billing",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "date[gt]",
													"value": "<integer>"
												},
												{
													"key": "date[gte]",
													"value": "<integer>"
												},
												{
													"key": "date[lt]",
													"value": "<integer>"
												},
												{
													"key": "date[lte]",
													"value": "<integer>"
												},
												{
													"key": "due_date[gt]",
													"value": "<integer>"
												},
												{
													"key": "due_date[gte]",
													"value": "<integer>"
												},
												{
													"key": "due_date[lt]",
													"value": "<integer>"
												},
												{
													"key": "due_date[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "subscription",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount_due\": \"<integer>\",\n      \"amount_paid\": \"<integer>\",\n      \"amount_remaining\": \"<integer>\",\n      \"attempt_count\": \"<integer>\",\n      \"attempted\": \"<boolean>\",\n      \"closed\": \"<boolean>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"date\": \"<unix-time>\",\n      \"forgiven\": \"<boolean>\",\n      \"lines\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"paid\": \"<boolean>\",\n      \"period_end\": \"<unix-time>\",\n      \"period_start\": \"<unix-time>\",\n      \"starting_balance\": \"<integer>\",\n      \"subtotal\": \"<integer>\",\n      \"total\": \"<integer>\",\n      \"application_fee\": \"<integer>\",\n      \"auto_advance\": \"<boolean>\",\n      \"billing\": \"<string>\",\n      \"billing_reason\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"description\": \"<string>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"due_date\": \"<unix-time>\",\n      \"ending_balance\": \"<integer>\",\n      \"hosted_invoice_url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"invoice_pdf\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"next_payment_attempt\": \"<unix-time>\",\n      \"number\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"subscription\": \"<string>\",\n      \"subscription_proration_date\": \"<integer>\",\n      \"tax\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"webhooks_delivered_at\": \"<unix-time>\"\n    },\n    {\n      \"amount_due\": \"<integer>\",\n      \"amount_paid\": \"<integer>\",\n      \"amount_remaining\": \"<integer>\",\n      \"attempt_count\": \"<integer>\",\n      \"attempted\": \"<boolean>\",\n      \"closed\": \"<boolean>\",\n      \"currency\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"date\": \"<unix-time>\",\n      \"forgiven\": \"<boolean>\",\n      \"lines\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"paid\": \"<boolean>\",\n      \"period_end\": \"<unix-time>\",\n      \"period_start\": \"<unix-time>\",\n      \"starting_balance\": \"<integer>\",\n      \"subtotal\": \"<integer>\",\n      \"total\": \"<integer>\",\n      \"application_fee\": \"<integer>\",\n      \"auto_advance\": \"<boolean>\",\n      \"billing\": \"<string>\",\n      \"billing_reason\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"description\": \"<string>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"due_date\": \"<unix-time>\",\n      \"ending_balance\": \"<integer>\",\n      \"hosted_invoice_url\": \"<string>\",\n      \"id\": \"<string>\",\n      \"invoice_pdf\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"next_payment_attempt\": \"<unix-time>\",\n      \"number\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"subscription\": \"<string>\",\n      \"subscription_proration_date\": \"<integer>\",\n      \"tax\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"webhooks_delivered_at\": \"<unix-time>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "ec1cc185-c87d-4f89-ad14-c25e034ad2cf",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/invoices?billing=<string>&customer=<string>&date[gt]=<integer>&date[gte]=<integer>&date[lt]=<integer>&date[lte]=<integer>&due_date[gt]=<integer>&due_date[gte]=<integer>&due_date[lt]=<integer>&due_date[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices"
											],
											"query": [
												{
													"key": "billing",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "date[gt]",
													"value": "<integer>"
												},
												{
													"key": "date[gte]",
													"value": "<integer>"
												},
												{
													"key": "date[lt]",
													"value": "<integer>"
												},
												{
													"key": "date[lte]",
													"value": "<integer>"
												},
												{
													"key": "due_date[gt]",
													"value": "<integer>"
												},
												{
													"key": "due_date[gte]",
													"value": "<integer>"
												},
												{
													"key": "due_date[lt]",
													"value": "<integer>"
												},
												{
													"key": "due_date[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "subscription",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Invoice",
							"id": "eaab36ca-ac09-42aa-b9c0-cd15602bbd2d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "magna eu irure Lorem",
											"description": "(Required) "
										},
										{
											"key": "application_fee",
											"value": "23765864",
											"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices)."
										},
										{
											"key": "billing",
											"value": "charge_automatically",
											"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`."
										},
										{
											"key": "days_until_due",
											"value": "21549208",
											"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`."
										},
										{
											"key": "description",
											"value": "dolore commodo non"
										},
										{
											"key": "due_date",
											"value": "50466151",
											"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`."
										},
										{
											"key": "expand[0]",
											"value": "ex eu non",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "culpa sit quis adipisicing",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "statement_descriptor",
											"value": "nostrud cillum occa",
											"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`."
										},
										{
											"key": "subscription",
											"value": "ipsum cupidatat velit",
											"description": "The ID of the subscription to invoice. If not set, the created invoice will include all pending invoice items for the customer. If set, the created invoice will exclude pending invoice items that pertain to other subscriptions."
										},
										{
											"key": "tax_percent",
											"value": "60822567.3490279",
											"description": "The percent tax rate applied to the invoice, represented as a decimal number."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"invoices"
									]
								},
								"description": "<p>If you need to invoice your customer outside the regular billing cycle, you can create an invoice that pulls in all pending invoice items, including prorations. The customer’s billing cycle and regular subscription won’t be affected.</p><p>Once you create the invoice, Stripe will attempt to collect payment according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>, though you can choose to <a href=\"#pay_invoice\">pay it right</a> away.</p>"
							},
							"response": [
								{
									"id": "c5060f2d-c4b5-43bf-9367-e9e807fee07a",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).",
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.",
													"key": "billing",
													"value": "<string>"
												},
												{
													"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`.",
													"key": "days_until_due",
													"value": "<integer>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`.",
													"key": "due_date",
													"value": "<unix-time>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "The ID of the subscription to invoice. If not set, the created invoice will include all pending invoice items for the customer. If set, the created invoice will exclude pending invoice items that pertain to other subscriptions.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "The percent tax rate applied to the invoice, represented as a decimal number.",
													"key": "tax_percent",
													"value": "<number>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount_due\": \"<integer>\",\n  \"amount_paid\": \"<integer>\",\n  \"amount_remaining\": \"<integer>\",\n  \"attempt_count\": \"<integer>\",\n  \"attempted\": \"<boolean>\",\n  \"closed\": \"<boolean>\",\n  \"currency\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"date\": \"<unix-time>\",\n  \"forgiven\": \"<boolean>\",\n  \"lines\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"discountable\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"period\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"proration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription_item\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"period_end\": \"<unix-time>\",\n  \"period_start\": \"<unix-time>\",\n  \"starting_balance\": \"<integer>\",\n  \"subtotal\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"application_fee\": \"<integer>\",\n  \"auto_advance\": \"<boolean>\",\n  \"billing\": \"<string>\",\n  \"billing_reason\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"description\": \"<string>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"due_date\": \"<unix-time>\",\n  \"ending_balance\": \"<integer>\",\n  \"hosted_invoice_url\": \"<string>\",\n  \"id\": \"<string>\",\n  \"invoice_pdf\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_payment_attempt\": \"<unix-time>\",\n  \"number\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"subscription\": \"<string>\",\n  \"subscription_proration_date\": \"<integer>\",\n  \"tax\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"webhooks_delivered_at\": \"<unix-time>\"\n}"
								},
								{
									"id": "d78ae5a7-19ed-4bf7-a825-d5991ced9c37",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "A fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/subscriptions#working-with-invoices).",
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.",
													"key": "billing",
													"value": "<string>"
												},
												{
													"description": "The number of days from which the invoice is created until it is due. Only valid for invoices where `billing=send_invoice`.",
													"key": "days_until_due",
													"value": "<integer>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "The date on which payment for this invoice is due. Only valid for invoices where `billing=send_invoice`.",
													"key": "due_date",
													"value": "<unix-time>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "The ID of the subscription to invoice. If not set, the created invoice will include all pending invoice items for the customer. If set, the created invoice will exclude pending invoice items that pertain to other subscriptions.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "The percent tax rate applied to the invoice, represented as a decimal number.",
													"key": "tax_percent",
													"value": "<number>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/invoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"invoices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "20adf0f0-355e-4f17-8bce-c65af5c954dc"
				},
				{
					"name": "issuer_fraud_records",
					"item": [
						{
							"name": "Disputes Issuer Fraud Record All",
							"id": "63a0164b-656a-46d7-b055-3076196589c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/issuer_fraud_records?charge=adipisicing incididunt esse&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"issuer_fraud_records"
									],
									"query": [
										{
											"key": "charge",
											"value": "adipisicing incididunt esse",
											"description": "Only return issuer fraud records for the charge specified by this charge ID."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of issuer fraud records.</p>"
							},
							"response": [
								{
									"id": "fff5c70e-b536-4677-8d9e-b4abab1b6f23",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuer_fraud_records?charge=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuer_fraud_records"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"fraud_type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"post_date\": \"<integer>\"\n    },\n    {\n      \"charge\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"fraud_type\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"post_date\": \"<integer>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "9d68ce42-f080-4f86-b561-cc9baddba2a8",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuer_fraud_records?charge=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuer_fraud_records"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Disputes Issuer Fraud Record Retrieve",
							"id": "68b526fa-9e0b-4446-9e72-4f16d48c697e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/issuer_fraud_records/:issuer_fraud_record?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"issuer_fraud_records",
										":issuer_fraud_record"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "issuer_fraud_record",
											"value": "esse deserunt",
											"description": "(Required) The identifier of the issuer fraud record to be retrieved."
										}
									]
								},
								"description": "<p>Retrieves the details of an issuer fraud record that has previously been created. </p><p>Please refer to the <a href=\"#issuer_fraud_record_object\">issuer fraud record</a> object reference for more details.</p>"
							},
							"response": [
								{
									"id": "6edb8b65-913c-4267-87db-de622884763a",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuer_fraud_records/:issuer_fraud_record?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuer_fraud_records",
												":issuer_fraud_record"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issuer_fraud_record",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the issuer fraud record to be retrieved."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"charge\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"fraud_type\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"post_date\": \"<integer>\"\n}"
								},
								{
									"id": "195d8c25-c2f5-4a50-96aa-fb62e10ceb42",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuer_fraud_records/:issuer_fraud_record?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuer_fraud_records",
												":issuer_fraud_record"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issuer_fraud_record",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the issuer fraud record to be retrieved."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "2a389e17-e865-4cc7-ae7b-327af3ad21f3"
				},
				{
					"name": "issuing",
					"item": [
						{
							"name": "authorizations",
							"item": [
								{
									"name": "{authorization}",
									"item": [
										{
											"name": "Issuing Authorization Retrieve",
											"id": "76f36a62-d176-4ca5-91eb-d4ef09aac342",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations",
														":authorization"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "authorization",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired authorization."
														}
													]
												},
												"description": "<p>Retrieves an authorization object.</p>"
											},
											"response": [
												{
													"id": "6c41885e-03a8-49e8-9c1b-24421d75be13",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired authorization."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"approved\": \"<boolean>\",\n  \"authorization_method\": \"<string>\",\n  \"authorized_amount\": \"<integer>\",\n  \"authorized_currency\": \"<string>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"card\": {\n    \"authorization_controls\": {\n      \"allowed_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocked_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_approvals\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"brand\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"cardholder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"created\": \"<unix-time>\",\n  \"held_amount\": \"<integer>\",\n  \"held_currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"is_held_amount_controllable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"pending_authorized_amount\": \"<integer>\",\n  \"pending_held_amount\": \"<integer>\",\n  \"request_history\": [\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"verification_data\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"cvc_check\": \"<string>\"\n  },\n  \"cardholder\": \"<string>\"\n}"
												},
												{
													"id": "6d9a51a0-69e1-44ea-860a-153adec2d1d6",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired authorization."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Authorization Update",
											"id": "69cf8cae-5ae3-48a9-bf23-562ff7b75a60",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "cupidatat",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "sint anim",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations",
														":authorization"
													],
													"variable": [
														{
															"key": "authorization",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the issuing authorization to be retrieved."
														}
													]
												},
												"description": "<p>Update the metadata of an issuing authorization</p>"
											},
											"response": [
												{
													"id": "6235ff03-2178-48b6-aecc-b010f44f9098",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"approved\": \"<boolean>\",\n  \"authorization_method\": \"<string>\",\n  \"authorized_amount\": \"<integer>\",\n  \"authorized_currency\": \"<string>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"card\": {\n    \"authorization_controls\": {\n      \"allowed_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocked_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_approvals\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"brand\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"cardholder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"created\": \"<unix-time>\",\n  \"held_amount\": \"<integer>\",\n  \"held_currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"is_held_amount_controllable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"pending_authorized_amount\": \"<integer>\",\n  \"pending_held_amount\": \"<integer>\",\n  \"request_history\": [\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"verification_data\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"cvc_check\": \"<string>\"\n  },\n  \"cardholder\": \"<string>\"\n}"
												},
												{
													"id": "0ca9d753-bf6a-4de8-ba55-a38fcf499db5",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Authorization Approve",
											"id": "daf6b546-e8cb-4be8-9ae8-8c92c37a3b05",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "magna dolor sit nulla",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "enim esse deserunt",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "held_amount",
															"value": "-76466989",
															"description": "If the authorization's `is_held_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/approve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations",
														":authorization",
														"approve"
													],
													"variable": [
														{
															"key": "authorization",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the issuing authorization to approve."
														}
													]
												},
												"description": "<p>Approve a pending issuing authorization</p>"
											},
											"response": [
												{
													"id": "1384e13d-fa03-4a03-8339-94d3de58424d",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "If the authorization's `is_held_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization.",
																	"key": "held_amount",
																	"value": "<integer>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/approve",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization",
																"approve"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to approve."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"approved\": \"<boolean>\",\n  \"authorization_method\": \"<string>\",\n  \"authorized_amount\": \"<integer>\",\n  \"authorized_currency\": \"<string>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"card\": {\n    \"authorization_controls\": {\n      \"allowed_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocked_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_approvals\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"brand\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"cardholder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"created\": \"<unix-time>\",\n  \"held_amount\": \"<integer>\",\n  \"held_currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"is_held_amount_controllable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"pending_authorized_amount\": \"<integer>\",\n  \"pending_held_amount\": \"<integer>\",\n  \"request_history\": [\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"verification_data\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"cvc_check\": \"<string>\"\n  },\n  \"cardholder\": \"<string>\"\n}"
												},
												{
													"id": "3613a57a-100c-43b8-8ec6-9c8eda853615",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "If the authorization's `is_held_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization.",
																	"key": "held_amount",
																	"value": "<integer>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/approve",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization",
																"approve"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to approve."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Authorization Decline",
											"id": "8f4a3f0e-9fd3-4cd6-ab65-669fdaf5e5ac",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "dolor",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "Duis in nostrud velit",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/decline",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations",
														":authorization",
														"decline"
													],
													"variable": [
														{
															"key": "authorization",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the issuing authorization to decline."
														}
													]
												},
												"description": "<p>Decline a pending issuing authorization</p>"
											},
											"response": [
												{
													"id": "88679a83-09e6-4909-9470-693e5aad61e8",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/decline",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization",
																"decline"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to decline."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"approved\": \"<boolean>\",\n  \"authorization_method\": \"<string>\",\n  \"authorized_amount\": \"<integer>\",\n  \"authorized_currency\": \"<string>\",\n  \"balance_transactions\": [\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"available_on\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fee_details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"net\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"exchange_rate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"card\": {\n    \"authorization_controls\": {\n      \"allowed_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocked_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_approvals\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"brand\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"cardholder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"created\": \"<unix-time>\",\n  \"held_amount\": \"<integer>\",\n  \"held_currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"is_held_amount_controllable\": \"<boolean>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"pending_authorized_amount\": \"<integer>\",\n  \"pending_held_amount\": \"<integer>\",\n  \"request_history\": [\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    },\n    {\n      \"approved\": \"<boolean>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"reason\": \"<string>\"\n    }\n  ],\n  \"status\": \"<string>\",\n  \"transactions\": [\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"card\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"balance_transaction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dispute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"verification_data\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"cvc_check\": \"<string>\"\n  },\n  \"cardholder\": \"<string>\"\n}"
												},
												{
													"id": "f275de86-7eea-4fe1-a151-7c92aa2e6b0e",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/authorizations/:authorization/decline",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"authorizations",
																":authorization",
																"decline"
															],
															"variable": [
																{
																	"key": "authorization",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing authorization to decline."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "383b78fe-a6be-4acb-8de9-0bf711cf714b"
								},
								{
									"name": "Issuing Authorization All",
									"id": "f16bbee5-dd3c-4df4-9fb7-7c3fb8d487ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/authorizations?card=esse deserunt&cardholder=esse deserunt&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&status=reversed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"authorizations"
											],
											"query": [
												{
													"key": "card",
													"value": "esse deserunt",
													"description": "Only return issuing transactions that belong to the given card."
												},
												{
													"key": "cardholder",
													"value": "esse deserunt",
													"description": "Only return authorizations belonging to the given cardholder."
												},
												{
													"key": "created[gt]",
													"value": "-13431299",
													"description": "Only return authorizations that were created during the given date interval."
												},
												{
													"key": "created[gte]",
													"value": "48353647",
													"description": "Only return authorizations that were created during the given date interval."
												},
												{
													"key": "created[lt]",
													"value": "-92044334",
													"description": "Only return authorizations that were created during the given date interval."
												},
												{
													"key": "created[lte]",
													"value": "-79364890",
													"description": "Only return authorizations that were created during the given date interval."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "status",
													"value": "reversed",
													"description": "Only return auths that have the given status. One of pending, closed, or reversed."
												}
											]
										},
										"description": "<p>Returns a list of authorizations</p>"
									},
									"response": [
										{
											"id": "6ee4da97-e32e-4828-9a78-162b3ab03a43",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations?card=<string>&cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations"
													],
													"query": [
														{
															"key": "card",
															"value": "<string>"
														},
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"approved\": \"<boolean>\",\n      \"authorization_method\": \"<string>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"balance_transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"card\": {\n        \"authorization_controls\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cardholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"is_held_amount_controllable\": \"<boolean>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"postal_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"pending_authorized_amount\": \"<integer>\",\n      \"pending_held_amount\": \"<integer>\",\n      \"request_history\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"verification_data\": {\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"cardholder\": \"<string>\"\n    },\n    {\n      \"approved\": \"<boolean>\",\n      \"authorization_method\": \"<string>\",\n      \"authorized_amount\": \"<integer>\",\n      \"authorized_currency\": \"<string>\",\n      \"balance_transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"card\": {\n        \"authorization_controls\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cardholder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"<unix-time>\",\n      \"held_amount\": \"<integer>\",\n      \"held_currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"is_held_amount_controllable\": \"<boolean>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"postal_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"pending_authorized_amount\": \"<integer>\",\n      \"pending_held_amount\": \"<integer>\",\n      \"request_history\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"transactions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"verification_data\": {\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"cardholder\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "5fed6650-96af-484f-9a29-f5cedb2ff65f",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/authorizations?card=<string>&cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"authorizations"
													],
													"query": [
														{
															"key": "card",
															"value": "<string>"
														},
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "5394e45d-2ff3-49e4-bc9d-2a414f3fd240"
						},
						{
							"name": "cardholders",
							"item": [
								{
									"name": "{cardholder}",
									"item": [
										{
											"name": "Issuing Cardholder Retrieve",
											"id": "fd79dd6a-6d54-44a4-b6e5-fa524437387c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders",
														":cardholder"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "cardholder",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the cardholder to be retrieved."
														}
													]
												},
												"description": "<p>Retrieves the details of an existing cardholder. You need only supply the unique identifier that was returned upon cardholder creation.</p>"
											},
											"response": [
												{
													"id": "19f035d3-483a-4d67-8dde-869966d11a91",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cardholders",
																":cardholder"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "cardholder",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the cardholder to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"billing\": {\n    \"address\": {\n      \"city\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone_number\": \"<string>\"\n}"
												},
												{
													"id": "76485e2e-aa19-46ac-901a-ded991e26476",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cardholders",
																":cardholder"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "cardholder",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the cardholder to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Cardholder Update",
											"id": "cfc1a152-d0d2-49af-ab3f-c3130f05b7de",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "billing[address][city]",
															"value": "culpa tempor",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[address][country]",
															"value": "mollit in in sit",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[address][line1]",
															"value": "in irure in",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[address][postal_code]",
															"value": "est dolore o",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[address][line2]",
															"value": "nisi esse pariatur do",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[address][state]",
															"value": "dolor cillum dolore eiusmod",
															"description": "The cardholder's billing address."
														},
														{
															"key": "billing[name]",
															"value": "Lorem labo",
															"description": "The cardholder's billing address."
														},
														{
															"key": "email",
															"value": "incididunt est reprehenderit velit",
															"description": "The cardholder's email address."
														},
														{
															"key": "expand[0]",
															"value": "amet Duis cillum",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "minim ",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "name",
															"value": "nulla quis",
															"description": "The cardholder's name. This will be printed on cards issued to them."
														},
														{
															"key": "phone_number",
															"value": "laborum incididunt ex",
															"description": "The cardholder's phone number."
														},
														{
															"key": "status",
															"value": "inactive",
															"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders",
														":cardholder"
													],
													"variable": [
														{
															"key": "cardholder",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>Update the details of an existing cardholder</p>"
											},
											"response": [
												{
													"id": "b5084493-17af-401f-895a-637c0abfdac5",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][city]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][country]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][line1]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][postal_code]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][line2]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][state]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[name]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's email address.",
																	"key": "email",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's name. This will be printed on cards issued to them.",
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's phone number.",
																	"key": "phone_number",
																	"value": "<string>"
																},
																{
																	"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.",
																	"key": "status",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cardholders",
																":cardholder"
															],
															"variable": [
																{
																	"key": "cardholder",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"billing\": {\n    \"address\": {\n      \"city\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone_number\": \"<string>\"\n}"
												},
												{
													"id": "413e243c-11a6-40c2-9842-953e0c8601c3",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][city]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][country]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][line1]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][postal_code]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][line2]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[address][state]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's billing address.",
																	"key": "billing[name]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's email address.",
																	"key": "email",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's name. This will be printed on cards issued to them.",
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"description": "The cardholder's phone number.",
																	"key": "phone_number",
																	"value": "<string>"
																},
																{
																	"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.",
																	"key": "status",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cardholders/:cardholder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cardholders",
																":cardholder"
															],
															"variable": [
																{
																	"key": "cardholder",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "4d2c0fcd-00c9-405f-b481-634a6506d84a"
								},
								{
									"name": "Issuing Cardholder All",
									"id": "020bbe3d-ecdd-4ed5-9fef-712caefdc0d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/cardholders?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&email=adipisicing incididunt esse&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&phone_number=adipisicing incididunt esse&starting_after=esse deserunt&status=active&type=business_entity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"cardholders"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "-13431299",
													"description": "Only return cardholders that were created during the given date interval."
												},
												{
													"key": "created[gte]",
													"value": "48353647",
													"description": "Only return cardholders that were created during the given date interval."
												},
												{
													"key": "created[lt]",
													"value": "-92044334",
													"description": "Only return cardholders that were created during the given date interval."
												},
												{
													"key": "created[lte]",
													"value": "-79364890",
													"description": "Only return cardholders that were created during the given date interval."
												},
												{
													"key": "email",
													"value": "adipisicing incididunt esse",
													"description": "Only return cardholders that have the given email."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "phone_number",
													"value": "adipisicing incididunt esse",
													"description": "Only return cardholders that have the given phone number."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "status",
													"value": "active",
													"description": "Only return cardholders that have the given status. One of `active` or `inactive`."
												},
												{
													"key": "type",
													"value": "business_entity",
													"description": "Only return cardholders that have the given type. One of One of `individual` or `business_entity`."
												}
											]
										},
										"description": "<p>Returns a list of your cardholders sorted by creation date, with the most recent cardholders appearing first</p>"
									},
									"response": [
										{
											"id": "1d065732-9495-4bb8-b3d4-07b7fc7e5ae8",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&email=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&phone_number=<string>&starting_after=<string>&status=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "phone_number",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"billing\": {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phone_number\": \"<string>\"\n    },\n    {\n      \"billing\": {\n        \"address\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phone_number\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "bdea3725-bcab-4199-bb09-c406822fab65",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&email=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&phone_number=<string>&starting_after=<string>&status=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "phone_number",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Issuing Cardholder Create",
									"id": "ac6ba861-38f4-47fe-a050-7e9c6658f77a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "billing[address][city]",
													"value": "elit incididunt sunt fugiat ipsum",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[address][country]",
													"value": "commodo proident ea ut",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[address][line1]",
													"value": "exercitation dolore reprehenderit tempor",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[address][postal_code]",
													"value": "quis aliqua nostrud Duis qui",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[address][line2]",
													"value": "",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[address][state]",
													"value": "in consectetur sit voluptate nostrud",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "billing[name]",
													"value": "anim ullamco",
													"description": "(Required) The cardholder's billing address."
												},
												{
													"key": "name",
													"value": "cillum incididunt lab",
													"description": "(Required) The cardholder's name. This will be printed on cards issued to them."
												},
												{
													"key": "type",
													"value": "business_entity",
													"description": "(Required) Specifies if the card is held by a human or not."
												},
												{
													"key": "email",
													"value": "cupidatat consequ",
													"description": "The cardholder's email address."
												},
												{
													"key": "expand[0]",
													"value": "sed et voluptate nulla",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "est nisi sit cupidatat reprehenderit",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "phone_number",
													"value": "dolor occaecat sint nulla",
													"description": "The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already."
												},
												{
													"key": "status",
													"value": "inactive",
													"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/cardholders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"cardholders"
											]
										},
										"description": "<p>Create an issuing cardholder</p>"
									},
									"response": [
										{
											"id": "73efbad1-79f0-4d52-97a4-c58a11e873fa",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][city]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][country]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][line1]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][line2]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][state]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[name]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's name. This will be printed on cards issued to them.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "(Required) Specifies if the card is held by a human or not.",
															"key": "type",
															"value": "<string>"
														},
														{
															"description": "The cardholder's email address.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already.",
															"key": "phone_number",
															"value": "<string>"
														},
														{
															"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"billing\": {\n    \"address\": {\n      \"city\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"country\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line1\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line2\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"postal_code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"state\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"name\": \"<string>\"\n  },\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phone_number\": \"<string>\"\n}"
										},
										{
											"id": "c1b6f053-7575-420c-b7ca-eeda336e7876",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][city]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][country]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][line1]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][line2]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[address][state]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's billing address.",
															"key": "billing[name]",
															"value": "<string>"
														},
														{
															"description": "(Required) The cardholder's name. This will be printed on cards issued to them.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "(Required) Specifies if the card is held by a human or not.",
															"key": "type",
															"value": "<string>"
														},
														{
															"description": "The cardholder's email address.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already.",
															"key": "phone_number",
															"value": "<string>"
														},
														{
															"description": "Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cardholders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cardholders"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "ee280e1d-5e13-47c1-946a-d78aea3b649a"
						},
						{
							"name": "cards",
							"item": [
								{
									"name": "{card}",
									"item": [
										{
											"name": "Issuing Card Retrieve",
											"id": "f66b0fc7-cd35-401a-8b1b-eda602ed3d3d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards/:card?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards",
														":card"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "card",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the card to be retrieved."
														}
													]
												},
												"description": "<p>Retrieves the details of an existing card. You need only supply the unique card identifier that was returned upon card creation.</p>"
											},
											"response": [
												{
													"id": "d53d6991-a4e3-4be1-887b-4649d2f7a092",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the card to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"authorization_controls\": {\n    \"currency\": \"<string>\",\n    \"max_amount\": \"<integer>\",\n    \"max_approvals\": \"<integer>\"\n  },\n  \"brand\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cardholder\": {\n    \"billing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone_number\": \"<string>\"\n  },\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"eta\": \"<unix-time>\",\n    \"phone\": \"<string>\",\n    \"status\": \"<string>\",\n    \"tracking_number\": \"<string>\",\n    \"tracking_url\": \"<string>\"\n  }\n}"
												},
												{
													"id": "2e41649a-9669-4f38-be00-754cbf815eba",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the card to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Card Update",
											"id": "bbe29475-400b-464c-bc50-9b92a0a7274f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "authorization_controls[allowed_categories][0]",
															"value": "dating_escort_services",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "authorization_controls[allowed_categories][1]",
															"value": "tourist_attractions_and_exhibits",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "authorization_controls[blocked_categories][0]",
															"value": "motorcycle_shops_dealers",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "authorization_controls[blocked_categories][1]",
															"value": "nurseries_lawn_and_garden_supply_stores",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "authorization_controls[max_amount]",
															"value": "37698401",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "authorization_controls[max_approvals]",
															"value": "-77752110",
															"description": "A set of rules to automatically decline certain authorizations."
														},
														{
															"key": "expand[0]",
															"value": "aliquip nisi",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "ut fugiat enim",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "status",
															"value": "inactive",
															"description": "Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or `canceled`."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards/:card",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards",
														":card"
													],
													"variable": [
														{
															"key": "card",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the issued card to be retrieved."
														}
													]
												},
												"description": "<p>Update the details of an existing issued card</p>"
											},
											"response": [
												{
													"id": "cf91c7d9-0307-48f4-950b-79e4314b211b",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[allowed_categories][0]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[allowed_categories][1]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[blocked_categories][0]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[blocked_categories][1]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[max_amount]",
																	"value": "<integer>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[max_approvals]",
																	"value": "<integer>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or `canceled`.",
																	"key": "status",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card"
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issued card to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"authorization_controls\": {\n    \"currency\": \"<string>\",\n    \"max_amount\": \"<integer>\",\n    \"max_approvals\": \"<integer>\"\n  },\n  \"brand\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cardholder\": {\n    \"billing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone_number\": \"<string>\"\n  },\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"eta\": \"<unix-time>\",\n    \"phone\": \"<string>\",\n    \"status\": \"<string>\",\n    \"tracking_number\": \"<string>\",\n    \"tracking_url\": \"<string>\"\n  }\n}"
												},
												{
													"id": "1ab89a46-743b-4ad1-9d5a-880af33d525e",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[allowed_categories][0]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[allowed_categories][1]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[blocked_categories][0]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[blocked_categories][1]",
																	"value": "<string>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[max_amount]",
																	"value": "<integer>"
																},
																{
																	"description": "A set of rules to automatically decline certain authorizations.",
																	"key": "authorization_controls[max_approvals]",
																	"value": "<integer>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or `canceled`.",
																	"key": "status",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card"
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issued card to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Card Details Retrieve",
											"id": "c17c6979-b08e-4d5e-9527-d188334d8f9e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards/:card/details?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards",
														":card",
														"details"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "card",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the card to be retrieved."
														}
													]
												},
												"description": "<p>(Virtual cards only) Retrieves the sensitive details of an existing card.</p>"
											},
											"response": [
												{
													"id": "86f8a716-085b-4830-b50a-8dfbc170770b",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card/details?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card",
																"details"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the card to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"card\": {\n    \"authorization_controls\": {\n      \"allowed_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocked_categories\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_amount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"max_approvals\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"brand\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"cardholder\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shipping\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"cvc\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"number\": \"<string>\",\n  \"object\": \"<string>\"\n}"
												},
												{
													"id": "a02bb97f-7d77-402d-9a13-ddb29faeb9fd",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/cards/:card/details?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"cards",
																":card",
																"details"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "card",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the card to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "418f8240-40ae-4f4f-a111-740eabfe0ef9"
								},
								{
									"name": "Issuing Card All",
									"id": "47f27de4-4a47-45c7-a10f-17584c321296",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/cards?cardholder=esse deserunt&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&exp_month=66746697&exp_year=66746697&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&last4=esse deserunt&limit=66746697&name=esse deserunt&source=esse deserunt&starting_after=esse deserunt&status=active&type=virtual",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"cards"
											],
											"query": [
												{
													"key": "cardholder",
													"value": "esse deserunt",
													"description": "Only return cards belonging to the Cardholder with the provided ID."
												},
												{
													"key": "created[gt]",
													"value": "-13431299",
													"description": "Only return cards that were issued during the given date interval."
												},
												{
													"key": "created[gte]",
													"value": "48353647",
													"description": "Only return cards that were issued during the given date interval."
												},
												{
													"key": "created[lt]",
													"value": "-92044334",
													"description": "Only return cards that were issued during the given date interval."
												},
												{
													"key": "created[lte]",
													"value": "-79364890",
													"description": "Only return cards that were issued during the given date interval."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "exp_month",
													"value": "66746697",
													"description": "Only return cards that have the given expiration month."
												},
												{
													"key": "exp_year",
													"value": "66746697",
													"description": "Only return cards that have the given expiration year."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "last4",
													"value": "esse deserunt",
													"description": "Only return cards that have the given last4."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "name",
													"value": "esse deserunt",
													"description": "Only return cards that have the given name."
												},
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "Only return cards whose full card number matches that of this card source id"
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "status",
													"value": "active",
													"description": "Only return cards that have the given status. One of active, inactive, or canceled."
												},
												{
													"key": "type",
													"value": "virtual",
													"description": "Only return cards that have the given type. One of virtual or physical."
												}
											]
										},
										"description": "<p>Returns a list of your issued cards. The cards are returned sorted by creation date, with the most recent cards appearing first</p>"
									},
									"response": [
										{
											"id": "6db78489-b2f3-42af-96fb-6af77624df0d",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards?cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&exp_month=<integer>&exp_year=<integer>&expand[0]=<string>&expand[1]=<string>&last4=<string>&limit=<integer>&name=<string>&source=<string>&starting_after=<string>&status=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards"
													],
													"query": [
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "exp_month",
															"value": "<integer>"
														},
														{
															"key": "exp_year",
															"value": "<integer>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "last4",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "source",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"authorization_controls\": {\n        \"allowed_categories\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"blocked_categories\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_approvals\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"brand\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"authorization_controls\": {\n        \"allowed_categories\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"blocked_categories\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"max_approvals\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"brand\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"cardholder\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "a0896642-ce37-429e-8e65-0ec1abda0267",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards?cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&exp_month=<integer>&exp_year=<integer>&expand[0]=<string>&expand[1]=<string>&last4=<string>&limit=<integer>&name=<string>&source=<string>&starting_after=<string>&status=<string>&type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards"
													],
													"query": [
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "exp_month",
															"value": "<integer>"
														},
														{
															"key": "exp_year",
															"value": "<integer>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "last4",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "source",
															"value": "<string>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Issuing Card Create",
									"id": "7c21cb82-c93c-48ee-bd32-56a12198cc55",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "currency",
													"value": "enim cillum ullamco Excepteur cupidatat",
													"description": "(Required) The currency for the card. This currently must be `usd`."
												},
												{
													"key": "type",
													"value": "virtual",
													"description": "(Required) "
												},
												{
													"key": "authorization_controls[allowed_categories][0]",
													"value": "direct_marketing_subscription",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "authorization_controls[allowed_categories][1]",
													"value": "book_stores",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "authorization_controls[blocked_categories][0]",
													"value": "miscellaneous_general_merchandise",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "authorization_controls[blocked_categories][1]",
													"value": "miscellaneous_general_merchandise",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "authorization_controls[max_amount]",
													"value": "-3547462",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "authorization_controls[max_approvals]",
													"value": "59899202",
													"description": "A set of rules to automatically decline certain authorizations."
												},
												{
													"key": "cardholder",
													"value": "cupidatat",
													"description": "The [Cardholder](/docs/api#issuing_cardholder_object) object with which the card will be associated."
												},
												{
													"key": "expand[0]",
													"value": "esse labore laborum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "est enim",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "shipping[address][city]",
													"value": "in Lorem",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[address][country]",
													"value": "quis adipisicing",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[address][line1]",
													"value": "nulla quis consequat laborum",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "exercitation",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[address][line2]",
													"value": "nostrud irure aliqua",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[address][state]",
													"value": "sunt dolore ut non ex",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "shipping[name]",
													"value": "ut in aute",
													"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards."
												},
												{
													"key": "status",
													"value": "active",
													"description": "Specifies whether to permit authorizations on this card. Possible values are `active` or `inactive`."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/cards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"cards"
											]
										},
										"description": "<p>Create an issuing card</p>"
									},
									"response": [
										{
											"id": "0b5a8040-01c6-4f1d-b7ab-5b7c67ca272e",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The currency for the card. This currently must be `usd`.",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "type",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[allowed_categories][0]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[allowed_categories][1]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[blocked_categories][0]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[blocked_categories][1]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[max_amount]",
															"value": "<integer>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[max_approvals]",
															"value": "<integer>"
														},
														{
															"description": "The [Cardholder](/docs/api#issuing_cardholder_object) object with which the card will be associated.",
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"description": "Specifies whether to permit authorizations on this card. Possible values are `active` or `inactive`.",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authorization_controls\": {\n    \"currency\": \"<string>\",\n    \"max_amount\": \"<integer>\",\n    \"max_approvals\": \"<integer>\"\n  },\n  \"brand\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"exp_month\": \"<integer>\",\n  \"exp_year\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"last4\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cardholder\": {\n    \"billing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phone_number\": \"<string>\"\n  },\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"eta\": \"<unix-time>\",\n    \"phone\": \"<string>\",\n    \"status\": \"<string>\",\n    \"tracking_number\": \"<string>\",\n    \"tracking_url\": \"<string>\"\n  }\n}"
										},
										{
											"id": "b367a74f-187e-49ac-8932-341086278bfe",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The currency for the card. This currently must be `usd`.",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "type",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[allowed_categories][0]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[allowed_categories][1]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[blocked_categories][0]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[blocked_categories][1]",
															"value": "<string>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[max_amount]",
															"value": "<integer>"
														},
														{
															"description": "A set of rules to automatically decline certain authorizations.",
															"key": "authorization_controls[max_approvals]",
															"value": "<integer>"
														},
														{
															"description": "The [Cardholder](/docs/api#issuing_cardholder_object) object with which the card will be associated.",
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][city]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][country]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][line1]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][line2]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[address][state]",
															"value": "<string>"
														},
														{
															"description": "The address where the card will be shipped. This will default to the cardholder's billing address for physical cards.",
															"key": "shipping[name]",
															"value": "<string>"
														},
														{
															"description": "Specifies whether to permit authorizations on this card. Possible values are `active` or `inactive`.",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/cards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"cards"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "58439506-dbd7-4319-908e-54a3dffb8378"
						},
						{
							"name": "disputes",
							"item": [
								{
									"name": "{dispute}",
									"item": [
										{
											"name": "Issuing Dispute Retrieve",
											"id": "be14052a-4cb1-4ce4-8745-ef1fa3715152",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes",
														":dispute"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired dispute."
														}
													]
												},
												"description": "<p>Retrieves a dispute object.</p>"
											},
											"response": [
												{
													"id": "c1d6a97f-dd05-4774-aa6b-05983cd8850f",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"disputes",
																":dispute"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "dispute",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired dispute."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"fraudulent\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\",\n  \"transaction\": \"<string>\"\n}"
												},
												{
													"id": "e13d4665-17be-4bcb-b4be-53925404f378",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"disputes",
																":dispute"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "dispute",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired dispute."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Dispute Update",
											"id": "feaa632b-43d4-423f-8434-2f2832fcf250",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "eiusmod Ut aliquip",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "ad consectetur Lorem",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes",
														":dispute"
													],
													"variable": [
														{
															"key": "dispute",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "<p>Update the metadata of an existing dispute</p>"
											},
											"response": [
												{
													"id": "c845c920-4c70-4d3b-828c-fb4fe5d92f98",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"disputes",
																":dispute"
															],
															"variable": [
																{
																	"key": "dispute",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"fraudulent\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\",\n  \"transaction\": \"<string>\"\n}"
												},
												{
													"id": "2cdd662e-b41d-47ed-828a-20752c69521f",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/disputes/:dispute",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"disputes",
																":dispute"
															],
															"variable": [
																{
																	"key": "dispute",
																	"value": "esse deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "2441f9b4-7e44-479a-b2fb-9f4c73b3b74b"
								},
								{
									"name": "Issuing Dispute All",
									"id": "2bd60dd4-68e0-428c-8555-c6086cf4640b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/disputes?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&transaction=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"disputes"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "-13431299",
													"description": "Only return issuing disputes that were created during the given date interval."
												},
												{
													"key": "created[gte]",
													"value": "48353647",
													"description": "Only return issuing disputes that were created during the given date interval."
												},
												{
													"key": "created[lt]",
													"value": "-92044334",
													"description": "Only return issuing disputes that were created during the given date interval."
												},
												{
													"key": "created[lte]",
													"value": "-79364890",
													"description": "Only return issuing disputes that were created during the given date interval."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												},
												{
													"key": "transaction",
													"value": "esse deserunt",
													"description": "Only return issuing disputes for the given transaction."
												}
											]
										},
										"description": "<p>Returns a list of disputes</p>"
									},
									"response": [
										{
											"id": "4d388422-e20e-442b-9fe9-07704b998a88",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&transaction=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "transaction",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"evidence\": {\n        \"fraudulent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"other\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"status\": \"<string>\",\n      \"transaction\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"evidence\": {\n        \"fraudulent\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"other\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"status\": \"<string>\",\n      \"transaction\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "e57de4ef-dcb0-48d1-b841-777e5c6b9ade",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&transaction=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														},
														{
															"key": "transaction",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Issuing Dispute Create",
									"id": "5b88e205-6f65-4701-b367-1b2a25deaddb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "other",
													"description": "(Required) The reason for the dispute, which can be chosen out of a set of valid values."
												},
												{
													"key": "transaction",
													"value": "aute veniam sint aliquip in",
													"description": "(Required) The ID of the issuing transaction to create a dispute for."
												},
												{
													"key": "amount",
													"value": "34167479",
													"description": "Amount to dispute, defaults to full value, given in the currency the transaction was made in."
												},
												{
													"key": "evidence[fraudulent][dispute_explanation]",
													"value": "fugiat esse",
													"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object."
												},
												{
													"key": "evidence[fraudulent][uncategorized_file]",
													"value": "cupidatat Excepteur aliquip exercitation",
													"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object."
												},
												{
													"key": "evidence[other][dispute_explanation]",
													"value": "laboris consequat magna Duis",
													"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object."
												},
												{
													"key": "evidence[other][uncategorized_file]",
													"value": "labore",
													"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object."
												},
												{
													"key": "expand[0]",
													"value": "ut dolore",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "amet eu",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/disputes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"disputes"
											]
										},
										"description": "<p>Creates a dispute object.</p>"
									},
									"response": [
										{
											"id": "4034d37b-a188-4d9a-b54c-0415dfa2992e",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The reason for the dispute, which can be chosen out of a set of valid values.",
															"key": "reason",
															"value": "<string>"
														},
														{
															"description": "(Required) The ID of the issuing transaction to create a dispute for.",
															"key": "transaction",
															"value": "<string>"
														},
														{
															"description": "Amount to dispute, defaults to full value, given in the currency the transaction was made in.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[fraudulent][dispute_explanation]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[fraudulent][uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[other][dispute_explanation]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[other][uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"evidence\": {\n    \"fraudulent\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"other\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"status\": \"<string>\",\n  \"transaction\": \"<string>\"\n}"
										},
										{
											"id": "29236401-ba8d-45a1-9c87-9211391705c2",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The reason for the dispute, which can be chosen out of a set of valid values.",
															"key": "reason",
															"value": "<string>"
														},
														{
															"description": "(Required) The ID of the issuing transaction to create a dispute for.",
															"key": "transaction",
															"value": "<string>"
														},
														{
															"description": "Amount to dispute, defaults to full value, given in the currency the transaction was made in.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[fraudulent][dispute_explanation]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[fraudulent][uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[other][dispute_explanation]",
															"value": "<string>"
														},
														{
															"description": "A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.",
															"key": "evidence[other][uncategorized_file]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/disputes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"disputes"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "223cc70d-f174-4ce0-9618-9cbec0878c5f"
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "{transaction}",
									"item": [
										{
											"name": "Issuing Transaction Retrieve",
											"id": "1cda1899-3a78-4f34-bdcb-e46c241d07e0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"transactions",
														":transaction"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "transaction",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired issuing transaction."
														}
													]
												},
												"description": "<p>Retrieves an issuing transaction object.</p>"
											},
											"response": [
												{
													"id": "969d24a2-8f6a-45b3-9dc5-ff520d37fbf7",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"transactions",
																":transaction"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired issuing transaction."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"card\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"authorization\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"cardholder\": \"<string>\",\n  \"dispute\": \"<string>\"\n}"
												},
												{
													"id": "ad8eebbc-c657-4eeb-8e35-d52900658834",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"transactions",
																":transaction"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the desired issuing transaction."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Issuing Transaction Update",
											"id": "94b6ffdc-75bd-4a5f-bdbe-0cbff0f5d001",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "cupidatat",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "sint anim",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"transactions",
														":transaction"
													],
													"variable": [
														{
															"key": "transaction",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the issuing transaction to be retrieved."
														}
													]
												},
												"description": "<p>Update the metadata of an issuing transaction</p>"
											},
											"response": [
												{
													"id": "11e1737c-dfb5-4c39-9a61-4ea7914077cf",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"transactions",
																":transaction"
															],
															"variable": [
																{
																	"key": "transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing transaction to be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"card\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"merchant_data\": {\n    \"category\": \"<string>\",\n    \"network_id\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"name\": \"<string>\",\n    \"postal_code\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"authorization\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"cardholder\": \"<string>\",\n  \"dispute\": \"<string>\"\n}"
												},
												{
													"id": "5012b9c9-aba0-4b04-9908-1938696b2b90",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/issuing/transactions/:transaction",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"issuing",
																"transactions",
																":transaction"
															],
															"variable": [
																{
																	"key": "transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The identifier of the issuing transaction to be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "06d43619-6894-43a6-a7f2-2793e28a1271"
								},
								{
									"name": "Issuing Transaction All",
									"id": "7c7052ae-54e0-4f3e-8b37-d852ce205868",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/issuing/transactions?card=esse deserunt&cardholder=esse deserunt&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"issuing",
												"transactions"
											],
											"query": [
												{
													"key": "card",
													"value": "esse deserunt",
													"description": "Only return issuing transactions that belong to the given card."
												},
												{
													"key": "cardholder",
													"value": "esse deserunt",
													"description": "Only return authorizations belonging to the given cardholder."
												},
												{
													"key": "created[gt]",
													"value": "-13431299",
													"description": "Only return transactions that were created during the given date interval."
												},
												{
													"key": "created[gte]",
													"value": "48353647",
													"description": "Only return transactions that were created during the given date interval."
												},
												{
													"key": "created[lt]",
													"value": "-92044334",
													"description": "Only return transactions that were created during the given date interval."
												},
												{
													"key": "created[lte]",
													"value": "-79364890",
													"description": "Only return transactions that were created during the given date interval."
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											]
										},
										"description": "<p>Returns a list of issuing transactions</p>"
									},
									"response": [
										{
											"id": "c02243fe-3248-42fd-ba56-f3dd8edc8ca2",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/transactions?card=<string>&cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"transactions"
													],
													"query": [
														{
															"key": "card",
															"value": "<string>"
														},
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"card\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"postal_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"cardholder\": \"<string>\",\n      \"dispute\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"card\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"merchant_data\": {\n        \"category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"postal_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"authorization\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"cardholder\": \"<string>\",\n      \"dispute\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "80939c1e-9138-4546-a4a8-25584a7dfe33",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/issuing/transactions?card=<string>&cardholder=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"issuing",
														"transactions"
													],
													"query": [
														{
															"key": "card",
															"value": "<string>"
														},
														{
															"key": "cardholder",
															"value": "<string>"
														},
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "4b2ab0a8-5a62-4334-aa4f-6a0081b7c84d"
						}
					],
					"id": "89415b3b-03ce-4bf9-b565-e9f5d1118aa6"
				},
				{
					"name": "order_returns",
					"item": [
						{
							"name": "All Order Returns",
							"id": "e77cf641-deb7-43cc-a346-934fe117ceeb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/order_returns?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&order=esse deserunt&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"order_returns"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "Date this return was created."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "Date this return was created."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "Date this return was created."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "Date this return was created."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "order",
											"value": "esse deserunt",
											"description": "The order to retrieve returns for."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.</p>"
							},
							"response": [
								{
									"id": "7b4101c8-93f8-40ea-ae56-dbb635e81a02",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/order_returns?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&order=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"order_returns"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"order\": \"<string>\",\n      \"refund\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"order\": \"<string>\",\n      \"refund\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "513983f2-5446-4bde-addd-df882441dd72",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/order_returns?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&order=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"order_returns"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Order Return",
							"id": "e5a39f86-0128-43f3-a89d-6167beeaf5a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/order_returns/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"order_returns",
										":id"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "esse deserunt",
											"description": "(Required) The identifier of the order return to be retrieved."
										}
									]
								},
								"description": "<p>Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.</p>"
							},
							"response": [
								{
									"id": "433cd41a-b730-4d63-b13b-029b3cf58287",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/order_returns/:id?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"order_returns",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the order return to be retrieved."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"order\": \"<string>\",\n  \"refund\": \"<string>\"\n}"
								},
								{
									"id": "8d5bb416-84b4-4e0d-97fe-c801d6efa94b",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/order_returns/:id?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"order_returns",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the order return to be retrieved."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "0493b0f2-0e26-44a9-91e3-a1dff142ea51"
				},
				{
					"name": "orders",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve Order",
									"id": "f8b00d04-687d-493f-9c3d-2198a1adbb12",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/orders/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the order to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>"
									},
									"response": [
										{
											"id": "545108d5-94d8-4596-a85e-a9f0d47b413b",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the order to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_returned\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<integer>\",\n  \"charge\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_coupon_code\": \"<string>\",\n  \"returns\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"selected_shipping_method\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"shipping_methods\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"status_transitions\": {\n    \"canceled\": \"<unix-time>\",\n    \"fulfiled\": \"<unix-time>\",\n    \"paid\": \"<unix-time>\",\n    \"returned\": \"<unix-time>\"\n  },\n  \"updated\": \"<unix-time>\",\n  \"upstream_id\": \"<string>\"\n}"
										},
										{
											"id": "dff6f86e-27ec-47c2-b7b8-4bd8f348f4d8",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the order to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Order",
									"id": "7b2d9870-8591-40ba-944e-ef0d979bc5a8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "coupon",
													"value": "exercitation do eiusmod Lorem",
													"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order."
												},
												{
													"key": "expand[0]",
													"value": "ex eu Lorem est",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "sed nulla",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "selected_shipping_method",
													"value": "fugiat",
													"description": "The shipping method to select for fulfilling this order. If specified, must be one of the `id`s of a shipping method in the `shipping_methods` array. If specified, will overwrite the existing selected shipping method, updating `items` as necessary."
												},
												{
													"key": "shipping[carrier]",
													"value": "sunt ut",
													"description": "Tracking information once the order has been fulfilled."
												},
												{
													"key": "shipping[tracking_number]",
													"value": "ea laboris quis officia proident",
													"description": "Tracking information once the order has been fulfilled."
												},
												{
													"key": "status",
													"value": "fulfilled",
													"description": "Current order status. One of `created`, `paid`, `canceled`, `fulfilled`, or `returned`. More detail in the [Orders Guide](/docs/orders/guide#understanding-order-statuses)."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>"
									},
									"response": [
										{
											"id": "48607e89-72d0-44b6-b3fc-ee22acd31d0a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.",
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The shipping method to select for fulfilling this order. If specified, must be one of the `id`s of a shipping method in the `shipping_methods` array. If specified, will overwrite the existing selected shipping method, updating `items` as necessary.",
															"key": "selected_shipping_method",
															"value": "<string>"
														},
														{
															"description": "Tracking information once the order has been fulfilled.",
															"key": "shipping[carrier]",
															"value": "<string>"
														},
														{
															"description": "Tracking information once the order has been fulfilled.",
															"key": "shipping[tracking_number]",
															"value": "<string>"
														},
														{
															"description": "Current order status. One of `created`, `paid`, `canceled`, `fulfilled`, or `returned`. More detail in the [Orders Guide](/docs/orders/guide#understanding-order-statuses).",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_returned\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<integer>\",\n  \"charge\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_coupon_code\": \"<string>\",\n  \"returns\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"selected_shipping_method\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"shipping_methods\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"status_transitions\": {\n    \"canceled\": \"<unix-time>\",\n    \"fulfiled\": \"<unix-time>\",\n    \"paid\": \"<unix-time>\",\n    \"returned\": \"<unix-time>\"\n  },\n  \"updated\": \"<unix-time>\",\n  \"upstream_id\": \"<string>\"\n}"
										},
										{
											"id": "486bf201-3e7a-4aa4-ada4-9012287cd243",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.",
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The shipping method to select for fulfilling this order. If specified, must be one of the `id`s of a shipping method in the `shipping_methods` array. If specified, will overwrite the existing selected shipping method, updating `items` as necessary.",
															"key": "selected_shipping_method",
															"value": "<string>"
														},
														{
															"description": "Tracking information once the order has been fulfilled.",
															"key": "shipping[carrier]",
															"value": "<string>"
														},
														{
															"description": "Tracking information once the order has been fulfilled.",
															"key": "shipping[tracking_number]",
															"value": "<string>"
														},
														{
															"description": "Current order status. One of `created`, `paid`, `canceled`, `fulfilled`, or `returned`. More detail in the [Orders Guide](/docs/orders/guide#understanding-order-statuses).",
															"key": "status",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Pay Order",
									"id": "e2db1d53-fc15-4297-92bf-0c35bf43fac0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "application_fee",
													"value": "-435615"
												},
												{
													"key": "customer",
													"value": "elit in",
													"description": "The ID of an existing customer that will be charged for this order. If no customer was attached to the order at creation, either `source` or `customer` is required. Otherwise, the specified customer will be charged instead of the one attached to the order."
												},
												{
													"key": "email",
													"value": "consectetur i",
													"description": "The email address of the customer placing the order. Required if not previously specified for the order."
												},
												{
													"key": "expand[0]",
													"value": "pariatur magna",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "labore sed ipsum occaecat",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "shipping_method",
													"value": "laborum eu consequat labore"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/orders/:id/pay",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders",
												":id",
												"pay"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "75dff249-6df0-43e7-a833-1b9ba39f6fdc",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "The ID of an existing customer that will be charged for this order. If no customer was attached to the order at creation, either `source` or `customer` is required. Otherwise, the specified customer will be charged instead of the one attached to the order.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "The email address of the customer placing the order. Required if not previously specified for the order.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "shipping_method",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id/pay",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id",
														"pay"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_returned\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<integer>\",\n  \"charge\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_coupon_code\": \"<string>\",\n  \"returns\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"selected_shipping_method\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"shipping_methods\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"status_transitions\": {\n    \"canceled\": \"<unix-time>\",\n    \"fulfiled\": \"<unix-time>\",\n    \"paid\": \"<unix-time>\",\n    \"returned\": \"<unix-time>\"\n  },\n  \"updated\": \"<unix-time>\",\n  \"upstream_id\": \"<string>\"\n}"
										},
										{
											"id": "86c48dae-1edf-46ef-aa78-9222b588e9fc",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "application_fee",
															"value": "<integer>"
														},
														{
															"description": "The ID of an existing customer that will be charged for this order. If no customer was attached to the order at creation, either `source` or `customer` is required. Otherwise, the specified customer will be charged instead of the one attached to the order.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "The email address of the customer placing the order. Required if not previously specified for the order.",
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "shipping_method",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id/pay",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id",
														"pay"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Create Order Return",
									"id": "0f65468f-4410-4a00-85f5-d35f8ca4df42",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "labore ad cillum sunt aute",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ut tempor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "items[0][amount]",
													"value": "14244215",
													"description": "List of items to return."
												},
												{
													"key": "items[0][description]",
													"value": "minim deserunt",
													"description": "List of items to return."
												},
												{
													"key": "items[0][parent]",
													"value": "pariatur dolor nostrud",
													"description": "List of items to return."
												},
												{
													"key": "items[0][quantity]",
													"value": "-8698593",
													"description": "List of items to return."
												},
												{
													"key": "items[0][type]",
													"value": "shipping",
													"description": "List of items to return."
												},
												{
													"key": "items[1][amount]",
													"value": "-10263893",
													"description": "List of items to return."
												},
												{
													"key": "items[1][description]",
													"value": "dolore ad esse reprehenderit",
													"description": "List of items to return."
												},
												{
													"key": "items[1][parent]",
													"value": "officia",
													"description": "List of items to return."
												},
												{
													"key": "items[1][quantity]",
													"value": "-89556630",
													"description": "List of items to return."
												},
												{
													"key": "items[1][type]",
													"value": "shipping",
													"description": "List of items to return."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/orders/:id/returns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders",
												":id",
												"returns"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Return all or part of an order. The order must have a status of <code>paid</code> or <code>fulfilled</code> before it can be returned. Once all items have been returned, the order will become <code>canceled</code> or <code>returned</code> depending on which status the order started in.</p>"
									},
									"response": [
										{
											"id": "8465499d-73ec-4e41-b780-66edef290662",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][amount]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][description]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][parent]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][type]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][amount]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][description]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][parent]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][type]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id/returns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id",
														"returns"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"order\": \"<string>\",\n  \"refund\": \"<string>\"\n}"
										},
										{
											"id": "5acdec44-0801-44f8-a9c4-45d0c9408de8",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][amount]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][description]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][parent]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[0][type]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][amount]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][description]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][parent]",
															"value": "<string>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of items to return.",
															"key": "items[1][type]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/orders/:id/returns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"orders",
														":id",
														"returns"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "2032f2cf-b37b-41ca-8a51-0679a6846325"
						},
						{
							"name": "All Orders",
							"id": "91bf8ec3-3514-4007-b308-c147785e9374",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/orders?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&ids[0]=enim Ut culpa ut&ids[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&status=esse deserunt&status_transitions[canceled][gt]=-11190512&status_transitions[canceled][gte]=5046071&status_transitions[canceled][lt]=23775099&status_transitions[canceled][lte]=-64500875&status_transitions[fulfilled][gt]=-40444275&status_transitions[fulfilled][gte]=-47881680&status_transitions[fulfilled][lt]=57631527&status_transitions[fulfilled][lte]=-58378084&status_transitions[paid][gt]=89472585&status_transitions[paid][gte]=2896337&status_transitions[paid][lt]=-73262291&status_transitions[paid][lte]=6320637&status_transitions[returned][gt]=-95820207&status_transitions[returned][gte]=35015666&status_transitions[returned][lt]=-33496048&status_transitions[returned][lte]=84550820&upstream_ids[0]=enim Ut culpa ut&upstream_ids[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"orders"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "Date this order was created."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "Date this order was created."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "Date this order was created."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "Date this order was created."
										},
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "Only return orders for the given customer."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "ids[0]",
											"value": "enim Ut culpa ut",
											"description": "Only return orders with the given IDs."
										},
										{
											"key": "ids[1]",
											"value": "cupidatat ullamco esse",
											"description": "Only return orders with the given IDs."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "status",
											"value": "esse deserunt",
											"description": "Only return orders that have the given status. One of `created`, `paid`, `fulfilled`, or `refunded`."
										},
										{
											"key": "status_transitions[canceled][gt]",
											"value": "-11190512",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[canceled][gte]",
											"value": "5046071",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[canceled][lt]",
											"value": "23775099",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[canceled][lte]",
											"value": "-64500875",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[fulfilled][gt]",
											"value": "-40444275",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[fulfilled][gte]",
											"value": "-47881680",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[fulfilled][lt]",
											"value": "57631527",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[fulfilled][lte]",
											"value": "-58378084",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[paid][gt]",
											"value": "89472585",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[paid][gte]",
											"value": "2896337",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[paid][lt]",
											"value": "-73262291",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[paid][lte]",
											"value": "6320637",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[returned][gt]",
											"value": "-95820207",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[returned][gte]",
											"value": "35015666",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[returned][lt]",
											"value": "-33496048",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "status_transitions[returned][lte]",
											"value": "84550820",
											"description": "Filter orders based on when they were paid, fulfilled, canceled, or returned."
										},
										{
											"key": "upstream_ids[0]",
											"value": "enim Ut culpa ut",
											"description": "Only return orders with the given upstream order IDs."
										},
										{
											"key": "upstream_ids[1]",
											"value": "cupidatat ullamco esse",
											"description": "Only return orders with the given upstream order IDs."
										}
									]
								},
								"description": "<p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>"
							},
							"response": [
								{
									"id": "8f643831-405a-4274-b00a-a174fcda65fb",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/orders?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>&status_transitions[canceled][gt]=<integer>&status_transitions[canceled][gte]=<integer>&status_transitions[canceled][lt]=<integer>&status_transitions[canceled][lte]=<integer>&status_transitions[fulfilled][gt]=<integer>&status_transitions[fulfilled][gte]=<integer>&status_transitions[fulfilled][lt]=<integer>&status_transitions[fulfilled][lte]=<integer>&status_transitions[paid][gt]=<integer>&status_transitions[paid][gte]=<integer>&status_transitions[paid][lt]=<integer>&status_transitions[paid][lte]=<integer>&status_transitions[returned][gt]=<integer>&status_transitions[returned][gte]=<integer>&status_transitions[returned][lt]=<integer>&status_transitions[returned][lte]=<integer>&upstream_ids[0]=<string>&upstream_ids[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "status_transitions[canceled][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][lte]",
													"value": "<integer>"
												},
												{
													"key": "upstream_ids[0]",
													"value": "<string>"
												},
												{
													"key": "upstream_ids[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"amount_returned\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"application_fee\": \"<integer>\",\n      \"charge\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_coupon_code\": \"<string>\",\n      \"returns\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"selected_shipping_method\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status_transitions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updated\": \"<unix-time>\",\n      \"upstream_id\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"items\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"amount_returned\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"application_fee\": \"<integer>\",\n      \"charge\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_coupon_code\": \"<string>\",\n      \"returns\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"selected_shipping_method\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shipping_methods\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status_transitions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"updated\": \"<unix-time>\",\n      \"upstream_id\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "ae38f2d4-e4b6-499d-bf93-8e6b3319a69a",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/orders?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>&status_transitions[canceled][gt]=<integer>&status_transitions[canceled][gte]=<integer>&status_transitions[canceled][lt]=<integer>&status_transitions[canceled][lte]=<integer>&status_transitions[fulfilled][gt]=<integer>&status_transitions[fulfilled][gte]=<integer>&status_transitions[fulfilled][lt]=<integer>&status_transitions[fulfilled][lte]=<integer>&status_transitions[paid][gt]=<integer>&status_transitions[paid][gte]=<integer>&status_transitions[paid][lt]=<integer>&status_transitions[paid][lte]=<integer>&status_transitions[returned][gt]=<integer>&status_transitions[returned][gte]=<integer>&status_transitions[returned][lt]=<integer>&status_transitions[returned][lte]=<integer>&upstream_ids[0]=<string>&upstream_ids[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "status_transitions[canceled][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[canceled][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[fulfilled][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[paid][lte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][gt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][gte]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][lt]",
													"value": "<integer>"
												},
												{
													"key": "status_transitions[returned][lte]",
													"value": "<integer>"
												},
												{
													"key": "upstream_ids[0]",
													"value": "<string>"
												},
												{
													"key": "upstream_ids[1]",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Order",
							"id": "0e90864c-f884-47d3-9bca-7758bea018b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "currency",
											"value": "nostrud in",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "coupon",
											"value": "aliquip",
											"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order."
										},
										{
											"key": "customer",
											"value": "aute irure quis proident",
											"description": "The ID of an existing customer to use for this order. If provided, the customer email and shipping address will be used to create the order. Subsequently, the customer will also be charged to pay the order. If `email` or `shipping` are also provided, they will override the values retrieved from the customer object."
										},
										{
											"key": "email",
											"value": "dolore in nostrud commodo",
											"description": "The email address of the customer placing the order."
										},
										{
											"key": "expand[0]",
											"value": "exercitation Excepteur",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in fugiat culpa pari",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "items[0][amount]",
											"value": "23287670",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[0][currency]",
											"value": "elit",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[0][description]",
											"value": "non aliquip ut",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[0][parent]",
											"value": "commodo id",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[0][quantity]",
											"value": "-68255561",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[0][type]",
											"value": "discount",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][amount]",
											"value": "-34088871",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][currency]",
											"value": "in magna",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][description]",
											"value": "mollit eu",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][parent]",
											"value": "ad labore et",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][quantity]",
											"value": "-6681562",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "items[1][type]",
											"value": "tax",
											"description": "List of items constituting the order. An order can have up to 25 items."
										},
										{
											"key": "shipping[address][line1]",
											"value": "in ullamco",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[address][city]",
											"value": "ea ipsum ",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[address][country]",
											"value": "magna est",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[address][line2]",
											"value": "laborum voluptate et nulla ut",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[address][postal_code]",
											"value": "do culpa laboris",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[address][state]",
											"value": "Lorem enim irure ullamco",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[name]",
											"value": "labore adipisicing Ut",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										},
										{
											"key": "shipping[phone]",
											"value": "non",
											"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"orders"
									]
								}
							},
							"response": [
								{
									"id": "bf6accc8-bbf7-4a5a-bf9f-ed484b658335",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.",
													"key": "coupon",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing customer to use for this order. If provided, the customer email and shipping address will be used to create the order. Subsequently, the customer will also be charged to pay the order. If `email` or `shipping` are also provided, they will override the values retrieved from the customer object.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "The email address of the customer placing the order.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][amount]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][currency]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][description]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][parent]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][type]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][amount]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][currency]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][description]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][parent]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][type]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[phone]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"items\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"parent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_returned\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<integer>\",\n  \"charge\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"email\": \"<string>\",\n  \"external_coupon_code\": \"<string>\",\n  \"returns\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"items\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refund\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"selected_shipping_method\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"shipping_methods\": [\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"currency\": \"<string>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"delivery_estimate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"status_transitions\": {\n    \"canceled\": \"<unix-time>\",\n    \"fulfiled\": \"<unix-time>\",\n    \"paid\": \"<unix-time>\",\n    \"returned\": \"<unix-time>\"\n  },\n  \"updated\": \"<unix-time>\",\n  \"upstream_id\": \"<string>\"\n}"
								},
								{
									"id": "c133bc44-d6d0-4a9c-8f53-f68f1d45eb21",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "A coupon code that represents a discount to be applied to this order. Must be one-time duration and in same currency as the order.",
													"key": "coupon",
													"value": "<string>"
												},
												{
													"description": "The ID of an existing customer to use for this order. If provided, the customer email and shipping address will be used to create the order. Subsequently, the customer will also be charged to pay the order. If `email` or `shipping` are also provided, they will override the values retrieved from the customer object.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "The email address of the customer placing the order.",
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][amount]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][currency]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][description]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][parent]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[0][type]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][amount]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][currency]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][description]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][parent]",
													"value": "<string>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of items constituting the order. An order can have up to 25 items.",
													"key": "items[1][type]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping address for the order. Required if any of the SKUs are for products that have `shippable` set to true.",
													"key": "shipping[phone]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"orders"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "02a73cb5-50d2-425c-a9fc-db06f37cae60"
				},
				{
					"name": "payment_intents",
					"item": [
						{
							"name": "{intent}",
							"item": [
								{
									"name": "Payment Intent Retrieve",
									"id": "476b5c40-8c7a-40ff-9482-567ebfd492c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents/:intent?client_secret=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents",
												":intent"
											],
											"query": [
												{
													"key": "client_secret",
													"value": "adipisicing incididunt esse",
													"description": "The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "intent",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p><p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p><p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>"
									},
									"response": [
										{
											"id": "c322acf1-e357-4db3-b5ab-a3e9de591aa1",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent?client_secret=<string>&expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent"
													],
													"query": [
														{
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "cebc944f-040d-44e5-9ede-cf504bede6e6",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent?client_secret=<string>&expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent"
													],
													"query": [
														{
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payment Intent Update",
									"id": "0641a565-91c4-4039-9837-152d1facc43d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "-549659",
													"description": "Amount intended to be collected by this PaymentIntent"
												},
												{
													"key": "application_fee_amount",
													"value": "54777257",
													"description": "The amount of the application fee (if any) for the resulting payment. [See the Connect documentation](/docs/connect/direct-charges#collecting-fees) for details."
												},
												{
													"key": "currency",
													"value": "culpa enim dolore eiusmod aute",
													"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
												},
												{
													"key": "customer",
													"value": "culpa",
													"description": "ID of the customer this PaymentIntent is for if one exists."
												},
												{
													"key": "description",
													"value": "voluptate adipisicing",
													"description": "An arbitrary string attached to the object. Often useful for displaying to users."
												},
												{
													"key": "expand[0]",
													"value": "deserunt",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "quis est",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "receipt_email",
													"value": "labore aute sit",
													"description": "Email address that the receipt for the resulting payment will be sent to."
												},
												{
													"key": "return_url",
													"value": "esse culpa Lorem",
													"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme."
												},
												{
													"key": "save_source_to_customer",
													"value": "false",
													"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached."
												},
												{
													"key": "source",
													"value": "in do proident nostrud",
													"description": "ID of the Source object to attach to this PaymentIntent."
												},
												{
													"key": "transfer_data[amount]",
													"value": "-21246058",
													"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`."
												},
												{
													"key": "transfer_group",
													"value": "laborum enim non dolor",
													"description": "A string that identifies the resulting payment as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents/:intent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents",
												":intent"
											],
											"variable": [
												{
													"key": "intent",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates a PaymentIntent object.</p>"
									},
									"response": [
										{
											"id": "3bb63244-6b8f-4740-8c9e-e44c6a016a12",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Amount intended to be collected by this PaymentIntent",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "The amount of the application fee (if any) for the resulting payment. [See the Connect documentation](/docs/connect/direct-charges#collecting-fees) for details.",
															"key": "application_fee_amount",
															"value": "<integer>"
														},
														{
															"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "ID of the customer this PaymentIntent is for if one exists.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Email address that the receipt for the resulting payment will be sent to.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
															"key": "return_url",
															"value": "<string>"
														},
														{
															"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
															"key": "save_source_to_customer",
															"value": "<boolean>"
														},
														{
															"description": "ID of the Source object to attach to this PaymentIntent.",
															"key": "source",
															"value": "<string>"
														},
														{
															"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`.",
															"key": "transfer_data[amount]",
															"value": "<integer>"
														},
														{
															"description": "A string that identifies the resulting payment as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "a2d13c2c-793c-4489-8ccb-7910df546368",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Amount intended to be collected by this PaymentIntent",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "The amount of the application fee (if any) for the resulting payment. [See the Connect documentation](/docs/connect/direct-charges#collecting-fees) for details.",
															"key": "application_fee_amount",
															"value": "<integer>"
														},
														{
															"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "ID of the customer this PaymentIntent is for if one exists.",
															"key": "customer",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Email address that the receipt for the resulting payment will be sent to.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
															"key": "return_url",
															"value": "<string>"
														},
														{
															"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
															"key": "save_source_to_customer",
															"value": "<boolean>"
														},
														{
															"description": "ID of the Source object to attach to this PaymentIntent.",
															"key": "source",
															"value": "<string>"
														},
														{
															"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`.",
															"key": "transfer_data[amount]",
															"value": "<integer>"
														},
														{
															"description": "A string that identifies the resulting payment as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
															"key": "transfer_group",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payment Intent Cancel",
									"id": "4b643885-52bd-4ba9-8a70-9b364bd37561",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents/:intent/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents",
												":intent",
												"cancel"
											],
											"variable": [
												{
													"key": "intent",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>A PaymentIntent object can be canceled when it is in one of these statues: <code>requires_source</code>, <code>requires_capture</code>, <code>requires_confirmation</code>, or <code>requires_source_action</code>. </p><p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status='requires_capture'</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>"
									},
									"response": [
										{
											"id": "e640bbd8-6cc4-4424-a7e7-58457bd09e08",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"cancel"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "9b466ac1-5d05-40dd-92c8-8d21202630ed",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"cancel"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payment Intent Capture",
									"id": "d7e59464-0af3-4948-8703-2479af89ab5b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount_to_capture",
													"value": "-35360828",
													"description": "The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount_capturable` if not provided."
												},
												{
													"key": "expand[0]",
													"value": "commodo cillum cupidatat consectetur in",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "quis",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents/:intent/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents",
												":intent",
												"capture"
											],
											"variable": [
												{
													"key": "intent",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Capture the funds of an existing uncaptured PaymentIntent where <code>required_action=\"requires_capture\"</code>.</p><p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>"
									},
									"response": [
										{
											"id": "88705f44-cdad-496f-b305-dcdc09b39947",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount_capturable` if not provided.",
															"key": "amount_to_capture",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"capture"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "0596d25e-667d-4591-a454-f22cb78646d9",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount_capturable` if not provided.",
															"key": "amount_to_capture",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/capture",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"capture"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payment Intent Confirm",
									"id": "1cd84145-07e0-4ad6-8b45-1fcb5a5a0e89",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_secret",
													"value": "minim in ut",
													"description": "The client secret of the PaymentIntent."
												},
												{
													"key": "expand[0]",
													"value": "dolor labore pariatur sed",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "dolore occaecat et",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "receipt_email",
													"value": "eiusmod nulla",
													"description": "Email address that the receipt for the resulting payment will be sent to."
												},
												{
													"key": "return_url",
													"value": "deserunt",
													"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme."
												},
												{
													"key": "save_source_to_customer",
													"value": "true",
													"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached."
												},
												{
													"key": "source",
													"value": "incididunt dolore exercitation ut enim",
													"description": "ID of the Source object to attach to this PaymentIntent."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents/:intent/confirm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents",
												":intent",
												"confirm"
											],
											"variable": [
												{
													"key": "intent",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Confirm that your customer intends to pay with current or provided<code>source</code>. Upon confirmation, the PaymentIntent will attempt to initiatea payment.</p><p>If the selected <code>source</code> requires additional authentication steps, thePaymentIntent will transition to the <code>requires_source_action</code> status andsuggest additional actions via <code>next_source_action</code>. If payment fails,the PaymentIntent will transition to the <code>requires_source</code> status. Ifpayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>status (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p><p>When using a publishable key, the<a href=\"#payment_intent_object-client_secret\">client_secret</a> must be providedto confirm the PaymentIntent.</p>"
									},
									"response": [
										{
											"id": "a49c003e-ebcf-4f7c-b0be-2f5cc2387abf",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The client secret of the PaymentIntent.",
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Email address that the receipt for the resulting payment will be sent to.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
															"key": "return_url",
															"value": "<string>"
														},
														{
															"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
															"key": "save_source_to_customer",
															"value": "<boolean>"
														},
														{
															"description": "ID of the Source object to attach to this PaymentIntent.",
															"key": "source",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"confirm"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "62bf4e45-dde2-4b47-9809-efb3e8a290f6",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The client secret of the PaymentIntent.",
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Email address that the receipt for the resulting payment will be sent to.",
															"key": "receipt_email",
															"value": "<string>"
														},
														{
															"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
															"key": "return_url",
															"value": "<string>"
														},
														{
															"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
															"key": "save_source_to_customer",
															"value": "<boolean>"
														},
														{
															"description": "ID of the Source object to attach to this PaymentIntent.",
															"key": "source",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payment_intents/:intent/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payment_intents",
														":intent",
														"confirm"
													],
													"variable": [
														{
															"key": "intent",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "18b5e405-5b28-4636-9c9d-f830b826f14e"
						},
						{
							"name": "Payment Flows Payment Intent All",
							"id": "72792d46-6d4e-415a-99f0-427645f3373e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/payment_intents?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payment_intents"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of PaymentIntents.</p>"
							},
							"response": [
								{
									"id": "ae37cb62-79f9-4dc0-827f-2d0c7bf4ef9b",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"capture_method\": \"<string>\",\n      \"confirmation_method\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"amount_capturable\": \"<integer>\",\n      \"amount_received\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"application_fee_amount\": \"<integer>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"charges\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"client_secret\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"next_source_action\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"on_behalf_of\": \"<string>\",\n      \"receipt_email\": \"<string>\",\n      \"return_url\": \"<string>\",\n      \"review\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"transfer_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transfer_group\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"capture_method\": \"<string>\",\n      \"confirmation_method\": \"<string>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"status\": \"<string>\",\n      \"amount_capturable\": \"<integer>\",\n      \"amount_received\": \"<integer>\",\n      \"application\": \"<string>\",\n      \"application_fee_amount\": \"<integer>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"charges\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"client_secret\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"description\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"next_source_action\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"on_behalf_of\": \"<string>\",\n      \"receipt_email\": \"<string>\",\n      \"return_url\": \"<string>\",\n      \"review\": \"<string>\",\n      \"shipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"source\": \"<string>\",\n      \"statement_descriptor\": \"<string>\",\n      \"transfer_data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"transfer_group\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "d2fcc498-c585-4f4c-b274-31e907e5a8cc",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Payment Intent Create",
							"id": "bef0d99f-357d-4ec0-a8bd-6d348b25c0ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "allowed_source_types[0]",
											"value": "card",
											"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`."
										},
										{
											"key": "allowed_source_types[1]",
											"value": "card",
											"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`."
										},
										{
											"key": "amount",
											"value": "-57663367",
											"description": "(Required) Amount intended to be collected by this PaymentIntent"
										},
										{
											"key": "currency",
											"value": "ut elit",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "application_fee_amount",
											"value": "-80439660",
											"description": "The amount of the application fee (if any) that will be applied to the payment and transferred to theapplication owner's Stripe account. To use an application fee, therequest must be made on behalf of another account, using the`Stripe-Account` header or an OAuth key. For more information, see[Collecting applicationfees](/docs/connect/direct-charges#collecting-fees)."
										},
										{
											"key": "attempt_confirmation",
											"value": "false",
											"description": "Attempt to confirm this PaymentIntent on source attachment."
										},
										{
											"key": "capture_method",
											"value": "automatic",
											"description": "Capture method of this PaymentIntent, one of `automatic` or `manual`."
										},
										{
											"key": "customer",
											"value": "dolor Excepteur cillum",
											"description": "ID of the customer this PaymentIntent is for if one exists."
										},
										{
											"key": "description",
											"value": "dolor cupidatat",
											"description": "An arbitrary string attached to the object. Often useful for displaying to users."
										},
										{
											"key": "expand[0]",
											"value": "culpa in eiusmod",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "laborum qui Ut voluptate",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "on_behalf_of",
											"value": "Excepteur",
											"description": "The account (if any) the payment will be made on behalf of. To triggeran automatic transfer when the payment is complete, use `transfer_data`in conjunction with this parameter.\""
										},
										{
											"key": "receipt_email",
											"value": "esse nisi amet culpa",
											"description": "Email address that the receipt for the resulting payment will be sent to."
										},
										{
											"key": "return_url",
											"value": "adipisicing",
											"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme."
										},
										{
											"key": "save_source_to_customer",
											"value": "false",
											"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached."
										},
										{
											"key": "shipping[address][line1]",
											"value": "dolor deserunt culpa proident",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[address][city]",
											"value": "",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[address][country]",
											"value": "culpa anim non sit",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[address][line2]",
											"value": "quis sed culpa",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[address][postal_code]",
											"value": "nisi aute commodo laboris",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[address][state]",
											"value": "esse culpa incididunt sed",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[name]",
											"value": "sed esse dolore ad pariatur",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[carrier]",
											"value": "tempor ipsum",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[phone]",
											"value": "culpa ipsum",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "shipping[tracking_number]",
											"value": "officia culpa tempor nisi",
											"description": "Shipping information for this PaymentIntent."
										},
										{
											"key": "source",
											"value": "Ut minim",
											"description": "ID of the Source object to attach to this PaymentIntent."
										},
										{
											"key": "statement_descriptor",
											"value": "Lorem",
											"description": "Extra information about a PaymentIntent. This will appear on your customer's statement when this PaymentIntent succeeds in creating a charge."
										},
										{
											"key": "transfer_data[amount]",
											"value": "40991079",
											"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`."
										},
										{
											"key": "transfer_group",
											"value": "pariatur",
											"description": "A string that identifies the resulting payment as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/payment_intents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payment_intents"
									]
								},
								"description": "<p>Creates a PaymentIntent object.</p>"
							},
							"response": [
								{
									"id": "e417960c-4966-4df1-acc9-217f2e999f05",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`.",
													"key": "allowed_source_types[0]",
													"value": "<string>"
												},
												{
													"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`.",
													"key": "allowed_source_types[1]",
													"value": "<string>"
												},
												{
													"description": "(Required) Amount intended to be collected by this PaymentIntent",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The amount of the application fee (if any) that will be applied to the payment and transferred to theapplication owner's Stripe account. To use an application fee, therequest must be made on behalf of another account, using the`Stripe-Account` header or an OAuth key. For more information, see[Collecting applicationfees](/docs/connect/direct-charges#collecting-fees).",
													"key": "application_fee_amount",
													"value": "<integer>"
												},
												{
													"description": "Attempt to confirm this PaymentIntent on source attachment.",
													"key": "attempt_confirmation",
													"value": "<boolean>"
												},
												{
													"description": "Capture method of this PaymentIntent, one of `automatic` or `manual`.",
													"key": "capture_method",
													"value": "<string>"
												},
												{
													"description": "ID of the customer this PaymentIntent is for if one exists.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The account (if any) the payment will be made on behalf of. To triggeran automatic transfer when the payment is complete, use `transfer_data`in conjunction with this parameter.\"",
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"description": "Email address that the receipt for the resulting payment will be sent to.",
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
													"key": "return_url",
													"value": "<string>"
												},
												{
													"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
													"key": "save_source_to_customer",
													"value": "<boolean>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"description": "ID of the Source object to attach to this PaymentIntent.",
													"key": "source",
													"value": "<string>"
												},
												{
													"description": "Extra information about a PaymentIntent. This will appear on your customer's statement when this PaymentIntent succeeds in creating a charge.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`.",
													"key": "transfer_data[amount]",
													"value": "<integer>"
												},
												{
													"description": "A string that identifies the resulting payment as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"allowed_source_types\": [],\n  \"amount\": \"<integer>\",\n  \"capture_method\": \"<string>\",\n  \"confirmation_method\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"amount_capturable\": \"<integer>\",\n  \"amount_received\": \"<integer>\",\n  \"application\": \"<string>\",\n  \"application_fee_amount\": \"<integer>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"charges\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount_refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"captured\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paid\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunded\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"refunds\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"application_fee\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"description\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"destination\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dispute\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_code\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fraud_details\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"invoice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"on_behalf_of\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"order\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"outcome\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_email\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"review\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"shipping\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer_group\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"client_secret\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"next_source_action\": {\n    \"type\": \"<string>\",\n    \"value\": \"<object>\"\n  },\n  \"on_behalf_of\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"return_url\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer_data\": {\n    \"amount\": \"<integer>\"\n  },\n  \"transfer_group\": \"<string>\"\n}"
								},
								{
									"id": "322dc83f-e547-442e-b1bd-bdc24ca58ebe",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`.",
													"key": "allowed_source_types[0]",
													"value": "<string>"
												},
												{
													"description": "(Required) The list of source types that this PaymentIntent was allowed to use. Values can be any combination of `card`.",
													"key": "allowed_source_types[1]",
													"value": "<string>"
												},
												{
													"description": "(Required) Amount intended to be collected by this PaymentIntent",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The amount of the application fee (if any) that will be applied to the payment and transferred to theapplication owner's Stripe account. To use an application fee, therequest must be made on behalf of another account, using the`Stripe-Account` header or an OAuth key. For more information, see[Collecting applicationfees](/docs/connect/direct-charges#collecting-fees).",
													"key": "application_fee_amount",
													"value": "<integer>"
												},
												{
													"description": "Attempt to confirm this PaymentIntent on source attachment.",
													"key": "attempt_confirmation",
													"value": "<boolean>"
												},
												{
													"description": "Capture method of this PaymentIntent, one of `automatic` or `manual`.",
													"key": "capture_method",
													"value": "<string>"
												},
												{
													"description": "ID of the customer this PaymentIntent is for if one exists.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The account (if any) the payment will be made on behalf of. To triggeran automatic transfer when the payment is complete, use `transfer_data`in conjunction with this parameter.\"",
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"description": "Email address that the receipt for the resulting payment will be sent to.",
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"description": "The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.",
													"key": "return_url",
													"value": "<string>"
												},
												{
													"description": "`true` to save this PaymentIntent's Source to the associated Customer, if the Source is not already attached.",
													"key": "save_source_to_customer",
													"value": "<boolean>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"description": "Shipping information for this PaymentIntent.",
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"description": "ID of the Source object to attach to this PaymentIntent.",
													"key": "source",
													"value": "<string>"
												},
												{
													"description": "Extra information about a PaymentIntent. This will appear on your customer's statement when this PaymentIntent succeeds in creating a charge.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "The parameters with which to automatically create a Transfer when the payment is finalized. The destination of the Transfer is the account set as `on_behalf_of`.",
													"key": "transfer_data[amount]",
													"value": "<integer>"
												},
												{
													"description": "A string that identifies the resulting payment as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payment_intents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payment_intents"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "2de75984-37ff-49f7-bccc-e95a56bf0f74"
				},
				{
					"name": "payments",
					"item": [
						{
							"name": "Create Payment",
							"id": "75d1a7ed-1d69-4956-9431-383725e2002e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "87679657",
											"description": "(Required) "
										},
										{
											"key": "currency",
											"value": "ad ea occaeca",
											"description": "(Required) "
										},
										{
											"key": "alternate_statement_descriptors[kana]",
											"value": "exercitation"
										},
										{
											"key": "alternate_statement_descriptors[kanji]",
											"value": "in "
										},
										{
											"key": "application",
											"value": "Duis qui dolore"
										},
										{
											"key": "application_fee",
											"value": "-12880399"
										},
										{
											"key": "capture",
											"value": "false"
										},
										{
											"key": "card_program",
											"value": "consequat sunt"
										},
										{
											"key": "cross_border_classification",
											"value": "export"
										},
										{
											"key": "customer",
											"value": "sint nulla aute"
										},
										{
											"key": "description",
											"value": "sint"
										},
										{
											"key": "destination[account]",
											"value": "est esse enim"
										},
										{
											"key": "destination[amount]",
											"value": "79912123"
										},
										{
											"key": "device_id",
											"value": "est consequat sed aliqua"
										},
										{
											"key": "exchange_rate",
											"value": "-34088070.77300393"
										},
										{
											"key": "expand[0]",
											"value": "cupidatat proident qui nisi"
										},
										{
											"key": "expand[1]",
											"value": "esse occaecat"
										},
										{
											"key": "external_id",
											"value": "sed adipisicing"
										},
										{
											"key": "idempotency_key",
											"value": "Lorem non in"
										},
										{
											"key": "include[0]",
											"value": "laborum"
										},
										{
											"key": "include[1]",
											"value": "ea deserunt"
										},
										{
											"key": "invoice",
											"value": "veniam tempor"
										},
										{
											"key": "invoice_source",
											"value": "in sit ex anim"
										},
										{
											"key": "ip",
											"value": "non Ut mollit"
										},
										{
											"key": "level3[line_items][0][product_code]",
											"value": "occa"
										},
										{
											"key": "level3[line_items][0][product_description]",
											"value": "culpa id"
										},
										{
											"key": "level3[line_items][0][discount_amount]",
											"value": "-45358694"
										},
										{
											"key": "level3[line_items][0][quantity]",
											"value": "-45125677"
										},
										{
											"key": "level3[line_items][0][tax_amount]",
											"value": "12581591"
										},
										{
											"key": "level3[line_items][0][unit_cost]",
											"value": "33286735"
										},
										{
											"key": "level3[line_items][1][product_code]",
											"value": "dol"
										},
										{
											"key": "level3[line_items][1][product_description]",
											"value": "officia sed aliquip"
										},
										{
											"key": "level3[line_items][1][discount_amount]",
											"value": "64254297"
										},
										{
											"key": "level3[line_items][1][quantity]",
											"value": "-79006354"
										},
										{
											"key": "level3[line_items][1][tax_amount]",
											"value": "72643178"
										},
										{
											"key": "level3[line_items][1][unit_cost]",
											"value": "-59671853"
										},
										{
											"key": "level3[merchant_reference]",
											"value": ""
										},
										{
											"key": "level3[customer_reference]",
											"value": "sint"
										},
										{
											"key": "level3[shipping_address_zip]",
											"value": "culpa nostrud elit"
										},
										{
											"key": "level3[shipping_amount]",
											"value": "-60932087"
										},
										{
											"key": "level3[shipping_from_zip]",
											"value": "ut dolor"
										},
										{
											"key": "on_behalf_of",
											"value": "ex incididunt labore nulla"
										},
										{
											"key": "order",
											"value": ""
										},
										{
											"key": "payment_method",
											"value": "nulla sint labori"
										},
										{
											"key": "payment_user_agent",
											"value": "velit ipsum amet Lorem nostrud"
										},
										{
											"key": "receipt_email",
											"value": "tempor ad Excepteur aliquip"
										},
										{
											"key": "recurring",
											"value": "false"
										},
										{
											"key": "referrer",
											"value": "dolor magna est"
										},
										{
											"key": "shipping[address][line1]",
											"value": "culpa aliqua quis amet dolor"
										},
										{
											"key": "shipping[address][city]",
											"value": "minim eu esse"
										},
										{
											"key": "shipping[address][country]",
											"value": "magna minim cupidatat incididunt con"
										},
										{
											"key": "shipping[address][line2]",
											"value": "consequat non eu ea"
										},
										{
											"key": "shipping[address][postal_code]",
											"value": "sunt consectetur"
										},
										{
											"key": "shipping[address][state]",
											"value": "in anim adipisicing"
										},
										{
											"key": "shipping[name]",
											"value": "magna in adipisicing cupidatat D"
										},
										{
											"key": "shipping[carrier]",
											"value": "incididunt aliquip"
										},
										{
											"key": "shipping[phone]",
											"value": "incididunt adipisicing"
										},
										{
											"key": "shipping[tracking_number]",
											"value": "in ut ad"
										},
										{
											"key": "source",
											"value": "tempor Excepteur proident"
										},
										{
											"key": "statement_address[city]",
											"value": "aliquip officia aliqua"
										},
										{
											"key": "statement_address[line1]",
											"value": "id ex"
										},
										{
											"key": "statement_address[postal_code]",
											"value": "tempor laboris id consectetur quis"
										},
										{
											"key": "statement_address[state]",
											"value": "pariatur sunt magna"
										},
										{
											"key": "statement_address[line2]",
											"value": "minim deserunt officia"
										},
										{
											"key": "statement_descriptor",
											"value": "dolor non id"
										},
										{
											"key": "transfer_group",
											"value": "eiusmod esse"
										},
										{
											"key": "trust[safety]",
											"value": "fraudulent"
										},
										{
											"key": "uncaptured",
											"value": "true"
										},
										{
											"key": "user_agent",
											"value": "laboris dolore sit c"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payments"
									]
								}
							},
							"response": [
								{
									"id": "d0a9dec0-09ce-4fff-891f-f513e7e66ade",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) ",
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kana]",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kanji]",
													"value": "<string>"
												},
												{
													"key": "application",
													"value": "<string>"
												},
												{
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"key": "capture",
													"value": "<boolean>"
												},
												{
													"key": "card_program",
													"value": "<string>"
												},
												{
													"key": "cross_border_classification",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "destination[account]",
													"value": "<string>"
												},
												{
													"key": "destination[amount]",
													"value": "<integer>"
												},
												{
													"key": "device_id",
													"value": "<string>"
												},
												{
													"key": "exchange_rate",
													"value": "<number>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "idempotency_key",
													"value": "<string>"
												},
												{
													"key": "include[0]",
													"value": "<string>"
												},
												{
													"key": "include[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "invoice_source",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[merchant_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[customer_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_address_zip]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[shipping_from_zip]",
													"value": "<string>"
												},
												{
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "payment_method",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"key": "recurring",
													"value": "<boolean>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"key": "source",
													"value": "<string>"
												},
												{
													"key": "statement_address[city]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line1]",
													"value": "<string>"
												},
												{
													"key": "statement_address[postal_code]",
													"value": "<string>"
												},
												{
													"key": "statement_address[state]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line2]",
													"value": "<string>"
												},
												{
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												},
												{
													"key": "trust[safety]",
													"value": "<string>"
												},
												{
													"key": "uncaptured",
													"value": "<boolean>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payment\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payment\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"payment_method\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
								},
								{
									"id": "7496d168-3738-4368-94e7-13886ed01a63",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) ",
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kana]",
													"value": "<string>"
												},
												{
													"key": "alternate_statement_descriptors[kanji]",
													"value": "<string>"
												},
												{
													"key": "application",
													"value": "<string>"
												},
												{
													"key": "application_fee",
													"value": "<integer>"
												},
												{
													"key": "capture",
													"value": "<boolean>"
												},
												{
													"key": "card_program",
													"value": "<string>"
												},
												{
													"key": "cross_border_classification",
													"value": "<string>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "destination[account]",
													"value": "<string>"
												},
												{
													"key": "destination[amount]",
													"value": "<integer>"
												},
												{
													"key": "device_id",
													"value": "<string>"
												},
												{
													"key": "exchange_rate",
													"value": "<number>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "idempotency_key",
													"value": "<string>"
												},
												{
													"key": "include[0]",
													"value": "<string>"
												},
												{
													"key": "include[1]",
													"value": "<string>"
												},
												{
													"key": "invoice",
													"value": "<string>"
												},
												{
													"key": "invoice_source",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][0][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][0][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][product_code]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][product_description]",
													"value": "<string>"
												},
												{
													"key": "level3[line_items][1][discount_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][quantity]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][tax_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[line_items][1][unit_cost]",
													"value": "<integer>"
												},
												{
													"key": "level3[merchant_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[customer_reference]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_address_zip]",
													"value": "<string>"
												},
												{
													"key": "level3[shipping_amount]",
													"value": "<integer>"
												},
												{
													"key": "level3[shipping_from_zip]",
													"value": "<string>"
												},
												{
													"key": "on_behalf_of",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "<string>"
												},
												{
													"key": "payment_method",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"key": "receipt_email",
													"value": "<string>"
												},
												{
													"key": "recurring",
													"value": "<boolean>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line1]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][city]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][country]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][line2]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][postal_code]",
													"value": "<string>"
												},
												{
													"key": "shipping[address][state]",
													"value": "<string>"
												},
												{
													"key": "shipping[name]",
													"value": "<string>"
												},
												{
													"key": "shipping[carrier]",
													"value": "<string>"
												},
												{
													"key": "shipping[phone]",
													"value": "<string>"
												},
												{
													"key": "shipping[tracking_number]",
													"value": "<string>"
												},
												{
													"key": "source",
													"value": "<string>"
												},
												{
													"key": "statement_address[city]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line1]",
													"value": "<string>"
												},
												{
													"key": "statement_address[postal_code]",
													"value": "<string>"
												},
												{
													"key": "statement_address[state]",
													"value": "<string>"
												},
												{
													"key": "statement_address[line2]",
													"value": "<string>"
												},
												{
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												},
												{
													"key": "trust[safety]",
													"value": "<string>"
												},
												{
													"key": "uncaptured",
													"value": "<boolean>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Payment",
							"id": "c5d04601-5fb8-45bf-8e47-ae4fff04e2bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/payments/:payment?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payments",
										":payment"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "payment",
											"value": "esse deserunt",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "ad25826a-bd58-4a09-a2f9-ea38605ee5f5",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payments/:payment?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payments",
												":payment"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "payment",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_refunded\": \"<integer>\",\n  \"captured\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"paid\": \"<boolean>\",\n  \"refunded\": \"<boolean>\",\n  \"refunds\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payment\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"charge\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"failure_reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payment\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reason\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receipt_number\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"source\": {\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"application_icon\": \"<string>\",\n    \"application_logo\": \"<string>\",\n    \"application_name\": \"<string>\",\n    \"application_url\": \"<string>\",\n    \"business_logo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"business_name\": \"<string>\",\n    \"business_url\": \"<string>\",\n    \"charges_enabled\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"debit_negative_balances\": \"<boolean>\",\n    \"decline_charge_on\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"default_currency\": \"<string>\",\n    \"details_submitted\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_accounts\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"has_more\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"object\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keys\": \"<object>\",\n    \"legal_entity\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": \"<object>\",\n    \"payout_schedule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payout_statement_descriptor\": \"<string>\",\n    \"payouts_enabled\": \"<boolean>\",\n    \"product_description\": \"<string>\",\n    \"statement_descriptor\": \"<string>\",\n    \"support_email\": \"<string>\",\n    \"support_phone\": \"<string>\",\n    \"timezone\": \"<string>\",\n    \"tos_acceptance\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"<string>\",\n    \"verification\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"status\": \"<string>\",\n  \"application\": \"<string>\",\n  \"application_fee\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"customer\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"dispute\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"fraud_details\": \"<object>\",\n  \"invoice\": \"<string>\",\n  \"on_behalf_of\": \"<string>\",\n  \"order\": \"<string>\",\n  \"outcome\": {\n    \"type\": \"<string>\",\n    \"network_status\": \"<string>\",\n    \"reason\": \"<string>\",\n    \"risk_level\": \"<string>\",\n    \"risk_score\": \"<integer>\",\n    \"rule\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"seller_message\": \"<string>\"\n  },\n  \"payment_method\": \"<string>\",\n  \"receipt_email\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"review\": \"<string>\",\n  \"shipping\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"<string>\",\n    \"carrier\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"tracking_number\": \"<string>\"\n  },\n  \"source_transfer\": \"<string>\",\n  \"statement_descriptor\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
								},
								{
									"id": "260990c0-0f27-4a0a-ad51-44ad9dc5d12d",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payments/:payment?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payments",
												":payment"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "payment",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "06386d8a-1ca6-40ce-8fa4-3f1b4e9c3a9f"
				},
				{
					"name": "payouts",
					"item": [
						{
							"name": "{payout}",
							"item": [
								{
									"name": "Payout Retrieve",
									"id": "5e74731d-860f-48eb-9df3-fbf8f8d2cf19",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payouts/:payout?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts",
												":payout"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "payout",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the payout to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.</p>"
									},
									"response": [
										{
											"id": "7117f8ac-26a1-481a-aa92-0c11fd27efb4",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"arrival_date\": \"<unix-time>\",\n  \"automatic\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"method\": \"<string>\",\n  \"object\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "f89bf850-4ede-4cc4-ae0c-8a62597d455d",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payout Update",
									"id": "a746b35b-57a0-498c-bf03-3ead2a70706c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "nisi magna consectetur esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Lorem minim",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payouts/:payout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts",
												":payout"
											],
											"variable": [
												{
													"key": "payout",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the payout to be updated."
												}
											]
										},
										"description": "<p>Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.</p>"
									},
									"response": [
										{
											"id": "550c48f1-2cca-4903-9914-be4d58aad7e3",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout"
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be updated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"arrival_date\": \"<unix-time>\",\n  \"automatic\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"method\": \"<string>\",\n  \"object\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "2aa0582d-b14e-48aa-bef8-497c809ec610",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout"
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be updated."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Payout Cancel",
									"id": "e382200e-f8ea-4b6e-8818-977b4a8da231",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payouts/:payout/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts",
												":payout",
												"cancel"
											],
											"variable": [
												{
													"key": "payout",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the payout to be canceled."
												}
											]
										},
										"description": "<p>A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.</p>"
									},
									"response": [
										{
											"id": "2f1a171a-c128-4e1b-856f-c991ba59a7c1",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout",
														"cancel"
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be canceled."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"arrival_date\": \"<unix-time>\",\n  \"automatic\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"method\": \"<string>\",\n  \"object\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "aa7de890-a0dc-4442-9291-ad80c1b99b95",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/payouts/:payout/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"payouts",
														":payout",
														"cancel"
													],
													"variable": [
														{
															"key": "payout",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the payout to be canceled."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "531d2c68-0c5d-4a12-9622-8b3cfbaef546"
						},
						{
							"name": "Payout All",
							"id": "5ff154d4-2919-4875-b938-578403308e55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/payouts?arrival_date[gt]=-13431299&arrival_date[gte]=48353647&arrival_date[lt]=-92044334&arrival_date[lte]=-79364890&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&destination=adipisicing incididunt esse&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&status=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payouts"
									],
									"query": [
										{
											"key": "arrival_date[gt]",
											"value": "-13431299"
										},
										{
											"key": "arrival_date[gte]",
											"value": "48353647"
										},
										{
											"key": "arrival_date[lt]",
											"value": "-92044334"
										},
										{
											"key": "arrival_date[lte]",
											"value": "-79364890"
										},
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "destination",
											"value": "adipisicing incididunt esse",
											"description": "The ID of an external account - only return payouts sent to this external account."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "status",
											"value": "esse deserunt",
											"description": "Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`."
										}
									]
								},
								"description": "<p>Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.</p>"
							},
							"response": [
								{
									"id": "5c4552f5-d0d8-46c6-80e5-4e6beb5d210f",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payouts?arrival_date[gt]=<integer>&arrival_date[gte]=<integer>&arrival_date[lt]=<integer>&arrival_date[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&destination=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts"
											],
											"query": [
												{
													"key": "arrival_date[gt]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[gte]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[lt]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[lte]",
													"value": "<integer>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "destination",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"arrival_date\": \"<unix-time>\",\n      \"automatic\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"method\": \"<string>\",\n      \"object\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"arrival_date\": \"<unix-time>\",\n      \"automatic\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"method\": \"<string>\",\n      \"object\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "01edda2f-f412-4fc6-a092-7c7f8ea40b9a",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/payouts?arrival_date[gt]=<integer>&arrival_date[gte]=<integer>&arrival_date[lt]=<integer>&arrival_date[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&destination=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts"
											],
											"query": [
												{
													"key": "arrival_date[gt]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[gte]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[lt]",
													"value": "<integer>"
												},
												{
													"key": "arrival_date[lte]",
													"value": "<integer>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "destination",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Payout Create",
							"id": "6d5f7263-f8d3-4688-b6bf-199e3dd46525",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "15090479",
											"description": "(Required) A positive integer in cents representing how much to payout."
										},
										{
											"key": "currency",
											"value": "dolore amet",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "description",
											"value": "aliqua incididunt exercitation ea",
											"description": "An arbitrary string attached to the object. Often useful for displaying to users."
										},
										{
											"key": "destination",
											"value": "dolor",
											"description": "The ID of a bank account or a card to send the payout to. If no destination is supplied, the default external account for the specified currency will be used."
										},
										{
											"key": "expand[0]",
											"value": "aute Ut dolore irure",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in dolore",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "method",
											"value": "standard",
											"description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces for more information](https://stripe.com/blog/instant-payouts-for-marketplaces).)"
										},
										{
											"key": "source_type",
											"value": "bitcoin_receiver",
											"description": "The source balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the balances API. Valid options are: **alipay_account**, **bank_account**, and **card**."
										},
										{
											"key": "statement_descriptor",
											"value": "labor",
											"description": "A string to be displayed on the recipient's bank or card statement. This may be at most 22 characters. Attempting to use a `statement_descriptor` longer than 22 characters will return an error. Note: Most banks will truncate this information and/or display it inconsistently. Some may not display it at all."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/payouts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"payouts"
									]
								},
								"description": "<p>To send funds to your own bank account, you create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the payout amount, or you’ll receive an “Insufficient Funds” error.</p><p>If your API key is in test mode, money won’t actually be sent, though everything else will occur as if in live mode.</p><p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you’ll need to specify the source type balance that the payout should draw from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>"
							},
							"response": [
								{
									"id": "04bc08d7-4dfe-46d9-bf70-0e816caeb64a",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in cents representing how much to payout.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "The ID of a bank account or a card to send the payout to. If no destination is supplied, the default external account for the specified currency will be used.",
													"key": "destination",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces for more information](https://stripe.com/blog/instant-payouts-for-marketplaces).)",
													"key": "method",
													"value": "<string>"
												},
												{
													"description": "The source balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the balances API. Valid options are: **alipay_account**, **bank_account**, and **card**.",
													"key": "source_type",
													"value": "<string>"
												},
												{
													"description": "A string to be displayed on the recipient's bank or card statement. This may be at most 22 characters. Attempting to use a `statement_descriptor` longer than 22 characters will return an error. Note: Most banks will truncate this information and/or display it inconsistently. Some may not display it at all.",
													"key": "statement_descriptor",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payouts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"arrival_date\": \"<unix-time>\",\n  \"automatic\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"method\": \"<string>\",\n  \"object\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
								},
								{
									"id": "16fddc08-ff2e-466f-8579-b72debbf9b8c",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in cents representing how much to payout.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "The ID of a bank account or a card to send the payout to. If no destination is supplied, the default external account for the specified currency will be used.",
													"key": "destination",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces for more information](https://stripe.com/blog/instant-payouts-for-marketplaces).)",
													"key": "method",
													"value": "<string>"
												},
												{
													"description": "The source balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the balances API. Valid options are: **alipay_account**, **bank_account**, and **card**.",
													"key": "source_type",
													"value": "<string>"
												},
												{
													"description": "A string to be displayed on the recipient's bank or card statement. This may be at most 22 characters. Attempting to use a `statement_descriptor` longer than 22 characters will return an error. Note: Most banks will truncate this information and/or display it inconsistently. Some may not display it at all.",
													"key": "statement_descriptor",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/payouts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"payouts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "49332284-ddd8-4236-98fc-fb131984a680"
				},
				{
					"name": "plans",
					"item": [
						{
							"name": "{plan}",
							"item": [
								{
									"name": "Delete Plan",
									"id": "47afb861-2475-40ea-b92a-8726a7410e6c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/plans/:plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans",
												":plan"
											],
											"variable": [
												{
													"key": "plan",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the plan to be deleted."
												}
											]
										},
										"description": "<p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>"
									},
									"response": [
										{
											"id": "d27483eb-e977-4300-a5b6-2a428e38d32f",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the plan to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "2eb19786-994e-446d-879a-e177d3031c11",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the plan to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Plan",
									"id": "b33a4c8f-1f19-4842-8397-cc6856307dc3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/plans/:plan?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans",
												":plan"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "plan",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired plan."
												}
											]
										},
										"description": "<p>Retrieves the plan with the given ID.</p>"
									},
									"response": [
										{
											"id": "7626d8a7-8304-487b-a3ac-b2b7186e4235",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired plan."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"interval\": \"<string>\",\n  \"interval_count\": \"<integer>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"usage_type\": \"<string>\",\n  \"aggregate_usage\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"billing_scheme\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"product\": \"<string>\",\n  \"tiers\": [\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    }\n  ],\n  \"tiers_mode\": \"<string>\",\n  \"transform_usage\": {\n    \"divide_by\": \"<integer>\",\n    \"round\": \"<string>\"\n  },\n  \"trial_period_days\": \"<integer>\"\n}"
										},
										{
											"id": "26014309-3d47-4675-97c8-9b75f32e3c8b",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired plan."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Plan",
									"id": "e1707b4b-33c7-432f-9080-05bf4e5f293b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "active",
													"value": "true",
													"description": "Whether the plan is currently available for new subscriptions."
												},
												{
													"key": "expand[0]",
													"value": "ut adipisicing",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Excepteur et proident",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "name",
													"value": "in sunt irure",
													"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts. "
												},
												{
													"key": "nickname",
													"value": "nulla Excepteur adipisicing",
													"description": "A brief description of the plan, hidden from customers."
												},
												{
													"key": "product",
													"value": "in est laboris irure",
													"description": "The product the plan belongs to. Note that after updating, statement descriptors and line items of the plan in active subscriptions will be affected."
												},
												{
													"key": "statement_descriptor",
													"value": "quis des",
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter."
												},
												{
													"key": "trial_period_days",
													"value": "-91272548",
													"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan)."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/plans/:plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans",
												":plan"
											],
											"variable": [
												{
													"key": "plan",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the plan to be updated."
												}
											]
										},
										"description": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>"
									},
									"response": [
										{
											"id": "a716c3a4-9c4f-4e7c-97b3-b8cc7ca64d41",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether the plan is currently available for new subscriptions.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts. ",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "A brief description of the plan, hidden from customers.",
															"key": "nickname",
															"value": "<string>"
														},
														{
															"description": "The product the plan belongs to. Note that after updating, statement descriptors and line items of the plan in active subscriptions will be affected.",
															"key": "product",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).",
															"key": "trial_period_days",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the plan to be updated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"interval\": \"<string>\",\n  \"interval_count\": \"<integer>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"usage_type\": \"<string>\",\n  \"aggregate_usage\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"billing_scheme\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"product\": \"<string>\",\n  \"tiers\": [\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    }\n  ],\n  \"tiers_mode\": \"<string>\",\n  \"transform_usage\": {\n    \"divide_by\": \"<integer>\",\n    \"round\": \"<string>\"\n  },\n  \"trial_period_days\": \"<integer>\"\n}"
										},
										{
											"id": "d052bd59-e459-4c4b-9da4-706f510828c1",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether the plan is currently available for new subscriptions.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts. ",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "A brief description of the plan, hidden from customers.",
															"key": "nickname",
															"value": "<string>"
														},
														{
															"description": "The product the plan belongs to. Note that after updating, statement descriptors and line items of the plan in active subscriptions will be affected.",
															"key": "product",
															"value": "<string>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).",
															"key": "trial_period_days",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/plans/:plan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"plans",
														":plan"
													],
													"variable": [
														{
															"key": "plan",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the plan to be updated."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "f2f69cf5-cd0e-4270-92e9-3cc7ab0e9bf6"
						},
						{
							"name": "All Plans",
							"id": "71c13adf-3972-4202-88fa-5e9e7e88a185",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/plans?active=true&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&product=esse deserunt&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"plans"
									],
									"query": [
										{
											"key": "active",
											"value": "true",
											"description": "Only return plans that are active or inactive (e.g., pass `false` to list all inactive products)."
										},
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "product",
											"value": "esse deserunt",
											"description": "Only return plans for the given product."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your plans.</p>"
							},
							"response": [
								{
									"id": "c8a1df80-acfb-48b3-a5a4-e91854091bbc",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/plans?active=<boolean>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&product=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "product",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"active\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"interval\": \"<string>\",\n      \"interval_count\": \"<integer>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"usage_type\": \"<string>\",\n      \"aggregate_usage\": \"<string>\",\n      \"amount\": \"<integer>\",\n      \"billing_scheme\": \"<string>\",\n      \"nickname\": \"<string>\",\n      \"product\": \"<string>\",\n      \"tiers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tiers_mode\": \"<string>\",\n      \"transform_usage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trial_period_days\": \"<integer>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"interval\": \"<string>\",\n      \"interval_count\": \"<integer>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"usage_type\": \"<string>\",\n      \"aggregate_usage\": \"<string>\",\n      \"amount\": \"<integer>\",\n      \"billing_scheme\": \"<string>\",\n      \"nickname\": \"<string>\",\n      \"product\": \"<string>\",\n      \"tiers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tiers_mode\": \"<string>\",\n      \"transform_usage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trial_period_days\": \"<integer>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "fc8ef8b5-de5b-46d2-b467-34b3e62f1454",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/plans?active=<boolean>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&product=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "product",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Plan",
							"id": "ca95bd20-af13-46d2-b317-b2f577684f8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "currency",
											"value": "Duis",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "interval",
											"value": "month",
											"description": "(Required) Specifies billing frequency. Either `day`, `week`, `month` or `year`."
										},
										{
											"key": "active",
											"value": "true",
											"description": "Whether the plan is currently available for new subscriptions. Defaults to `true`."
										},
										{
											"key": "aggregate_usage",
											"value": "sum",
											"description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for picking the last usage record reported within a period, `last_ever` for picking the last usage record ever (across period bounds) or `max` which picks the usage record with the maximum reported usage during a period. Defaults to `sum`."
										},
										{
											"key": "amount",
											"value": "-22169655",
											"description": "A positive integer in %s (or 0 for a free plan) representing how much to charge on a recurring basis. Either `amount` or `tiers` is required."
										},
										{
											"key": "billing_scheme",
											"value": "tiered",
											"description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes."
										},
										{
											"key": "expand[0]",
											"value": "incididunt dolor aliqua Excepteur",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "id",
											"value": "aliquip ad cillum",
											"description": "An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes."
										},
										{
											"key": "interval_count",
											"value": "58836432",
											"description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks)."
										},
										{
											"key": "name",
											"value": "sit nulla est veniam",
											"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts."
										},
										{
											"key": "nickname",
											"value": "qui dolore ad",
											"description": "A brief description of the plan, hidden from customers."
										},
										{
											"key": "product[name]",
											"value": "in proident cillum id"
										},
										{
											"key": "product[id]",
											"value": "anim eiusmod"
										},
										{
											"key": "product[statement_descriptor]",
											"value": "sed consectetur"
										},
										{
											"key": "statement_descriptor",
											"value": "d",
											"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter."
										},
										{
											"key": "tiers[0][amount]",
											"value": "-39805509",
											"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required."
										},
										{
											"key": "tiers[0][up_to]",
											"value": "inf",
											"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required."
										},
										{
											"key": "tiers[1][amount]",
											"value": "-99071765",
											"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required."
										},
										{
											"key": "tiers[1][up_to]",
											"value": "inf",
											"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required."
										},
										{
											"key": "tiers_mode",
											"value": "volume",
											"description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows."
										},
										{
											"key": "transform_usage[divide_by]",
											"value": "-69124775",
											"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`."
										},
										{
											"key": "transform_usage[round]",
											"value": "up",
											"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`."
										},
										{
											"key": "trial_period_days",
											"value": "85911566",
											"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan)."
										},
										{
											"key": "usage_type",
											"value": "licensed",
											"description": "Configures how the quantity per period should be determined, can be either `metered` or `licensed`. `licensed` will automatically bill the `quantity` set for a plan when adding it to a subscription, `metered` will aggregate the total usage based on usage records. Defaults to `licensed`."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"plans"
									]
								},
								"description": "<p>You can create plans using the API, or in the Stripe <a href=\"https://dashboard.stripe.com/subscriptions/products\">Dashboard</a>.</p>"
							},
							"response": [
								{
									"id": "6c726d27-29c9-4d9a-b783-5273260a2480",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Specifies billing frequency. Either `day`, `week`, `month` or `year`.",
													"key": "interval",
													"value": "<string>"
												},
												{
													"description": "Whether the plan is currently available for new subscriptions. Defaults to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for picking the last usage record reported within a period, `last_ever` for picking the last usage record ever (across period bounds) or `max` which picks the usage record with the maximum reported usage during a period. Defaults to `sum`.",
													"key": "aggregate_usage",
													"value": "<string>"
												},
												{
													"description": "A positive integer in %s (or 0 for a free plan) representing how much to charge on a recurring basis. Either `amount` or `tiers` is required.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
													"key": "billing_scheme",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
													"key": "interval_count",
													"value": "<integer>"
												},
												{
													"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "A brief description of the plan, hidden from customers.",
													"key": "nickname",
													"value": "<string>"
												},
												{
													"key": "product[name]",
													"value": "<string>"
												},
												{
													"key": "product[id]",
													"value": "<string>"
												},
												{
													"key": "product[metadata]",
													"value": "<object>"
												},
												{
													"key": "product[statement_descriptor]",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[0][amount]",
													"value": "<integer>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[0][up_to]",
													"value": "<string>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[1][amount]",
													"value": "<integer>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[1][up_to]",
													"value": "<string>"
												},
												{
													"description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.",
													"key": "tiers_mode",
													"value": "<string>"
												},
												{
													"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
													"key": "transform_usage[divide_by]",
													"value": "<integer>"
												},
												{
													"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
													"key": "transform_usage[round]",
													"value": "<string>"
												},
												{
													"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).",
													"key": "trial_period_days",
													"value": "<integer>"
												},
												{
													"description": "Configures how the quantity per period should be determined, can be either `metered` or `licensed`. `licensed` will automatically bill the `quantity` set for a plan when adding it to a subscription, `metered` will aggregate the total usage based on usage records. Defaults to `licensed`.",
													"key": "usage_type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/plans",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"interval\": \"<string>\",\n  \"interval_count\": \"<integer>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"usage_type\": \"<string>\",\n  \"aggregate_usage\": \"<string>\",\n  \"amount\": \"<integer>\",\n  \"billing_scheme\": \"<string>\",\n  \"nickname\": \"<string>\",\n  \"product\": \"<string>\",\n  \"tiers\": [\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"up_to\": \"<integer>\"\n    }\n  ],\n  \"tiers_mode\": \"<string>\",\n  \"transform_usage\": {\n    \"divide_by\": \"<integer>\",\n    \"round\": \"<string>\"\n  },\n  \"trial_period_days\": \"<integer>\"\n}"
								},
								{
									"id": "2cc0aaaa-4536-4af1-83a3-50305808036b",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Specifies billing frequency. Either `day`, `week`, `month` or `year`.",
													"key": "interval",
													"value": "<string>"
												},
												{
													"description": "Whether the plan is currently available for new subscriptions. Defaults to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for picking the last usage record reported within a period, `last_ever` for picking the last usage record ever (across period bounds) or `max` which picks the usage record with the maximum reported usage during a period. Defaults to `sum`.",
													"key": "aggregate_usage",
													"value": "<string>"
												},
												{
													"description": "A positive integer in %s (or 0 for a free plan) representing how much to charge on a recurring basis. Either `amount` or `tiers` is required.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
													"key": "billing_scheme",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
													"key": "interval_count",
													"value": "<integer>"
												},
												{
													"description": "The plan name. Customers may see this value on Stripe-generated invoices and receipts.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "A brief description of the plan, hidden from customers.",
													"key": "nickname",
													"value": "<string>"
												},
												{
													"key": "product[name]",
													"value": "<string>"
												},
												{
													"key": "product[id]",
													"value": "<string>"
												},
												{
													"key": "product[metadata]",
													"value": "<object>"
												},
												{
													"key": "product[statement_descriptor]",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[0][amount]",
													"value": "<integer>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[0][up_to]",
													"value": "<string>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[1][amount]",
													"value": "<integer>"
												},
												{
													"description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. Either `amount` or `tiers` is required.",
													"key": "tiers[1][up_to]",
													"value": "<string>"
												},
												{
													"description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.",
													"key": "tiers_mode",
													"value": "<string>"
												},
												{
													"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
													"key": "transform_usage[divide_by]",
													"value": "<integer>"
												},
												{
													"description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.",
													"key": "transform_usage[round]",
													"value": "<string>"
												},
												{
													"description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](/docs/api#create_subscription-trial_from_plan).",
													"key": "trial_period_days",
													"value": "<integer>"
												},
												{
													"description": "Configures how the quantity per period should be determined, can be either `metered` or `licensed`. `licensed` will automatically bill the `quantity` set for a plan when adding it to a subscription, `metered` will aggregate the total usage based on usage records. Defaults to `licensed`.",
													"key": "usage_type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/plans",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"plans"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "80c70b2b-1d0a-4d4b-a2fa-8a31c837c722"
				},
				{
					"name": "products",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete Product",
									"id": "8e841f88-41d7-4967-9953-1592039c1ad8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The ID of the product to delete."
												}
											]
										},
										"description": "<p>Delete a product. Deleting a product with type=<code>good</code> is only possible if it has no SKUs associated with it. Deleting a product with type=<code>service</code> is only possible if it has no plans associated with it.</p>"
									},
									"response": [
										{
											"id": "b26a39eb-c5c8-49cd-b9b4-8855e8ee3da3",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the product to delete."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "ec3e2cab-316a-4dc1-ae09-b4d0640b994b",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the product to delete."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Product",
									"id": "2bd957d5-3834-4b86-a225-96783a2d93ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the product to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>"
									},
									"response": [
										{
											"id": "b551bee4-4171-4b22-a4e1-97883aa75666",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the product to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"images\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"active\": \"<boolean>\",\n  \"attributes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caption\": \"<string>\",\n  \"description\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": \"<number>\",\n    \"length\": \"<number>\",\n    \"weight\": \"<number>\",\n    \"width\": \"<number>\"\n  },\n  \"shippable\": \"<boolean>\",\n  \"statement_descriptor\": \"<string>\",\n  \"unit_label\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "bc43d328-dbda-4442-ada6-8dbb04db969e",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the product to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Product",
									"id": "4b0a5b86-a146-4cf9-9622-350ed45384e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "active",
													"value": "true",
													"description": "Whether the product is available for purchase."
												},
												{
													"key": "attributes[0]",
													"value": "irure aute",
													"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product."
												},
												{
													"key": "attributes[1]",
													"value": "ea incididunt consequat deserunt",
													"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product."
												},
												{
													"key": "caption",
													"value": "voluptate ad labore",
													"description": "A short one-line description of the product, meant to be displayable to the customer."
												},
												{
													"key": "deactivate_on[0]",
													"value": "nulla eu consectetur veniam mollit",
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product."
												},
												{
													"key": "deactivate_on[1]",
													"value": "voluptate ipsum pariatur",
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product."
												},
												{
													"key": "description",
													"value": "laboris sed consequat",
													"description": "The product's description, meant to be displayable to the customer."
												},
												{
													"key": "expand[0]",
													"value": "Lorem in magna nulla",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "nostrud reprehenderit",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "images[0]",
													"value": "consequat nostrud esse",
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer."
												},
												{
													"key": "images[1]",
													"value": "aute in",
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer."
												},
												{
													"key": "name",
													"value": "esse culpa consequat nisi",
													"description": "The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types."
												},
												{
													"key": "package_dimensions[height]",
													"value": "-41759971.95837766",
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`."
												},
												{
													"key": "package_dimensions[length]",
													"value": "-91916680.08910598",
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`."
												},
												{
													"key": "package_dimensions[weight]",
													"value": "-6886197.253558859",
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`."
												},
												{
													"key": "package_dimensions[width]",
													"value": "49696583.965402186",
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`."
												},
												{
													"key": "shippable",
													"value": "true",
													"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`."
												},
												{
													"key": "statement_descriptor",
													"value": "fugiat laborum de",
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`."
												},
												{
													"key": "unit_label",
													"value": "laborum ",
													"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`."
												},
												{
													"key": "url",
													"value": "Lorem fugiat ad laborum",
													"description": "A URL of a publicly-accessible webpage for this product."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>Note that a product’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.</p>"
									},
									"response": [
										{
											"id": "dbc10c5c-53b7-4203-bd04-3d7e5452263c",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether the product is available for purchase.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product.",
															"key": "attributes[0]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product.",
															"key": "attributes[1]",
															"value": "<string>"
														},
														{
															"description": "A short one-line description of the product, meant to be displayable to the customer.",
															"key": "caption",
															"value": "<string>"
														},
														{
															"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product.",
															"key": "deactivate_on[0]",
															"value": "<string>"
														},
														{
															"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product.",
															"key": "deactivate_on[1]",
															"value": "<string>"
														},
														{
															"description": "The product's description, meant to be displayable to the customer.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
															"key": "images[0]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
															"key": "images[1]",
															"value": "<string>"
														},
														{
															"description": "The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[height]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[length]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[weight]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[width]",
															"value": "<number>"
														},
														{
															"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`.",
															"key": "shippable",
															"value": "<boolean>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`.",
															"key": "unit_label",
															"value": "<string>"
														},
														{
															"description": "A URL of a publicly-accessible webpage for this product.",
															"key": "url",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"images\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"active\": \"<boolean>\",\n  \"attributes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caption\": \"<string>\",\n  \"description\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": \"<number>\",\n    \"length\": \"<number>\",\n    \"weight\": \"<number>\",\n    \"width\": \"<number>\"\n  },\n  \"shippable\": \"<boolean>\",\n  \"statement_descriptor\": \"<string>\",\n  \"unit_label\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "a7cd2bec-e206-4737-9a4e-a871ce12719c",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether the product is available for purchase.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product.",
															"key": "attributes[0]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 5 alphanumeric attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`). If a value for `attributes` is specified, the list specified will replace the existing attributes list on this product. Any attributes not present after the update will be deleted from the SKUs for this product.",
															"key": "attributes[1]",
															"value": "<string>"
														},
														{
															"description": "A short one-line description of the product, meant to be displayable to the customer.",
															"key": "caption",
															"value": "<string>"
														},
														{
															"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product.",
															"key": "deactivate_on[0]",
															"value": "<string>"
														},
														{
															"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product.",
															"key": "deactivate_on[1]",
															"value": "<string>"
														},
														{
															"description": "The product's description, meant to be displayable to the customer.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
															"key": "images[0]",
															"value": "<string>"
														},
														{
															"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
															"key": "images[1]",
															"value": "<string>"
														},
														{
															"description": "The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[height]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[length]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[weight]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`.",
															"key": "package_dimensions[width]",
															"value": "<number>"
														},
														{
															"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`.",
															"key": "shippable",
															"value": "<boolean>"
														},
														{
															"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`.",
															"key": "statement_descriptor",
															"value": "<string>"
														},
														{
															"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`.",
															"key": "unit_label",
															"value": "<string>"
														},
														{
															"description": "A URL of a publicly-accessible webpage for this product.",
															"key": "url",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "9a3e5210-4498-4955-b06f-f97fd13a7083"
						},
						{
							"name": "All Products",
							"id": "61a14584-e919-4fb3-96f7-5dd740245f5a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/products?active=true&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&ids[0]=enim Ut culpa ut&ids[1]=cupidatat ullamco esse&limit=66746697&shippable=true&starting_after=esse deserunt&type=good&url=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products"
									],
									"query": [
										{
											"key": "active",
											"value": "true",
											"description": "Only return products that are active or inactive (e.g., pass `false` to list all inactive products)."
										},
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "Only return products that were created during the given date interval."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "Only return products that were created during the given date interval."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "Only return products that were created during the given date interval."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "Only return products that were created during the given date interval."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "ids[0]",
											"value": "enim Ut culpa ut",
											"description": "Only return products with the given IDs."
										},
										{
											"key": "ids[1]",
											"value": "cupidatat ullamco esse",
											"description": "Only return products with the given IDs."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "shippable",
											"value": "true",
											"description": "Only return products that can be shipped (i.e., physical, not digital products)."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "type",
											"value": "good",
											"description": "Only return products of this type."
										},
										{
											"key": "url",
											"value": "esse deserunt",
											"description": "Only return products with the given url."
										}
									]
								},
								"description": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>"
							},
							"response": [
								{
									"id": "ee50e9f0-71f5-4594-85d8-7c5956910658",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products?active=<boolean>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&limit=<integer>&shippable=<boolean>&starting_after=<string>&type=<string>&url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "shippable",
													"value": "<boolean>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "url",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"active\": \"<boolean>\",\n      \"attributes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"caption\": \"<string>\",\n      \"description\": \"<string>\",\n      \"package_dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shippable\": \"<boolean>\",\n      \"statement_descriptor\": \"<string>\",\n      \"unit_label\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"images\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"active\": \"<boolean>\",\n      \"attributes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"caption\": \"<string>\",\n      \"description\": \"<string>\",\n      \"package_dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"shippable\": \"<boolean>\",\n      \"statement_descriptor\": \"<string>\",\n      \"unit_label\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "73f670a4-2351-4e12-ba73-836adc1e83db",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/products?active=<boolean>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&limit=<integer>&shippable=<boolean>&starting_after=<string>&type=<string>&url=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "shippable",
													"value": "<boolean>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "url",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Product",
							"id": "cf125911-3fa1-4b43-9c64-ab239b8f8678",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Lorem o",
											"description": "(Required) The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types."
										},
										{
											"key": "type",
											"value": "good",
											"description": "(Required) The type of the product. The product is either of type `service`, which is eligible for use with Subscriptions and Plans or `good`, which is eligible for use with Orders and SKUs."
										},
										{
											"key": "active",
											"value": "true",
											"description": "Whether the product is currently available for purchase. Defaults to `true`."
										},
										{
											"key": "attributes[0]",
											"value": "consectetur qui",
											"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types."
										},
										{
											"key": "attributes[1]",
											"value": "esse magna consectetur irure",
											"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types."
										},
										{
											"key": "caption",
											"value": "eu et magna ipsum est",
											"description": "A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`."
										},
										{
											"key": "deactivate_on[0]",
											"value": "ut pariatur ut officia ipsum",
											"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`."
										},
										{
											"key": "deactivate_on[1]",
											"value": "do laboris e",
											"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`."
										},
										{
											"key": "description",
											"value": "magna sed aute",
											"description": "The product's description, meant to be displayable to the customer. May only be set if type=`good`."
										},
										{
											"key": "expand[0]",
											"value": "ipsum cillum",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "dolor dolore in sunt",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "id",
											"value": "sit velit elit",
											"description": "An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types."
										},
										{
											"key": "images[0]",
											"value": "enim pariatur veniam Duis",
											"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`."
										},
										{
											"key": "images[1]",
											"value": "laborum velit sit",
											"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`."
										},
										{
											"key": "package_dimensions[height]",
											"value": "19522987.530030906",
											"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`."
										},
										{
											"key": "package_dimensions[length]",
											"value": "52098195.53580278",
											"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`."
										},
										{
											"key": "package_dimensions[weight]",
											"value": "-39999615.28316063",
											"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`."
										},
										{
											"key": "package_dimensions[width]",
											"value": "-14706265.019734666",
											"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`."
										},
										{
											"key": "shippable",
											"value": "false",
											"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`."
										},
										{
											"key": "statement_descriptor",
											"value": "ad consequat ea ",
											"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`."
										},
										{
											"key": "unit_label",
											"value": "conse",
											"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`."
										},
										{
											"key": "url",
											"value": "exercitation dolor consequat",
											"description": "A URL of a publicly-accessible webpage for this product. May only be set if type=`good`."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"products"
									]
								},
								"description": "<p>Creates a new product object. To create a product for use with subscriptions, see <a href=\"#create_service_product\">Subscriptions Products</a>.</p>"
							},
							"response": [
								{
									"id": "5b4ff998-dde0-413f-b4a5-da3e68dcd77f",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) The type of the product. The product is either of type `service`, which is eligible for use with Subscriptions and Plans or `good`, which is eligible for use with Orders and SKUs.",
													"key": "type",
													"value": "<string>"
												},
												{
													"description": "Whether the product is currently available for purchase. Defaults to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.",
													"key": "attributes[0]",
													"value": "<string>"
												},
												{
													"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.",
													"key": "attributes[1]",
													"value": "<string>"
												},
												{
													"description": "A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "caption",
													"value": "<string>"
												},
												{
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.",
													"key": "deactivate_on[0]",
													"value": "<string>"
												},
												{
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.",
													"key": "deactivate_on[1]",
													"value": "<string>"
												},
												{
													"description": "The product's description, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "images[0]",
													"value": "<string>"
												},
												{
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "images[1]",
													"value": "<string>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[height]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[length]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[weight]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[width]",
													"value": "<number>"
												},
												{
													"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.",
													"key": "shippable",
													"value": "<boolean>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`.",
													"key": "unit_label",
													"value": "<string>"
												},
												{
													"description": "A URL of a publicly-accessible webpage for this product. May only be set if type=`good`.",
													"key": "url",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"images\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"active\": \"<boolean>\",\n  \"attributes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caption\": \"<string>\",\n  \"description\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": \"<number>\",\n    \"length\": \"<number>\",\n    \"weight\": \"<number>\",\n    \"width\": \"<number>\"\n  },\n  \"shippable\": \"<boolean>\",\n  \"statement_descriptor\": \"<string>\",\n  \"unit_label\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "3644c2d2-1556-4bbe-ae80-5f2aa6ebfd4d",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The product's name, meant to be displayable to the customer. Applicable to both `service` and `good` types.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) The type of the product. The product is either of type `service`, which is eligible for use with Subscriptions and Plans or `good`, which is eligible for use with Orders and SKUs.",
													"key": "type",
													"value": "<string>"
												},
												{
													"description": "Whether the product is currently available for purchase. Defaults to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.",
													"key": "attributes[0]",
													"value": "<string>"
												},
												{
													"description": "A list of up to 5 alphanumeric attributes. Applicable to both `service` and `good` types.",
													"key": "attributes[1]",
													"value": "<string>"
												},
												{
													"description": "A short one-line description of the product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "caption",
													"value": "<string>"
												},
												{
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.",
													"key": "deactivate_on[0]",
													"value": "<string>"
												},
												{
													"description": "An array of Connect application names or identifiers that should not be able to order the SKUs for this product. May only be set if type=`good`.",
													"key": "deactivate_on[1]",
													"value": "<string>"
												},
												{
													"description": "The product's description, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account. Applicable to both `service` and `good` types.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "images[0]",
													"value": "<string>"
												},
												{
													"description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer. May only be set if type=`good`.",
													"key": "images[1]",
													"value": "<string>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[height]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[length]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[weight]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this product for shipping purposes. A SKU associated with this product can override this value by having its own `package_dimensions`. May only be set if type=`good`.",
													"key": "package_dimensions[width]",
													"value": "<number>"
												},
												{
													"description": "Whether this product is shipped (i.e., physical goods). Defaults to `true`. May only be set if type=`good`.",
													"key": "shippable",
													"value": "<boolean>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters. The statement description may not include <>\"' characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped. While most banks display this information consistently, some may display it incorrectly or not at all. It must contain at least one letter. May only be set if type=`service`.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=`service`.",
													"key": "unit_label",
													"value": "<string>"
												},
												{
													"description": "A URL of a publicly-accessible webpage for this product. May only be set if type=`good`.",
													"key": "url",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"products"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "a525c0ef-2673-4d08-8fcf-cec1841e2505"
				},
				{
					"name": "recipients",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Transfer Recipient Delete",
									"id": "97aee266-062f-44e4-a088-3b4badbc9b9b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/recipients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the recipient to be deleted."
												}
											]
										},
										"description": "<p>Permanently deletes a recipient. It cannot be undone.</p>"
									},
									"response": [
										{
											"id": "7b07ddf9-b3a9-4bf4-9e63-7d1d59093a4b",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the recipient to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "3dc39f73-bdfa-4b56-aea7-68cf356c2f2d",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the recipient to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Transfer Recipient",
									"id": "05130c4d-b216-4aee-adb3-ca6e13561b42",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/recipients/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the recipient to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>"
									},
									"response": [
										{
											"id": "e66553b7-ea7f-4591-88b5-eafc7f5644fc",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the recipient to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"active_account\": {\n    \"country\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"last4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bank_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fingerprint\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"routing_number\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"cards\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"default_card\": \"<string>\",\n  \"description\": \"<string>\",\n  \"email\": \"<string>\",\n  \"migrated_to\": \"<string>\",\n  \"name\": \"<string>\",\n  \"rolled_back_from\": \"<string>\"\n}"
										},
										{
											"id": "5d84605f-3ffa-4688-8cdb-a3842f0be7bd",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the recipient to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Transfer Recipient Update",
									"id": "01bd7f86-6633-4231-8e7d-f20c69478ff8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "default_card",
													"value": "nostrud ut aliquip exercitation"
												},
												{
													"key": "description",
													"value": "nostrud nulla ad Duis"
												},
												{
													"key": "email",
													"value": "laborum Lorem sed laboris"
												},
												{
													"key": "expand[0]",
													"value": "Duis exercitation tempor in",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "aliqua sit esse commodo",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "name",
													"value": "eu consectetur cupidatat"
												},
												{
													"key": "tax_id",
													"value": "est ea ut"
												},
												{
													"key": "type",
													"value": "ad Excepteur consectetur"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/recipients/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "cffa4d5c-0b96-48ce-9f80-c8ca96d705e7",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "default_card",
															"value": "<string>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "tax_id",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"active_account\": {\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder_name\": \"<string>\",\n    \"account_holder_type\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fingerprint\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"routing_number\": \"<string>\"\n  },\n  \"cards\": {\n    \"data\": [\n      {\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"funding\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"available_payout_methods\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"default_for_currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dynamic_last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fingerprint\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"recipient\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tokenization_method\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"funding\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"available_payout_methods\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"default_for_currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dynamic_last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fingerprint\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"recipient\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tokenization_method\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"default_card\": \"<string>\",\n  \"description\": \"<string>\",\n  \"email\": \"<string>\",\n  \"migrated_to\": \"<string>\",\n  \"name\": \"<string>\",\n  \"rolled_back_from\": \"<string>\"\n}"
										},
										{
											"id": "821a24c4-2690-4b7c-bf8f-45a06b489c41",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "default_card",
															"value": "<string>"
														},
														{
															"key": "description",
															"value": "<string>"
														},
														{
															"key": "email",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "name",
															"value": "<string>"
														},
														{
															"key": "tax_id",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/recipients/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"recipients",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "e4ed554e-6bc2-4cca-903b-562a5ad8e4a5"
						},
						{
							"name": "All Transfer Recipients",
							"id": "ce0d66bd-c9d6-4112-8061-7f3d949d5c30",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/recipients?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&type=corporation&verified=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"recipients"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "type",
											"value": "corporation"
										},
										{
											"key": "verified",
											"value": "true",
											"description": "Only return recipients that are verified or unverified."
										}
									]
								},
								"description": "<p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>"
							},
							"response": [
								{
									"id": "12c10d77-6673-46fa-8c40-2238e2cc86fa",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/recipients?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>&verified=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "verified",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"active_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cards\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"default_card\": \"<string>\",\n      \"description\": \"<string>\",\n      \"email\": \"<string>\",\n      \"migrated_to\": \"<string>\",\n      \"name\": \"<string>\",\n      \"rolled_back_from\": \"<string>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"type\": \"<string>\",\n      \"active_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cards\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"default_card\": \"<string>\",\n      \"description\": \"<string>\",\n      \"email\": \"<string>\",\n      \"migrated_to\": \"<string>\",\n      \"name\": \"<string>\",\n      \"rolled_back_from\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "679e544b-5dc8-4865-9a96-f77591e3a3fc",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/recipients?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&type=<string>&verified=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "verified",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Transfer Recipient Create",
							"id": "5be2339c-cedd-4ed4-956e-0f42bb726db2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "voluptate in",
											"description": "(Required) "
										},
										{
											"key": "type",
											"value": "dolor pariatur ea ex elit",
											"description": "(Required) "
										},
										{
											"key": "description",
											"value": "Ut sed velit labore"
										},
										{
											"key": "email",
											"value": "enim commodo"
										},
										{
											"key": "expand[0]",
											"value": "magna officia id proident",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "Excepteur anim",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "tax_id",
											"value": "eiusmod non in officia"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/recipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"recipients"
									]
								}
							},
							"response": [
								{
									"id": "91b5652b-9fc5-4163-a62f-135ef7e2415f",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "tax_id",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/recipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"active_account\": {\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"account\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"account_holder_name\": \"<string>\",\n    \"account_holder_type\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fingerprint\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"routing_number\": \"<string>\"\n  },\n  \"cards\": {\n    \"data\": [\n      {\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"funding\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"available_payout_methods\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"default_for_currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dynamic_last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fingerprint\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"recipient\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tokenization_method\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"brand\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_month\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"exp_year\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"funding\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_city\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line1_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_line2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_state\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"address_zip_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"available_payout_methods\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"country\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"customer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"cvc_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"default_for_currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dynamic_last4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fingerprint\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"recipient\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tokenization_method\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"default_card\": \"<string>\",\n  \"description\": \"<string>\",\n  \"email\": \"<string>\",\n  \"migrated_to\": \"<string>\",\n  \"name\": \"<string>\",\n  \"rolled_back_from\": \"<string>\"\n}"
								},
								{
									"id": "b5b1f272-124a-44dd-b8a3-38d6cbcf78ff",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "tax_id",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/recipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"recipients"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "8dbb97f5-211f-4225-853a-a445b88c592d"
				},
				{
					"name": "refunds",
					"item": [
						{
							"name": "{refund}",
							"item": [
								{
									"name": "Retrieve Refund",
									"id": "f52f3bc0-e530-46b7-bf81-cca144a91cbe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/refunds/:refund?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds",
												":refund"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "refund",
													"value": "adipisicing incididunt esse",
													"description": "(Required) ID of refund to retrieve."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing refund.</p>"
									},
									"response": [
										{
											"id": "64db2429-d589-4a34-abd2-79e9745ef958",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/refunds/:refund?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"refunds",
														":refund"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "refund",
															"value": "adipisicing incididunt esse",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
										},
										{
											"id": "762cf5a4-e3ab-4b43-ba1d-168b7fa1dcab",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/refunds/:refund?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"refunds",
														":refund"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "refund",
															"value": "adipisicing incididunt esse",
															"description": "(Required) ID of refund to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Refund",
									"id": "94904a51-fadd-4eb2-a102-ee735232157e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "eiusmod Ut aliquip",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ad consectetur Lorem",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/refunds/:refund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds",
												":refund"
											],
											"variable": [
												{
													"key": "refund",
													"value": "adipisicing incididunt esse",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>This request only accepts <code>metadata</code> as an argument.</p>"
									},
									"response": [
										{
											"id": "f2a2537b-a13d-4d02-8ff8-49702587fef8",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/refunds/:refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"refunds",
														":refund"
													],
													"variable": [
														{
															"key": "refund",
															"value": "adipisicing incididunt esse",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
										},
										{
											"id": "6f951d5b-7f9f-4bf2-849a-890c7540697c",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/refunds/:refund",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"refunds",
														":refund"
													],
													"variable": [
														{
															"key": "refund",
															"value": "adipisicing incididunt esse",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "caf7c570-2d6c-416c-85d4-8e9383e05351"
						},
						{
							"name": "All Refunds",
							"id": "a0f244d1-c997-4a55-8c35-d97aa2f58dd5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/refunds?charge=adipisicing incididunt esse&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"refunds"
									],
									"query": [
										{
											"key": "charge",
											"value": "adipisicing incididunt esse",
											"description": "Only return refunds for the charge specified by this charge ID."
										},
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of all refunds you’ve previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>"
							},
							"response": [
								{
									"id": "98a476ea-119f-4fab-9b0f-980ffaff04cb",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/refunds?charge=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_reason\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"charge\": \"<string>\",\n      \"failure_balance_transaction\": \"<string>\",\n      \"failure_reason\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"receipt_number\": \"<string>\",\n      \"status\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "652583fb-630a-455b-b7e3-aaf684b6ea11",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/refunds?charge=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds"
											],
											"query": [
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Unified Payments Create Refund",
							"id": "38314433-4bd1-49fb-9939-9756b7233c8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "66905614"
										},
										{
											"key": "charge",
											"value": "dolore eu sed"
										},
										{
											"key": "description",
											"value": "nulla"
										},
										{
											"key": "expand[0]",
											"value": "consectetur aute fugiat dolor culpa",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "ipsum aliquip elit",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "reason",
											"value": "fraudulent"
										},
										{
											"key": "refund_application_fee",
											"value": "false"
										},
										{
											"key": "reverse_transfer",
											"value": "true"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"refunds"
									]
								}
							},
							"response": [
								{
									"id": "c6c058df-6ac0-4267-a814-0052420a2230",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												},
												{
													"key": "refund_application_fee",
													"value": "<boolean>"
												},
												{
													"key": "reverse_transfer",
													"value": "<boolean>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/refunds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"charge\": \"<string>\",\n  \"failure_balance_transaction\": \"<string>\",\n  \"failure_reason\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"receipt_number\": \"<string>\",\n  \"status\": \"<string>\"\n}"
								},
								{
									"id": "fea7481e-c51c-446d-b6f3-b7b371282dd4",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "charge",
													"value": "<string>"
												},
												{
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "reason",
													"value": "<string>"
												},
												{
													"key": "refund_application_fee",
													"value": "<boolean>"
												},
												{
													"key": "reverse_transfer",
													"value": "<boolean>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/refunds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"refunds"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "b93d248b-fd0b-4c4e-9a9b-e6d054f4fc84"
				},
				{
					"name": "reporting",
					"item": [
						{
							"name": "report_runs",
							"item": [
								{
									"name": "Financial Reporting Finance Report Run All",
									"id": "83e664c6-e83c-45c3-b73e-b37940c3629d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reporting/report_runs?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reporting",
												"report_runs"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "-13431299"
												},
												{
													"key": "created[gte]",
													"value": "48353647"
												},
												{
													"key": "created[lt]",
													"value": "-92044334"
												},
												{
													"key": "created[lte]",
													"value": "-79364890"
												},
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											]
										},
										"description": "<p>Returns a list of Report Runs, with the most recent appearing first. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
									},
									"response": [
										{
											"id": "c386d26c-a75d-4b91-80c9-fb8fef2a24a2",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"parameters\": {\n        \"connected_account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payout\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reporting_category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"report_type\": \"<string>\",\n      \"status\": \"<string>\",\n      \"error\": \"<string>\",\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"succeeded_at\": \"<unix-time>\"\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"object\": \"<string>\",\n      \"parameters\": {\n        \"connected_account\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_end\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_start\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"payout\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"reporting_category\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"report_type\": \"<string>\",\n      \"status\": \"<string>\",\n      \"error\": \"<string>\",\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"succeeded_at\": \"<unix-time>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "58de1fdd-0854-4111-a1f2-af8161b4cd4a",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs"
													],
													"query": [
														{
															"key": "created[gt]",
															"value": "<integer>"
														},
														{
															"key": "created[gte]",
															"value": "<integer>"
														},
														{
															"key": "created[lt]",
															"value": "<integer>"
														},
														{
															"key": "created[lte]",
															"value": "<integer>"
														},
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Financial Reporting Finance Report Run Create",
									"id": "996d3f10-4d13-44d3-899e-684978931be8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "report_type",
													"value": "aliqua",
													"description": "(Required) The [ID of the Report Type to run](https://stripe.com/docs/dashboard/statements/api#available-report-types), such as `\"activity.summary.1\"`."
												},
												{
													"key": "expand[0]",
													"value": "ullamco tempor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "eiusmod",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "parameters[connected_account]",
													"value": "nisi sunt ex",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												},
												{
													"key": "parameters[currency]",
													"value": "et do nostrud occaecat ullamco",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												},
												{
													"key": "parameters[interval_end]",
													"value": "46845425",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												},
												{
													"key": "parameters[interval_start]",
													"value": "-91432428",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												},
												{
													"key": "parameters[payout]",
													"value": "Ut dolore",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												},
												{
													"key": "parameters[reporting_category]",
													"value": "issuing_authorization_hold",
													"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api)."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/reporting/report_runs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reporting",
												"report_runs"
											]
										},
										"description": "<p>Creates a new object and begin running the report. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
									},
									"response": [
										{
											"id": "557c754e-2ca8-468c-bf4c-8f3827c40d61",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The [ID of the Report Type to run](https://stripe.com/docs/dashboard/statements/api#available-report-types), such as `\"activity.summary.1\"`.",
															"key": "report_type",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[connected_account]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[currency]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[interval_end]",
															"value": "<unix-time>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[interval_start]",
															"value": "<unix-time>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[payout]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[reporting_category]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"parameters\": {\n    \"connected_account\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"interval_end\": \"<unix-time>\",\n    \"interval_start\": \"<unix-time>\",\n    \"payout\": \"<string>\",\n    \"reporting_category\": \"<string>\"\n  },\n  \"report_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"error\": \"<string>\",\n  \"result\": {\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"title\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"succeeded_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "dc1b55f7-97cc-46ec-83a3-88322163a299",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The [ID of the Report Type to run](https://stripe.com/docs/dashboard/statements/api#available-report-types), such as `\"activity.summary.1\"`.",
															"key": "report_type",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[connected_account]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[currency]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[interval_end]",
															"value": "<unix-time>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[interval_start]",
															"value": "<unix-time>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[payout]",
															"value": "<string>"
														},
														{
															"description": "Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports documentation](https://stripe.com/docs/dashboard/statements/api).",
															"key": "parameters[reporting_category]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Financial Reporting Finance Report Run Retrieve",
									"id": "919b6981-1085-43e0-bd67-34df231a8ae1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reporting/report_runs/:report_run?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reporting",
												"report_runs",
												":report_run"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "report_run",
													"value": "esse deserunt",
													"description": "(Required) The ID of the run to retrieve"
												}
											]
										},
										"description": "<p>Retrieves the details of an existing Report Run. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
									},
									"response": [
										{
											"id": "ef3bbdaf-c5e6-4736-be1c-b19b6f433372",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs/:report_run?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs",
														":report_run"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "report_run",
															"value": "esse deserunt",
															"description": "(Required) The ID of the run to retrieve"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\",\n  \"parameters\": {\n    \"connected_account\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"interval_end\": \"<unix-time>\",\n    \"interval_start\": \"<unix-time>\",\n    \"payout\": \"<string>\",\n    \"reporting_category\": \"<string>\"\n  },\n  \"report_type\": \"<string>\",\n  \"status\": \"<string>\",\n  \"error\": \"<string>\",\n  \"result\": {\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"title\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"succeeded_at\": \"<unix-time>\"\n}"
										},
										{
											"id": "2c50025b-38fe-4539-b3df-1173f5a14a39",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_runs/:report_run?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_runs",
														":report_run"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "report_run",
															"value": "esse deserunt",
															"description": "(Required) The ID of the run to retrieve"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "bfd5ba23-11de-466f-8c0c-273154fce1c3"
						},
						{
							"name": "report_types",
							"item": [
								{
									"name": "Financial Reporting Finance Report Type All",
									"id": "e1844559-55ba-4618-a813-a1df39cbd120",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reporting/report_types?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reporting",
												"report_types"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"description": "<p>Returns a full list of Report Types. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
									},
									"response": [
										{
											"id": "e192a90a-539b-4a2d-a8c4-267ef648bd19",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_types?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_types"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"data_available_end\": \"<unix-time>\",\n      \"data_available_start\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"version\": \"<integer>\"\n    },\n    {\n      \"data_available_end\": \"<unix-time>\",\n      \"data_available_start\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"object\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"version\": \"<integer>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "540e7e04-8550-403c-a894-2e5114f1d594",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_types?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_types"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Financial Reporting Finance Report Type Retrieve",
									"id": "ca89da85-e0ad-405d-ba21-e8fc2fe9952e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reporting/report_types/:report_type?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reporting",
												"report_types",
												":report_type"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "report_type",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The [ID of the Report Type](https://stripe.com/docs/dashboard/statements/api#available-report-types) to retrieve, such as `\"activity.summary.1\"`."
												}
											]
										},
										"description": "<p>Retrieves the details of a Report Type. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>"
									},
									"response": [
										{
											"id": "bdf3a14c-66a5-4663-90ef-980c0e0c9288",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_types/:report_type?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_types",
														":report_type"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "report_type",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The [ID of the Report Type](https://stripe.com/docs/dashboard/statements/api#available-report-types) to retrieve, such as `\"activity.summary.1\"`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data_available_end\": \"<unix-time>\",\n  \"data_available_start\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"object\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"version\": \"<integer>\"\n}"
										},
										{
											"id": "72b9c86b-016d-4f7c-a5c2-ec5896d82a57",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reporting/report_types/:report_type?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reporting",
														"report_types",
														":report_type"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "report_type",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The [ID of the Report Type](https://stripe.com/docs/dashboard/statements/api#available-report-types) to retrieve, such as `\"activity.summary.1\"`."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "62fa9cd3-da99-40f4-aa41-94c1e205b229"
						}
					],
					"id": "b62ba45f-babb-48c5-978a-17a44540ed12"
				},
				{
					"name": "sigma/scheduled_query_runs",
					"item": [
						{
							"name": "All Scheduled Query Runs",
							"id": "15156fb3-db58-4f88-a049-80ce9def6735",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sigma",
										"scheduled_query_runs"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of scheduled query runs.</p>"
							},
							"response": [
								{
									"id": "23b0fbf4-d2c6-4c43-9dd4-9d8ab5916eb4",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sigma",
												"scheduled_query_runs"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<unix-time>\",\n      \"data_load_time\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"result_available_until\": \"<unix-time>\",\n      \"sql\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"error\": \"<object>\",\n      \"file\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"created\": \"<unix-time>\",\n      \"data_load_time\": \"<unix-time>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"result_available_until\": \"<unix-time>\",\n      \"sql\": \"<string>\",\n      \"status\": \"<string>\",\n      \"title\": \"<string>\",\n      \"error\": \"<object>\",\n      \"file\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "72c122fa-ffff-4c1a-ba9a-f105c1f2258d",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sigma",
												"scheduled_query_runs"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Scheduled Query Run",
							"id": "e826c764-3da3-4d9c-ad54-ce838c06b264",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs/:scheduled_query_run?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sigma",
										"scheduled_query_runs",
										":scheduled_query_run"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "scheduled_query_run",
											"value": "esse deserunt",
											"description": "(Required) Unique identifier for the object."
										}
									]
								},
								"description": "<p>Retrieves the details of an scheduled query run.</p>"
							},
							"response": [
								{
									"id": "1546d110-ee85-4c55-9114-38fd0cabbf7e",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs/:scheduled_query_run?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sigma",
												"scheduled_query_runs",
												":scheduled_query_run"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "scheduled_query_run",
													"value": "esse deserunt",
													"description": "(Required) Unique identifier for the object."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"data_load_time\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"result_available_until\": \"<unix-time>\",\n  \"sql\": \"<string>\",\n  \"status\": \"<string>\",\n  \"title\": \"<string>\",\n  \"error\": \"<object>\",\n  \"file\": {\n    \"created\": \"<unix-time>\",\n    \"id\": \"<string>\",\n    \"object\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"title\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
								},
								{
									"id": "830c750f-4656-45f2-b684-d7fe9d12c4bd",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sigma/scheduled_query_runs/:scheduled_query_run?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sigma",
												"scheduled_query_runs",
												":scheduled_query_run"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "scheduled_query_run",
													"value": "esse deserunt",
													"description": "(Required) Unique identifier for the object."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "f903aefe-0f6e-4362-b309-8eabfee63107"
				},
				{
					"name": "skus",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete SKU",
									"id": "8becf6f0-892e-4ae1-8896-334cd0c286fd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/skus/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the SKU to be deleted."
												}
											]
										},
										"description": "<p>Delete a SKU. Deleting a SKU is only possible until it has been used in an order.</p>"
									},
									"response": [
										{
											"id": "b8ba1437-acf8-4b64-9b2d-d244c998019b",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the SKU to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "7a2678e6-348c-4561-9cb2-f935463dfdf4",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the SKU to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve SKU",
									"id": "f8d31188-6bdd-450d-b24b-0cb1d2c4c25e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/skus/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus",
												":id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the SKU to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>"
									},
									"response": [
										{
											"id": "7302693b-9e28-4053-ba6a-5aa4a9ee723d",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the SKU to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"attributes\": \"<object>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"inventory\": {\n    \"type\": \"<string>\",\n    \"quantity\": \"<integer>\",\n    \"value\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"price\": \"<integer>\",\n  \"product\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"image\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"length\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"weight\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"width\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "335d7bd7-e75e-405c-ad05-00a2b2bc6872",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the SKU to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update SKU",
									"id": "f2182fd8-41dc-4c32-82ba-b6dbd5d9d60f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "active",
													"value": "true",
													"description": "Whether this SKU is available for purchase."
												},
												{
													"key": "attributes[anim_a9]",
													"value": "ut",
													"description": "A dictionary of attributes and values for the attributes defined by the product. When specified, `attributes` will partially update the existing attributes dictionary on the product, with the postcondition that a value must be present for each attribute key on the product, and that all SKUs for the product must have unique sets of attributes."
												},
												{
													"key": "attributes[exercitation_02]",
													"value": "labore non exercitation",
													"description": "A dictionary of attributes and values for the attributes defined by the product. When specified, `attributes` will partially update the existing attributes dictionary on the product, with the postcondition that a value must be present for each attribute key on the product, and that all SKUs for the product must have unique sets of attributes."
												},
												{
													"key": "currency",
													"value": "ex culpa consequat magna",
													"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
												},
												{
													"key": "expand[0]",
													"value": "quis sint magna est",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "pariatur enim aliqua dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "image",
													"value": "in dolor",
													"description": "The URL of an image for this SKU, meant to be displayable to the customer."
												},
												{
													"key": "inventory[quantity]",
													"value": "57462918",
													"description": "Description of the SKU's inventory."
												},
												{
													"key": "inventory[type]",
													"value": "finite",
													"description": "Description of the SKU's inventory."
												},
												{
													"key": "inventory[value]",
													"value": "in_stock",
													"description": "Description of the SKU's inventory."
												},
												{
													"key": "package_dimensions[height]",
													"value": "-82528316.3290246",
													"description": "The dimensions of this SKU for shipping purposes."
												},
												{
													"key": "package_dimensions[length]",
													"value": "52795051.657791644",
													"description": "The dimensions of this SKU for shipping purposes."
												},
												{
													"key": "package_dimensions[weight]",
													"value": "-72090183.45380324",
													"description": "The dimensions of this SKU for shipping purposes."
												},
												{
													"key": "package_dimensions[width]",
													"value": "14434050.36698389",
													"description": "The dimensions of this SKU for shipping purposes."
												},
												{
													"key": "price",
													"value": "15386860",
													"description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency)."
												},
												{
													"key": "product",
													"value": "cupidatat Excepteur adipisicing",
													"description": "The ID of the product that this SKU should belong to. The product must exist, have the same set of attribute names as the SKU's current product, and be of type `good`."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/skus/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>Note that a SKU’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>"
									},
									"response": [
										{
											"id": "bea2cbe4-1336-4a72-a569-e1de15caf11c",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether this SKU is available for purchase.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "A dictionary of attributes and values for the attributes defined by the product. When specified, `attributes` will partially update the existing attributes dictionary on the product, with the postcondition that a value must be present for each attribute key on the product, and that all SKUs for the product must have unique sets of attributes.",
															"key": "attributes[cupidatat_d]",
															"value": "<string>"
														},
														{
															"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The URL of an image for this SKU, meant to be displayable to the customer.",
															"key": "image",
															"value": "<string>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[quantity]",
															"value": "<integer>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[type]",
															"value": "<string>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[value]",
															"value": "<string>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[height]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[length]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[weight]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[width]",
															"value": "<number>"
														},
														{
															"description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency).",
															"key": "price",
															"value": "<integer>"
														},
														{
															"description": "The ID of the product that this SKU should belong to. The product must exist, have the same set of attribute names as the SKU's current product, and be of type `good`.",
															"key": "product",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"active\": \"<boolean>\",\n  \"attributes\": \"<object>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"inventory\": {\n    \"type\": \"<string>\",\n    \"quantity\": \"<integer>\",\n    \"value\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"price\": \"<integer>\",\n  \"product\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"image\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": \"<number>\",\n    \"length\": \"<number>\",\n    \"weight\": \"<number>\",\n    \"width\": \"<number>\"\n  }\n}"
										},
										{
											"id": "79f25f17-465a-4252-8402-3a5dc81d3fdd",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Whether this SKU is available for purchase.",
															"key": "active",
															"value": "<boolean>"
														},
														{
															"description": "A dictionary of attributes and values for the attributes defined by the product. When specified, `attributes` will partially update the existing attributes dictionary on the product, with the postcondition that a value must be present for each attribute key on the product, and that all SKUs for the product must have unique sets of attributes.",
															"key": "attributes[cupidatat_d]",
															"value": "<string>"
														},
														{
															"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
															"key": "currency",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The URL of an image for this SKU, meant to be displayable to the customer.",
															"key": "image",
															"value": "<string>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[quantity]",
															"value": "<integer>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[type]",
															"value": "<string>"
														},
														{
															"description": "Description of the SKU's inventory.",
															"key": "inventory[value]",
															"value": "<string>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[height]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[length]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[weight]",
															"value": "<number>"
														},
														{
															"description": "The dimensions of this SKU for shipping purposes.",
															"key": "package_dimensions[width]",
															"value": "<number>"
														},
														{
															"description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency).",
															"key": "price",
															"value": "<integer>"
														},
														{
															"description": "The ID of the product that this SKU should belong to. The product must exist, have the same set of attribute names as the SKU's current product, and be of type `good`.",
															"key": "product",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/skus/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"skus",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "3fb13010-81c0-446d-96a5-598017122f4f"
						},
						{
							"name": "All SK Us",
							"id": "9ea8adad-6af2-42d4-9dc0-caa1cbd5e56e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/skus?active=true&attributes[etf1_]=mi&attributes[commodo_6e9]=fugiat incididunt occaecat ad&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&ids[0]=enim Ut culpa ut&ids[1]=cupidatat ullamco esse&in_stock=true&limit=66746697&product=esse deserunt&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"skus"
									],
									"query": [
										{
											"key": "active",
											"value": "true",
											"description": "Only return SKUs that are active or inactive (e.g., pass `false` to list all inactive products)."
										},
										{
											"key": "attributes[etf1_]",
											"value": "mi",
											"description": "Only return SKUs that have the specified key/value pairs in this partially constructed dictionary. Can be specified only if `product` is also supplied. For instance, if the associated product has attributes `[\"color\", \"size\"]`, passing in `attributes[color]=red` returns all the SKUs for this product that have `color` set to `red`."
										},
										{
											"key": "attributes[commodo_6e9]",
											"value": "fugiat incididunt occaecat ad",
											"description": "Only return SKUs that have the specified key/value pairs in this partially constructed dictionary. Can be specified only if `product` is also supplied. For instance, if the associated product has attributes `[\"color\", \"size\"]`, passing in `attributes[color]=red` returns all the SKUs for this product that have `color` set to `red`."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "ids[0]",
											"value": "enim Ut culpa ut",
											"description": "Only return SKUs with the given IDs."
										},
										{
											"key": "ids[1]",
											"value": "cupidatat ullamco esse",
											"description": "Only return SKUs with the given IDs."
										},
										{
											"key": "in_stock",
											"value": "true",
											"description": "Only return SKUs that are either in stock or out of stock (e.g., pass `false` to list all SKUs that are out of stock). If no value is provided, all SKUs are returned."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "product",
											"value": "esse deserunt",
											"description": "The ID of the product whose SKUs will be retrieved. Must be a product with type `good`."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>"
							},
							"response": [
								{
									"id": "af047f1d-3394-4274-928b-3945587b7716",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/skus?active=<boolean>&attributes[dolor_d_8]=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&in_stock=<boolean>&limit=<integer>&product=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "attributes[dolor_d_8]",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "in_stock",
													"value": "<boolean>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "product",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"active\": \"<boolean>\",\n      \"attributes\": \"<object>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inventory\": {\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"price\": \"<integer>\",\n      \"product\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"image\": \"<string>\",\n      \"package_dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"attributes\": \"<object>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inventory\": {\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"value\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"price\": \"<integer>\",\n      \"product\": \"<string>\",\n      \"updated\": \"<unix-time>\",\n      \"image\": \"<string>\",\n      \"package_dimensions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "2177529c-a5b6-4144-ac1e-4d78fe83aae5",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/skus?active=<boolean>&attributes[dolor_d_8]=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&ids[0]=<string>&ids[1]=<string>&in_stock=<boolean>&limit=<integer>&product=<string>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "attributes[dolor_d_8]",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "ids[0]",
													"value": "<string>"
												},
												{
													"key": "ids[1]",
													"value": "<string>"
												},
												{
													"key": "in_stock",
													"value": "<boolean>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "product",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create SKU",
							"id": "8778c678-b5a1-40dc-bb6b-d3b2cadea093",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "currency",
											"value": "ullamco nostrud",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "inventory[quantity]",
											"value": "30930917",
											"description": "(Required) Description of the SKU's inventory."
										},
										{
											"key": "inventory[type]",
											"value": "infinite",
											"description": "(Required) Description of the SKU's inventory."
										},
										{
											"key": "inventory[value]",
											"value": "",
											"description": "(Required) Description of the SKU's inventory."
										},
										{
											"key": "price",
											"value": "67862454",
											"description": "(Required) The cost of the item as a nonnegative integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency)."
										},
										{
											"key": "product",
											"value": "cupidatat cillum",
											"description": "(Required) The ID of the product this SKU is associated with. Must be a product with type `good`."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Whether the SKU is available for purchase. Default to `true`."
										},
										{
											"key": "attributes[suntd97]",
											"value": "ea commodo in et",
											"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`."
										},
										{
											"key": "expand[0]",
											"value": "sed nisi",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "et dolor laboris ad ullamco",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "id",
											"value": "ad sed do",
											"description": "The identifier for the SKU. Must be unique. If not provided, an identifier will be randomly generated."
										},
										{
											"key": "image",
											"value": "esse nisi dolo",
											"description": "The URL of an image for this SKU, meant to be displayable to the customer."
										},
										{
											"key": "package_dimensions[height]",
											"value": "-52308044.45810398",
											"description": "The dimensions of this SKU for shipping purposes."
										},
										{
											"key": "package_dimensions[length]",
											"value": "-75342752.20749497",
											"description": "The dimensions of this SKU for shipping purposes."
										},
										{
											"key": "package_dimensions[weight]",
											"value": "-2719571.5457457155",
											"description": "The dimensions of this SKU for shipping purposes."
										},
										{
											"key": "package_dimensions[width]",
											"value": "49621430.836194426",
											"description": "The dimensions of this SKU for shipping purposes."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/skus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"skus"
									]
								},
								"description": "<p>Creates a new SKU associated with a product.</p>"
							},
							"response": [
								{
									"id": "a0e262b2-3088-4c0b-abe6-0fbec1527e86",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[quantity]",
													"value": "<integer>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[type]",
													"value": "<string>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[value]",
													"value": "<string>"
												},
												{
													"description": "(Required) The cost of the item as a nonnegative integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency).",
													"key": "price",
													"value": "<integer>"
												},
												{
													"description": "(Required) The ID of the product this SKU is associated with. Must be a product with type `good`.",
													"key": "product",
													"value": "<string>"
												},
												{
													"description": "Whether the SKU is available for purchase. Default to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[Lorem_80]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[Duis6]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[incididuntada]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[dolor_9ed]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The identifier for the SKU. Must be unique. If not provided, an identifier will be randomly generated.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The URL of an image for this SKU, meant to be displayable to the customer.",
													"key": "image",
													"value": "<string>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[height]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[length]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[weight]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[width]",
													"value": "<number>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/skus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"active\": \"<boolean>\",\n  \"attributes\": \"<object>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"inventory\": {\n    \"type\": \"<string>\",\n    \"quantity\": \"<integer>\",\n    \"value\": \"<string>\"\n  },\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"price\": \"<integer>\",\n  \"product\": \"<string>\",\n  \"updated\": \"<unix-time>\",\n  \"image\": \"<string>\",\n  \"package_dimensions\": {\n    \"height\": \"<number>\",\n    \"length\": \"<number>\",\n    \"weight\": \"<number>\",\n    \"width\": \"<number>\"\n  }\n}"
								},
								{
									"id": "6271cb8d-3d29-413d-978b-36f89cc75add",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[quantity]",
													"value": "<integer>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[type]",
													"value": "<string>"
												},
												{
													"description": "(Required) Description of the SKU's inventory.",
													"key": "inventory[value]",
													"value": "<string>"
												},
												{
													"description": "(Required) The cost of the item as a nonnegative integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency).",
													"key": "price",
													"value": "<integer>"
												},
												{
													"description": "(Required) The ID of the product this SKU is associated with. Must be a product with type `good`.",
													"key": "product",
													"value": "<string>"
												},
												{
													"description": "Whether the SKU is available for purchase. Default to `true`.",
													"key": "active",
													"value": "<boolean>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[Lorem_80]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[Duis6]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[incididuntada]",
													"value": "<string>"
												},
												{
													"description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
													"key": "attributes[dolor_9ed]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The identifier for the SKU. Must be unique. If not provided, an identifier will be randomly generated.",
													"key": "id",
													"value": "<string>"
												},
												{
													"description": "The URL of an image for this SKU, meant to be displayable to the customer.",
													"key": "image",
													"value": "<string>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[height]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[length]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[weight]",
													"value": "<number>"
												},
												{
													"description": "The dimensions of this SKU for shipping purposes.",
													"key": "package_dimensions[width]",
													"value": "<number>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/skus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"skus"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "559a495d-c889-4bf3-848d-f26ae85ffd48"
				},
				{
					"name": "sources",
					"item": [
						{
							"name": "{source}",
							"item": [
								{
									"name": "source_transactions",
									"item": [
										{
											"name": "Apms Sources Source Transaction All",
											"id": "417b552f-8e94-4884-98a2-3d6667e5e3d2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/source_transactions?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"source_transactions"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
														},
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "limit",
															"value": "66746697",
															"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
														},
														{
															"key": "starting_after",
															"value": "esse deserunt",
															"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the source whose source transactions will be retrieved."
														}
													]
												}
											},
											"response": [
												{
													"id": "2d4b34c6-04e1-4042-bdbf-4545952f6a90",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/sources/:source/source_transactions?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"sources",
																":source",
																"source_transactions"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "source",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source whose source transactions will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"source\": \"<string>\",\n      \"type\": \"<string>\",\n      \"ach_credit_transfer\": {\n        \"account_number\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"routing_number\": \"<string>\",\n        \"swift_code\": \"<string>\"\n      },\n      \"ach_debit\": {\n        \"bank_name\": \"<string>\",\n        \"country\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"routing_number\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"alipay\": {\n        \"data_string\": \"<string>\",\n        \"native_url\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"bancontact\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"preferred_language\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"card\": {\n        \"address_line1_check\": \"<string>\",\n        \"address_zip_check\": \"<string>\",\n        \"brand\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"cvc_check\": \"<string>\",\n        \"dynamic_last4\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"skip_validation\": \"<boolean>\",\n        \"three_d_secure\": \"<string>\",\n        \"tokenization_method\": \"<string>\"\n      },\n      \"card_present\": {\n        \"application_cryptogram\": \"<string>\",\n        \"application_preferred_name\": \"<string>\",\n        \"application_preferred_name_encoding\": \"<string>\",\n        \"authorization_response_code\": \"<string>\",\n        \"brand\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"cvm_type\": \"<string>\",\n        \"data_type\": \"<string>\",\n        \"dedicated_file_name\": \"<string>\",\n        \"emv_auth_data\": \"<string>\",\n        \"evidence_customer_signature\": \"<string>\",\n        \"evidence_transaction_certificate\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"mid\": \"<string>\",\n        \"pos_device_id\": \"<string>\",\n        \"pos_entry_mode\": \"<string>\",\n        \"read_method\": \"<string>\",\n        \"reader\": \"<string>\",\n        \"terminal_verification_results\": \"<string>\",\n        \"tid\": \"<string>\",\n        \"transaction_status_information\": \"<string>\"\n      },\n      \"eps\": {\n        \"reference\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"giropay\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"ideal\": {\n        \"bank\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"multibanco\": {\n        \"entity\": \"<string>\",\n        \"reference\": \"<string>\",\n        \"refund_account_holder_address_city\": \"<string>\",\n        \"refund_account_holder_address_country\": \"<string>\",\n        \"refund_account_holder_address_line1\": \"<string>\",\n        \"refund_account_holder_address_line2\": \"<string>\",\n        \"refund_account_holder_address_postal_code\": \"<string>\",\n        \"refund_account_holder_address_state\": \"<string>\",\n        \"refund_account_holder_name\": \"<string>\",\n        \"refund_iban\": \"<string>\"\n      },\n      \"p24\": {\n        \"reference\": \"<string>\"\n      },\n      \"paper_check\": {\n        \"mailing_address_city\": \"<string>\",\n        \"mailing_address_country\": \"<string>\",\n        \"mailing_address_line1\": \"<string>\",\n        \"mailing_address_line2\": \"<string>\",\n        \"mailing_address_postal_code\": \"<string>\",\n        \"mailing_address_state\": \"<string>\"\n      },\n      \"sepa_credit_transfer\": {\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban\": \"<string>\",\n        \"refund_account_holder_address_city\": \"<string>\",\n        \"refund_account_holder_address_country\": \"<string>\",\n        \"refund_account_holder_address_line1\": \"<string>\",\n        \"refund_account_holder_address_line2\": \"<string>\",\n        \"refund_account_holder_address_postal_code\": \"<string>\",\n        \"refund_account_holder_address_state\": \"<string>\",\n        \"refund_account_holder_name\": \"<string>\",\n        \"refund_iban\": \"<string>\"\n      },\n      \"sepa_debit\": {\n        \"bank_code\": \"<string>\",\n        \"branch_code\": \"<string>\",\n        \"country\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"mandate_reference\": \"<string>\",\n        \"mandate_url\": \"<string>\",\n        \"skip_validation\": \"<boolean>\"\n      },\n      \"sofort\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"country\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"preferred_language\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"three_d_secure\": {\n        \"address_line1_check\": \"<string>\",\n        \"address_zip_check\": \"<string>\",\n        \"authenticated\": \"<boolean>\",\n        \"brand\": \"<string>\",\n        \"card\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"customer\": \"<string>\",\n        \"cvc_check\": \"<string>\",\n        \"dynamic_last4\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"skip_validation\": \"<boolean>\",\n        \"three_d_secure\": \"<string>\",\n        \"tokenization_method\": \"<string>\"\n      }\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"object\": \"<string>\",\n      \"source\": \"<string>\",\n      \"type\": \"<string>\",\n      \"ach_credit_transfer\": {\n        \"account_number\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"routing_number\": \"<string>\",\n        \"swift_code\": \"<string>\"\n      },\n      \"ach_debit\": {\n        \"bank_name\": \"<string>\",\n        \"country\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"routing_number\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"alipay\": {\n        \"data_string\": \"<string>\",\n        \"native_url\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"bancontact\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"preferred_language\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"card\": {\n        \"address_line1_check\": \"<string>\",\n        \"address_zip_check\": \"<string>\",\n        \"brand\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"cvc_check\": \"<string>\",\n        \"dynamic_last4\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"skip_validation\": \"<boolean>\",\n        \"three_d_secure\": \"<string>\",\n        \"tokenization_method\": \"<string>\"\n      },\n      \"card_present\": {\n        \"application_cryptogram\": \"<string>\",\n        \"application_preferred_name\": \"<string>\",\n        \"application_preferred_name_encoding\": \"<string>\",\n        \"authorization_response_code\": \"<string>\",\n        \"brand\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"cvm_type\": \"<string>\",\n        \"data_type\": \"<string>\",\n        \"dedicated_file_name\": \"<string>\",\n        \"emv_auth_data\": \"<string>\",\n        \"evidence_customer_signature\": \"<string>\",\n        \"evidence_transaction_certificate\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"mid\": \"<string>\",\n        \"pos_device_id\": \"<string>\",\n        \"pos_entry_mode\": \"<string>\",\n        \"read_method\": \"<string>\",\n        \"reader\": \"<string>\",\n        \"terminal_verification_results\": \"<string>\",\n        \"tid\": \"<string>\",\n        \"transaction_status_information\": \"<string>\"\n      },\n      \"eps\": {\n        \"reference\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"giropay\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"ideal\": {\n        \"bank\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"multibanco\": {\n        \"entity\": \"<string>\",\n        \"reference\": \"<string>\",\n        \"refund_account_holder_address_city\": \"<string>\",\n        \"refund_account_holder_address_country\": \"<string>\",\n        \"refund_account_holder_address_line1\": \"<string>\",\n        \"refund_account_holder_address_line2\": \"<string>\",\n        \"refund_account_holder_address_postal_code\": \"<string>\",\n        \"refund_account_holder_address_state\": \"<string>\",\n        \"refund_account_holder_name\": \"<string>\",\n        \"refund_iban\": \"<string>\"\n      },\n      \"p24\": {\n        \"reference\": \"<string>\"\n      },\n      \"paper_check\": {\n        \"mailing_address_city\": \"<string>\",\n        \"mailing_address_country\": \"<string>\",\n        \"mailing_address_line1\": \"<string>\",\n        \"mailing_address_line2\": \"<string>\",\n        \"mailing_address_postal_code\": \"<string>\",\n        \"mailing_address_state\": \"<string>\"\n      },\n      \"sepa_credit_transfer\": {\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"iban\": \"<string>\",\n        \"refund_account_holder_address_city\": \"<string>\",\n        \"refund_account_holder_address_country\": \"<string>\",\n        \"refund_account_holder_address_line1\": \"<string>\",\n        \"refund_account_holder_address_line2\": \"<string>\",\n        \"refund_account_holder_address_postal_code\": \"<string>\",\n        \"refund_account_holder_address_state\": \"<string>\",\n        \"refund_account_holder_name\": \"<string>\",\n        \"refund_iban\": \"<string>\"\n      },\n      \"sepa_debit\": {\n        \"bank_code\": \"<string>\",\n        \"branch_code\": \"<string>\",\n        \"country\": \"<string>\",\n        \"fingerprint\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"mandate_reference\": \"<string>\",\n        \"mandate_url\": \"<string>\",\n        \"skip_validation\": \"<boolean>\"\n      },\n      \"sofort\": {\n        \"bank_code\": \"<string>\",\n        \"bank_name\": \"<string>\",\n        \"bic\": \"<string>\",\n        \"country\": \"<string>\",\n        \"iban_last4\": \"<string>\",\n        \"preferred_language\": \"<string>\",\n        \"statement_descriptor\": \"<string>\"\n      },\n      \"three_d_secure\": {\n        \"address_line1_check\": \"<string>\",\n        \"address_zip_check\": \"<string>\",\n        \"authenticated\": \"<boolean>\",\n        \"brand\": \"<string>\",\n        \"card\": \"<string>\",\n        \"card_automatically_updated\": \"<boolean>\",\n        \"country\": \"<string>\",\n        \"customer\": \"<string>\",\n        \"cvc_check\": \"<string>\",\n        \"dynamic_last4\": \"<string>\",\n        \"exp_month\": \"<integer>\",\n        \"exp_year\": \"<integer>\",\n        \"fingerprint\": \"<string>\",\n        \"funding\": \"<string>\",\n        \"last4\": \"<string>\",\n        \"name\": \"<string>\",\n        \"skip_validation\": \"<boolean>\",\n        \"three_d_secure\": \"<string>\",\n        \"tokenization_method\": \"<string>\"\n      }\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
												},
												{
													"id": "2ed3510d-2f18-41da-80ca-96ae1a55d7ef",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/sources/:source/source_transactions?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"sources",
																":source",
																"source_transactions"
															],
															"query": [
																{
																	"key": "ending_before",
																	"value": "<string>"
																},
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																},
																{
																	"key": "limit",
																	"value": "<integer>"
																},
																{
																	"key": "starting_after",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "source",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source whose source transactions will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Apms Sources Source Transaction Retrieve",
											"id": "4b69e08b-3c64-4683-88ed-82326b5f0325",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/source_transactions/:source_transaction?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"source_transactions",
														":source_transaction"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the source whose source transaction will be retrieved."
														},
														{
															"key": "source_transaction",
															"value": "esse deserunt",
															"description": "(Required) The ID of the source transaction that will be retrieved."
														}
													]
												},
												"description": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>"
											},
											"response": [
												{
													"id": "103f6f02-7543-4d4f-82f3-95e4d14838f3",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/sources/:source/source_transactions/:source_transaction?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"sources",
																":source",
																"source_transactions",
																":source_transaction"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "source",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source whose source transaction will be retrieved."
																},
																{
																	"key": "source_transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source transaction that will be retrieved."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"source\": \"<string>\",\n  \"type\": \"<string>\",\n  \"ach_credit_transfer\": {\n    \"account_number\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"swift_code\": \"<string>\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"alipay\": {\n    \"data_string\": \"<string>\",\n    \"native_url\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"bancontact\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"<string>\",\n    \"application_preferred_name\": \"<string>\",\n    \"application_preferred_name_encoding\": \"<string>\",\n    \"authorization_response_code\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvm_type\": \"<string>\",\n    \"data_type\": \"<string>\",\n    \"dedicated_file_name\": \"<string>\",\n    \"emv_auth_data\": \"<string>\",\n    \"evidence_customer_signature\": \"<string>\",\n    \"evidence_transaction_certificate\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mid\": \"<string>\",\n    \"pos_device_id\": \"<string>\",\n    \"pos_entry_mode\": \"<string>\",\n    \"read_method\": \"<string>\",\n    \"reader\": \"<string>\",\n    \"terminal_verification_results\": \"<string>\",\n    \"tid\": \"<string>\",\n    \"transaction_status_information\": \"<string>\"\n  },\n  \"eps\": {\n    \"reference\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"giropay\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"ideal\": {\n    \"bank\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"multibanco\": {\n    \"entity\": \"<string>\",\n    \"reference\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"p24\": {\n    \"reference\": \"<string>\"\n  },\n  \"paper_check\": {\n    \"mailing_address_city\": \"<string>\",\n    \"mailing_address_country\": \"<string>\",\n    \"mailing_address_line1\": \"<string>\",\n    \"mailing_address_line2\": \"<string>\",\n    \"mailing_address_postal_code\": \"<string>\",\n    \"mailing_address_state\": \"<string>\"\n  },\n  \"sepa_credit_transfer\": {\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"<string>\",\n    \"branch_code\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mandate_reference\": \"<string>\",\n    \"mandate_url\": \"<string>\",\n    \"skip_validation\": \"<boolean>\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"country\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"three_d_secure\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"authenticated\": \"<boolean>\",\n    \"brand\": \"<string>\",\n    \"card\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  }\n}"
												},
												{
													"id": "79704483-c4ef-4d2a-b341-362970273476",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/sources/:source/source_transactions/:source_transaction?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"sources",
																":source",
																"source_transactions",
																":source_transaction"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "source",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source whose source transaction will be retrieved."
																},
																{
																	"key": "source_transaction",
																	"value": "esse deserunt",
																	"description": "(Required) The ID of the source transaction that will be retrieved."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "e0881243-fc7c-4529-bc90-d203ba5173ad"
								},
								{
									"name": "Apms Sources Source Retrieve",
									"id": "73557948-66fe-49a7-b9f9-dd0191d37ac0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sources/:source?client_secret=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources",
												":source"
											],
											"query": [
												{
													"key": "client_secret",
													"value": "esse deserunt",
													"description": "The client secret of the source. Required if a publishable key is used to retrieve the source."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the source to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>"
									},
									"response": [
										{
											"id": "13192e42-7b1e-4eba-9530-f6ee58f52313",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source?client_secret=<string>&expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source"
													],
													"query": [
														{
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the source to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"client_secret\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"flow\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"ach_credit_transfer\": {\n    \"account_number\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"swift_code\": \"<string>\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"alipay\": {\n    \"data_string\": \"<string>\",\n    \"native_url\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"amount\": \"<integer>\",\n  \"bancontact\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"<string>\",\n    \"application_preferred_name\": \"<string>\",\n    \"application_preferred_name_encoding\": \"<string>\",\n    \"authorization_response_code\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvm_type\": \"<string>\",\n    \"data_type\": \"<string>\",\n    \"dedicated_file_name\": \"<string>\",\n    \"emv_auth_data\": \"<string>\",\n    \"evidence_customer_signature\": \"<string>\",\n    \"evidence_transaction_certificate\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mid\": \"<string>\",\n    \"pos_device_id\": \"<string>\",\n    \"pos_entry_mode\": \"<string>\",\n    \"read_method\": \"<string>\",\n    \"reader\": \"<string>\",\n    \"terminal_verification_results\": \"<string>\",\n    \"tid\": \"<string>\",\n    \"transaction_status_information\": \"<string>\"\n  },\n  \"code_verification\": {\n    \"attempts_remaining\": \"<integer>\",\n    \"status\": \"<string>\"\n  },\n  \"currency\": \"<string>\",\n  \"eps\": {\n    \"reference\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"giropay\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"ideal\": {\n    \"bank\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"multibanco\": {\n    \"entity\": \"<string>\",\n    \"reference\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"owner\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"verified_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"verified_email\": \"<string>\",\n    \"verified_name\": \"<string>\",\n    \"verified_phone\": \"<string>\"\n  },\n  \"p24\": {\n    \"reference\": \"<string>\"\n  },\n  \"paper_check\": {\n    \"mailing_address_city\": \"<string>\",\n    \"mailing_address_country\": \"<string>\",\n    \"mailing_address_line1\": \"<string>\",\n    \"mailing_address_line2\": \"<string>\",\n    \"mailing_address_postal_code\": \"<string>\",\n    \"mailing_address_state\": \"<string>\"\n  },\n  \"receiver\": {\n    \"amount_charged\": \"<integer>\",\n    \"amount_received\": \"<integer>\",\n    \"amount_returned\": \"<integer>\",\n    \"address\": \"<string>\"\n  },\n  \"redirect\": {\n    \"return_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"url\": \"<string>\",\n    \"failure_reason\": \"<string>\"\n  },\n  \"sepa_credit_transfer\": {\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"<string>\",\n    \"branch_code\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mandate_reference\": \"<string>\",\n    \"mandate_url\": \"<string>\",\n    \"skip_validation\": \"<boolean>\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"country\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"statement_descriptor\": \"<string>\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"authenticated\": \"<boolean>\",\n    \"brand\": \"<string>\",\n    \"card\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"usage\": \"<string>\"\n}"
										},
										{
											"id": "856f1d72-ba4c-4873-9d3e-64ba21810b75",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source?client_secret=<string>&expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source"
													],
													"query": [
														{
															"key": "client_secret",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the source to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Apms Sources Source Update",
									"id": "c98acbff-3e22-464e-a8b4-b60b2464461a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "officia nisi",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "incididunt dolore ea",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "mandate[acceptance][date]",
													"value": "17786863",
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
												},
												{
													"key": "mandate[acceptance][ip]",
													"value": "in officia est",
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
												},
												{
													"key": "mandate[acceptance][status]",
													"value": "refused",
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
												},
												{
													"key": "mandate[acceptance][user_agent]",
													"value": "labore veniam",
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
												},
												{
													"key": "mandate[notification_method]",
													"value": "manual",
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
												},
												{
													"key": "owner[address][city]",
													"value": "labo",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[address][country]",
													"value": "ad anim voluptate",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[address][line1]",
													"value": "dolore irure do",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[address][line2]",
													"value": "dolor aute",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[address][postal_code]",
													"value": "non qui deserunt cupidatat",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[address][state]",
													"value": "est",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[email]",
													"value": "qui proident esse",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[name]",
													"value": "esse fugiat",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												},
												{
													"key": "owner[phone]",
													"value": "tempor enim sint",
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sources/:source",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources",
												":source"
											],
											"variable": [
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>"
									},
									"response": [
										{
											"id": "3a6c68ad-9b16-47be-83b8-7f7d8eb5dcc1",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][date]",
															"value": "<unix-time>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][ip]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][status]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][user_agent]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[notification_method]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[email]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[name]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[phone]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source"
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"client_secret\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"flow\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"ach_credit_transfer\": {\n    \"account_number\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"swift_code\": \"<string>\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"alipay\": {\n    \"data_string\": \"<string>\",\n    \"native_url\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"amount\": \"<integer>\",\n  \"bancontact\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"<string>\",\n    \"application_preferred_name\": \"<string>\",\n    \"application_preferred_name_encoding\": \"<string>\",\n    \"authorization_response_code\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvm_type\": \"<string>\",\n    \"data_type\": \"<string>\",\n    \"dedicated_file_name\": \"<string>\",\n    \"emv_auth_data\": \"<string>\",\n    \"evidence_customer_signature\": \"<string>\",\n    \"evidence_transaction_certificate\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mid\": \"<string>\",\n    \"pos_device_id\": \"<string>\",\n    \"pos_entry_mode\": \"<string>\",\n    \"read_method\": \"<string>\",\n    \"reader\": \"<string>\",\n    \"terminal_verification_results\": \"<string>\",\n    \"tid\": \"<string>\",\n    \"transaction_status_information\": \"<string>\"\n  },\n  \"code_verification\": {\n    \"attempts_remaining\": \"<integer>\",\n    \"status\": \"<string>\"\n  },\n  \"currency\": \"<string>\",\n  \"eps\": {\n    \"reference\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"giropay\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"ideal\": {\n    \"bank\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"multibanco\": {\n    \"entity\": \"<string>\",\n    \"reference\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"owner\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"verified_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"verified_email\": \"<string>\",\n    \"verified_name\": \"<string>\",\n    \"verified_phone\": \"<string>\"\n  },\n  \"p24\": {\n    \"reference\": \"<string>\"\n  },\n  \"paper_check\": {\n    \"mailing_address_city\": \"<string>\",\n    \"mailing_address_country\": \"<string>\",\n    \"mailing_address_line1\": \"<string>\",\n    \"mailing_address_line2\": \"<string>\",\n    \"mailing_address_postal_code\": \"<string>\",\n    \"mailing_address_state\": \"<string>\"\n  },\n  \"receiver\": {\n    \"amount_charged\": \"<integer>\",\n    \"amount_received\": \"<integer>\",\n    \"amount_returned\": \"<integer>\",\n    \"address\": \"<string>\"\n  },\n  \"redirect\": {\n    \"return_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"url\": \"<string>\",\n    \"failure_reason\": \"<string>\"\n  },\n  \"sepa_credit_transfer\": {\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"<string>\",\n    \"branch_code\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mandate_reference\": \"<string>\",\n    \"mandate_url\": \"<string>\",\n    \"skip_validation\": \"<boolean>\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"country\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"statement_descriptor\": \"<string>\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"authenticated\": \"<boolean>\",\n    \"brand\": \"<string>\",\n    \"card\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"usage\": \"<string>\"\n}"
										},
										{
											"id": "c9225bd2-f96d-4f65-a7d5-4ac8a3f14fd9",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][date]",
															"value": "<unix-time>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][ip]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][status]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[acceptance][user_agent]",
															"value": "<string>"
														},
														{
															"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
															"key": "mandate[notification_method]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][city]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][country]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][line1]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][line2]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][postal_code]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[address][state]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[email]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[name]",
															"value": "<string>"
														},
														{
															"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
															"key": "owner[phone]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source"
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Apms Sources Source Mandate Notification Retrieve",
									"id": "feb589fe-b244-44b6-8071-c49e08362d4c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sources/:source/mandate_notifications/:mandate_notification?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources",
												":source",
												"mandate_notifications",
												":mandate_notification"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "mandate_notification",
													"value": "esse deserunt",
													"description": "(Required) The ID of the Source MandateNotification."
												},
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "(Required) The ID of the Source that received a ManateNotification."
												}
											]
										},
										"description": "<p>Retrieves a new Source MandateNotification.</p>"
									},
									"response": [
										{
											"id": "c95060a2-438f-4c29-84b7-bc0cc9d9e3c4",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/mandate_notifications/:mandate_notification?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"mandate_notifications",
														":mandate_notification"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "mandate_notification",
															"value": "esse deserunt",
															"description": "(Required) The ID of the Source MandateNotification."
														},
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the Source that received a ManateNotification."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"reason\": \"<string>\",\n  \"source\": {\n    \"client_secret\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"flow\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ach_credit_transfer\": {\n      \"account_number\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"swift_code\": \"<string>\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"alipay\": {\n      \"data_string\": \"<string>\",\n      \"native_url\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"amount\": \"<integer>\",\n    \"bancontact\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"<string>\",\n      \"application_preferred_name\": \"<string>\",\n      \"application_preferred_name_encoding\": \"<string>\",\n      \"authorization_response_code\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvm_type\": \"<string>\",\n      \"data_type\": \"<string>\",\n      \"dedicated_file_name\": \"<string>\",\n      \"emv_auth_data\": \"<string>\",\n      \"evidence_customer_signature\": \"<string>\",\n      \"evidence_transaction_certificate\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mid\": \"<string>\",\n      \"pos_device_id\": \"<string>\",\n      \"pos_entry_mode\": \"<string>\",\n      \"read_method\": \"<string>\",\n      \"reader\": \"<string>\",\n      \"terminal_verification_results\": \"<string>\",\n      \"tid\": \"<string>\",\n      \"transaction_status_information\": \"<string>\"\n    },\n    \"code_verification\": {\n      \"attempts_remaining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"currency\": \"<string>\",\n    \"eps\": {\n      \"reference\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"giropay\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"ideal\": {\n      \"bank\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"metadata\": \"<object>\",\n    \"multibanco\": {\n      \"entity\": \"<string>\",\n      \"reference\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"owner\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"p24\": {\n      \"reference\": \"<string>\"\n    },\n    \"paper_check\": {\n      \"mailing_address_city\": \"<string>\",\n      \"mailing_address_country\": \"<string>\",\n      \"mailing_address_line1\": \"<string>\",\n      \"mailing_address_line2\": \"<string>\",\n      \"mailing_address_postal_code\": \"<string>\",\n      \"mailing_address_state\": \"<string>\"\n    },\n    \"receiver\": {\n      \"amount_charged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_received\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_returned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"redirect\": {\n      \"return_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failure_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sepa_credit_transfer\": {\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"<string>\",\n      \"branch_code\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mandate_reference\": \"<string>\",\n      \"mandate_url\": \"<string>\",\n      \"skip_validation\": \"<boolean>\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"country\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"statement_descriptor\": \"<string>\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"authenticated\": \"<boolean>\",\n      \"brand\": \"<string>\",\n      \"card\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"usage\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<integer>\"\n}"
										},
										{
											"id": "85d0d884-52a4-41b9-8882-b56c556ff1f1",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/mandate_notifications/:mandate_notification?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"mandate_notifications",
														":mandate_notification"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "mandate_notification",
															"value": "esse deserunt",
															"description": "(Required) The ID of the Source MandateNotification."
														},
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the Source that received a ManateNotification."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Apms Sources Source Verify",
									"id": "7e066e3a-d6ac-4275-8532-20e83492fa81",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "values[0]",
													"value": "aute ulla",
													"description": "(Required) The values needed to verify the source."
												},
												{
													"key": "values[1]",
													"value": "incididunt minim consectetur",
													"description": "(Required) The values needed to verify the source."
												},
												{
													"key": "expand[0]",
													"value": "sit tempor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Lorem",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sources/:source/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources",
												":source",
												"verify"
											],
											"variable": [
												{
													"key": "source",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired source."
												}
											]
										}
									},
									"response": [
										{
											"id": "16562073-2af5-4e8d-9760-699be25b1818",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The values needed to verify the source.",
															"key": "values[0]",
															"value": "<string>"
														},
														{
															"description": "(Required) The values needed to verify the source.",
															"key": "values[1]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"verify"
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired source."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"client_secret\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"flow\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"ach_credit_transfer\": {\n    \"account_number\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"swift_code\": \"<string>\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"alipay\": {\n    \"data_string\": \"<string>\",\n    \"native_url\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"amount\": \"<integer>\",\n  \"bancontact\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"<string>\",\n    \"application_preferred_name\": \"<string>\",\n    \"application_preferred_name_encoding\": \"<string>\",\n    \"authorization_response_code\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvm_type\": \"<string>\",\n    \"data_type\": \"<string>\",\n    \"dedicated_file_name\": \"<string>\",\n    \"emv_auth_data\": \"<string>\",\n    \"evidence_customer_signature\": \"<string>\",\n    \"evidence_transaction_certificate\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mid\": \"<string>\",\n    \"pos_device_id\": \"<string>\",\n    \"pos_entry_mode\": \"<string>\",\n    \"read_method\": \"<string>\",\n    \"reader\": \"<string>\",\n    \"terminal_verification_results\": \"<string>\",\n    \"tid\": \"<string>\",\n    \"transaction_status_information\": \"<string>\"\n  },\n  \"code_verification\": {\n    \"attempts_remaining\": \"<integer>\",\n    \"status\": \"<string>\"\n  },\n  \"currency\": \"<string>\",\n  \"eps\": {\n    \"reference\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"giropay\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"ideal\": {\n    \"bank\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"multibanco\": {\n    \"entity\": \"<string>\",\n    \"reference\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"owner\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"verified_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"verified_email\": \"<string>\",\n    \"verified_name\": \"<string>\",\n    \"verified_phone\": \"<string>\"\n  },\n  \"p24\": {\n    \"reference\": \"<string>\"\n  },\n  \"paper_check\": {\n    \"mailing_address_city\": \"<string>\",\n    \"mailing_address_country\": \"<string>\",\n    \"mailing_address_line1\": \"<string>\",\n    \"mailing_address_line2\": \"<string>\",\n    \"mailing_address_postal_code\": \"<string>\",\n    \"mailing_address_state\": \"<string>\"\n  },\n  \"receiver\": {\n    \"amount_charged\": \"<integer>\",\n    \"amount_received\": \"<integer>\",\n    \"amount_returned\": \"<integer>\",\n    \"address\": \"<string>\"\n  },\n  \"redirect\": {\n    \"return_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"url\": \"<string>\",\n    \"failure_reason\": \"<string>\"\n  },\n  \"sepa_credit_transfer\": {\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"<string>\",\n    \"branch_code\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mandate_reference\": \"<string>\",\n    \"mandate_url\": \"<string>\",\n    \"skip_validation\": \"<boolean>\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"country\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"statement_descriptor\": \"<string>\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"authenticated\": \"<boolean>\",\n    \"brand\": \"<string>\",\n    \"card\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"usage\": \"<string>\"\n}"
										},
										{
											"id": "e6bf5373-1fce-45f0-a037-c6c9dad7c43d",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "(Required) The values needed to verify the source.",
															"key": "values[0]",
															"value": "<string>"
														},
														{
															"description": "(Required) The values needed to verify the source.",
															"key": "values[1]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sources/:source/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sources",
														":source",
														"verify"
													],
													"variable": [
														{
															"key": "source",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired source."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "4920a752-cf90-4846-90a4-0e4553a42dca"
						},
						{
							"name": "Create Source",
							"id": "2184c2fa-069a-463e-89d0-e9739234a64a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "10320014",
											"description": "Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources."
										},
										{
											"key": "currency",
											"value": "nostrud deserunt enim aliqua",
											"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready."
										},
										{
											"key": "customer",
											"value": "et enim incididunt",
											"description": "The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`)."
										},
										{
											"key": "expand[0]",
											"value": "enim qui laboris nulla",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "esse aliquip",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "flow",
											"value": "receiver",
											"description": "The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows."
										},
										{
											"key": "mandate[acceptance][date]",
											"value": "21600069",
											"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
										},
										{
											"key": "mandate[acceptance][ip]",
											"value": "ut dolor",
											"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
										},
										{
											"key": "mandate[acceptance][status]",
											"value": "refused",
											"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
										},
										{
											"key": "mandate[acceptance][user_agent]",
											"value": "nisi cupidatat",
											"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
										},
										{
											"key": "mandate[notification_method]",
											"value": "manual",
											"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status."
										},
										{
											"key": "original_source",
											"value": "aliqua aute",
											"description": "The source to share."
										},
										{
											"key": "owner[address][city]",
											"value": "minim Excepteur",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[address][country]",
											"value": "incididunt esse",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[address][line1]",
											"value": "magna dolor sunt nulla",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[address][line2]",
											"value": "labore ipsum sint pariatur",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[address][postal_code]",
											"value": "sint tempor dolore amet",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[address][state]",
											"value": "nostrud commodo",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[email]",
											"value": "ullamco",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[name]",
											"value": "adipisicing deserunt id veniam et",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "owner[phone]",
											"value": "proident id sunt mollit",
											"description": "Information about the owner of the payment instrument that may be used or required by particular source types."
										},
										{
											"key": "receiver[refund_attributes_method]",
											"value": "manual",
											"description": "Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`)."
										},
										{
											"key": "redirect[return_url]",
											"value": "Ut enim anim",
											"description": "Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`)."
										},
										{
											"key": "statement_descriptor",
											"value": "sit enim aute eiusmod",
											"description": "An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all."
										},
										{
											"key": "token",
											"value": "occaecat",
											"description": "An optional token used to create the source. When passed, token properties will override source parameters."
										},
										{
											"key": "type",
											"value": "ea consequat et amet",
											"description": "The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Shared card Sources](/docs/sources/connect#shared-card-sources) guide)"
										},
										{
											"key": "usage",
											"value": "single_use"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sources"
									]
								},
								"description": "<p>Creates a new source object.</p>"
							},
							"response": [
								{
									"id": "63bcda61-2da4-4e8f-b532-32e84a898c9f",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.",
													"key": "flow",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][date]",
													"value": "<unix-time>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][ip]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][status]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][user_agent]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[notification_method]",
													"value": "<string>"
												},
												{
													"description": "The source to share.",
													"key": "original_source",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[email]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[name]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[phone]",
													"value": "<string>"
												},
												{
													"description": "Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).",
													"key": "receiver[refund_attributes_method]",
													"value": "<string>"
												},
												{
													"description": "Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).",
													"key": "redirect[return_url]",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "An optional token used to create the source. When passed, token properties will override source parameters.",
													"key": "token",
													"value": "<string>"
												},
												{
													"description": "The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Shared card Sources](/docs/sources/connect#shared-card-sources) guide)",
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "usage",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"client_secret\": \"<string>\",\n  \"created\": \"<unix-time>\",\n  \"flow\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"ach_credit_transfer\": {\n    \"account_number\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"swift_code\": \"<string>\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"routing_number\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"alipay\": {\n    \"data_string\": \"<string>\",\n    \"native_url\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"amount\": \"<integer>\",\n  \"bancontact\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"<string>\",\n    \"application_preferred_name\": \"<string>\",\n    \"application_preferred_name_encoding\": \"<string>\",\n    \"authorization_response_code\": \"<string>\",\n    \"brand\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"cvm_type\": \"<string>\",\n    \"data_type\": \"<string>\",\n    \"dedicated_file_name\": \"<string>\",\n    \"emv_auth_data\": \"<string>\",\n    \"evidence_customer_signature\": \"<string>\",\n    \"evidence_transaction_certificate\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mid\": \"<string>\",\n    \"pos_device_id\": \"<string>\",\n    \"pos_entry_mode\": \"<string>\",\n    \"read_method\": \"<string>\",\n    \"reader\": \"<string>\",\n    \"terminal_verification_results\": \"<string>\",\n    \"tid\": \"<string>\",\n    \"transaction_status_information\": \"<string>\"\n  },\n  \"code_verification\": {\n    \"attempts_remaining\": \"<integer>\",\n    \"status\": \"<string>\"\n  },\n  \"currency\": \"<string>\",\n  \"eps\": {\n    \"reference\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"giropay\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"ideal\": {\n    \"bank\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"metadata\": \"<object>\",\n  \"multibanco\": {\n    \"entity\": \"<string>\",\n    \"reference\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"owner\": {\n    \"address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": \"<string>\",\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"verified_address\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"verified_email\": \"<string>\",\n    \"verified_name\": \"<string>\",\n    \"verified_phone\": \"<string>\"\n  },\n  \"p24\": {\n    \"reference\": \"<string>\"\n  },\n  \"paper_check\": {\n    \"mailing_address_city\": \"<string>\",\n    \"mailing_address_country\": \"<string>\",\n    \"mailing_address_line1\": \"<string>\",\n    \"mailing_address_line2\": \"<string>\",\n    \"mailing_address_postal_code\": \"<string>\",\n    \"mailing_address_state\": \"<string>\"\n  },\n  \"receiver\": {\n    \"amount_charged\": \"<integer>\",\n    \"amount_received\": \"<integer>\",\n    \"amount_returned\": \"<integer>\",\n    \"address\": \"<string>\"\n  },\n  \"redirect\": {\n    \"return_url\": \"<string>\",\n    \"status\": \"<string>\",\n    \"url\": \"<string>\",\n    \"failure_reason\": \"<string>\"\n  },\n  \"sepa_credit_transfer\": {\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"iban\": \"<string>\",\n    \"refund_account_holder_address_city\": \"<string>\",\n    \"refund_account_holder_address_country\": \"<string>\",\n    \"refund_account_holder_address_line1\": \"<string>\",\n    \"refund_account_holder_address_line2\": \"<string>\",\n    \"refund_account_holder_address_postal_code\": \"<string>\",\n    \"refund_account_holder_address_state\": \"<string>\",\n    \"refund_account_holder_name\": \"<string>\",\n    \"refund_iban\": \"<string>\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"<string>\",\n    \"branch_code\": \"<string>\",\n    \"country\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"mandate_reference\": \"<string>\",\n    \"mandate_url\": \"<string>\",\n    \"skip_validation\": \"<boolean>\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"bic\": \"<string>\",\n    \"country\": \"<string>\",\n    \"iban_last4\": \"<string>\",\n    \"preferred_language\": \"<string>\",\n    \"statement_descriptor\": \"<string>\"\n  },\n  \"statement_descriptor\": \"<string>\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"authenticated\": \"<boolean>\",\n    \"brand\": \"<string>\",\n    \"card\": \"<string>\",\n    \"card_automatically_updated\": \"<boolean>\",\n    \"country\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"dynamic_last4\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"fingerprint\": \"<string>\",\n    \"funding\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"name\": \"<string>\",\n    \"skip_validation\": \"<boolean>\",\n    \"three_d_secure\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"usage\": \"<string>\"\n}"
								},
								{
									"id": "9853b07f-7771-4851-b18d-a6d4d8995108",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.",
													"key": "flow",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][date]",
													"value": "<unix-time>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][ip]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][status]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[acceptance][user_agent]",
													"value": "<string>"
												},
												{
													"description": "Information about a mandate possiblity attached to a source object (generally for bank debits) as well as its acceptance status.",
													"key": "mandate[notification_method]",
													"value": "<string>"
												},
												{
													"description": "The source to share.",
													"key": "original_source",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][city]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][country]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][line1]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][line2]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[address][state]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[email]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[name]",
													"value": "<string>"
												},
												{
													"description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
													"key": "owner[phone]",
													"value": "<string>"
												},
												{
													"description": "Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).",
													"key": "receiver[refund_attributes_method]",
													"value": "<string>"
												},
												{
													"description": "Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).",
													"key": "redirect[return_url]",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "An optional token used to create the source. When passed, token properties will override source parameters.",
													"key": "token",
													"value": "<string>"
												},
												{
													"description": "The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Shared card Sources](/docs/sources/connect#shared-card-sources) guide)",
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "usage",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sources"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "bfcfd629-7433-490b-9b4e-42765eb7ea44"
				},
				{
					"name": "subscription_items",
					"item": [
						{
							"name": "{item}",
							"item": [
								{
									"name": "Delete Subscription Item",
									"id": "bf7c4d2a-8d3a-4cf1-8ee7-b9b5a12d927d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "clear_usage",
													"value": "true",
													"description": "Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`."
												},
												{
													"key": "prorate",
													"value": "false",
													"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle."
												},
												{
													"key": "proration_date",
													"value": "11721553",
													"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items/:item",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items",
												":item"
											],
											"variable": [
												{
													"key": "item",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the subscription item to delete."
												}
											]
										},
										"description": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>"
									},
									"response": [
										{
											"id": "9ab219e0-26ea-40f9-b9ba-29de1e256bf2",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`.",
															"key": "clear_usage",
															"value": "<boolean>"
														},
														{
															"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
															"key": "proration_date",
															"value": "<unix-time>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to delete."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "5dbcc9ef-cc2d-439c-ac1e-7b2e2604b2b7",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`.",
															"key": "clear_usage",
															"value": "<boolean>"
														},
														{
															"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
															"key": "proration_date",
															"value": "<unix-time>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to delete."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Subscription Item",
									"id": "8cf67b5a-091b-4b1a-99a1-391f9adb69d4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items/:item?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items",
												":item"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "item",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the subscription item to retrieve."
												}
											]
										},
										"description": "<p>Retrieves the invoice item with the given ID.</p>"
									},
									"response": [
										{
											"id": "ba400286-1fca-4aca-b886-e137d1438f82",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": \"<string>\",\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}"
										},
										{
											"id": "5768c2a6-8cb1-49aa-89cd-8588d9ae7898",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Subscription Item",
									"id": "bda6cec4-42fd-485b-bb03-5fbef3c0fc3d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "magna pariatur",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Ut ullamco sint",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "plan",
													"value": "in mollit culpa",
													"description": "The identifier of the new plan for this subscription item."
												},
												{
													"key": "prorate",
													"value": "true",
													"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle."
												},
												{
													"key": "proration_date",
													"value": "-87152208",
													"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint."
												},
												{
													"key": "quantity",
													"value": "88471685",
													"description": "The quantity you'd like to apply to the subscription item you're creating."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items/:item",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items",
												":item"
											],
											"variable": [
												{
													"key": "item",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the subscription item to modify."
												}
											]
										},
										"description": "<p>Updates the plan or quantity of an item on a current subscription.</p>"
									},
									"response": [
										{
											"id": "8a0e8a9c-1278-4f16-90b9-e7274cb98914",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The identifier of the new plan for this subscription item.",
															"key": "plan",
															"value": "<string>"
														},
														{
															"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
															"key": "proration_date",
															"value": "<unix-time>"
														},
														{
															"description": "The quantity you'd like to apply to the subscription item you're creating.",
															"key": "quantity",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to modify."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": \"<string>\",\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}"
										},
										{
											"id": "b2417548-8642-490c-bd11-7e37bac9f0d0",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "The identifier of the new plan for this subscription item.",
															"key": "plan",
															"value": "<string>"
														},
														{
															"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
															"key": "proration_date",
															"value": "<unix-time>"
														},
														{
															"description": "The quantity you'd like to apply to the subscription item you're creating.",
															"key": "quantity",
															"value": "<integer>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscription_items/:item",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscription_items",
														":item"
													],
													"variable": [
														{
															"key": "item",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription item to modify."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "46222693-d915-4d66-b82d-0e151b39b354"
						},
						{
							"name": "All Subscription Items",
							"id": "6b4696e6-5b53-482d-ace0-4d9920d6ddb7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/subscription_items?ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse&subscription=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"subscription_items"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "subscription",
											"value": "esse deserunt",
											"description": "(Required) The ID of the subscription whose items will be retrieved."
										}
									]
								},
								"description": "<p>Returns a list of your subscription items for a given subscription.</p>"
							},
							"response": [
								{
									"id": "f2ef697a-03c7-43cc-9933-72c6ba5db92d",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "subscription",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"created\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"plan\": {\n        \"active\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_count\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usage_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aggregate_usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_scheme\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"nickname\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"product\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tiers\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tiers_mode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transform_usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_period_days\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subscription\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"created\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"plan\": {\n        \"active\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"interval_count\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usage_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"aggregate_usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"billing_scheme\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"nickname\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"product\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tiers\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tiers_mode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transform_usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"trial_period_days\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"subscription\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "5f40fe1c-7543-41df-8c51-76306abe8fc7",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&subscription=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "subscription",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Subscription Item",
							"id": "01de0677-44dd-4001-acb9-db0e83c9f5bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "plan",
											"value": "id dolor",
											"description": "(Required) The identifier of the plan to add to the subscription."
										},
										{
											"key": "subscription",
											"value": "anim sed fugiat",
											"description": "(Required) The identifier of the subscription to modify."
										},
										{
											"key": "expand[0]",
											"value": "cillum fugiat",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "in aliqua",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "prorate",
											"value": "true",
											"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle."
										},
										{
											"key": "proration_date",
											"value": "-13469188",
											"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint."
										},
										{
											"key": "quantity",
											"value": "69161153",
											"description": "The quantity you'd like to apply to the subscription item you're creating."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/subscription_items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"subscription_items"
									]
								},
								"description": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>"
							},
							"response": [
								{
									"id": "cf2b1efb-5ed7-44d3-85c1-b9e1e29fd83c",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the plan to add to the subscription.",
													"key": "plan",
													"value": "<string>"
												},
												{
													"description": "(Required) The identifier of the subscription to modify.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
													"key": "prorate",
													"value": "<boolean>"
												},
												{
													"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
													"key": "proration_date",
													"value": "<unix-time>"
												},
												{
													"description": "The quantity you'd like to apply to the subscription item you're creating.",
													"key": "quantity",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": \"<string>\",\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"subscription\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}"
								},
								{
									"id": "7c290185-ea5c-4e89-97c6-74be308e401c",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the plan to add to the subscription.",
													"key": "plan",
													"value": "<string>"
												},
												{
													"description": "(Required) The identifier of the subscription to modify.",
													"key": "subscription",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "Flag indicating whether to [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration) switching plans during a billing cycle.",
													"key": "prorate",
													"value": "<boolean>"
												},
												{
													"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](#retrieve_customer_invoice) endpoint.",
													"key": "proration_date",
													"value": "<unix-time>"
												},
												{
													"description": "The quantity you'd like to apply to the subscription item you're creating.",
													"key": "quantity",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Usage Record",
							"id": "35f01f94-8480-4bae-8c1b-e74201ae9925",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "quantity",
											"value": "-29317786",
											"description": "(Required) The usage quantity for the specified timestamp."
										},
										{
											"key": "timestamp",
											"value": "48756686",
											"description": "(Required) The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`."
										},
										{
											"key": "action",
											"value": "increment",
											"description": "Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp."
										},
										{
											"key": "expand[0]",
											"value": "minim sit Lorem",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "deserunt sed quis",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/subscription_items/:subscription_item/usage_records",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"subscription_items",
										":subscription_item",
										"usage_records"
									],
									"variable": [
										{
											"key": "subscription_item",
											"value": "adipisicing incididunt esse",
											"description": "(Required) The ID of the subscription item for this usage record."
										}
									]
								},
								"description": "<p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>"
							},
							"response": [
								{
									"id": "9a0fad40-7dac-453e-ac80-6d41c47590a0",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The usage quantity for the specified timestamp.",
													"key": "quantity",
													"value": "<integer>"
												},
												{
													"description": "(Required) The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`.",
													"key": "timestamp",
													"value": "<integer>"
												},
												{
													"description": "Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp.",
													"key": "action",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items/:subscription_item/usage_records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items",
												":subscription_item",
												"usage_records"
											],
											"variable": [
												{
													"key": "subscription_item",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the subscription item for this usage record."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"subscription_item\": \"<string>\",\n  \"timestamp\": \"<unix-time>\"\n}"
								},
								{
									"id": "a0751e77-fc18-43fe-a40b-cca843bf93e9",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The usage quantity for the specified timestamp.",
													"key": "quantity",
													"value": "<integer>"
												},
												{
													"description": "(Required) The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`.",
													"key": "timestamp",
													"value": "<integer>"
												},
												{
													"description": "Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp.",
													"key": "action",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscription_items/:subscription_item/usage_records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscription_items",
												":subscription_item",
												"usage_records"
											],
											"variable": [
												{
													"key": "subscription_item",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the subscription item for this usage record."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "4d9e89d3-8ef5-4b94-9c85-8d16fd4f464a"
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "{subscription_exposed_id}",
							"item": [
								{
									"name": "Delete Subscription",
									"id": "12e5f78a-32e4-4c95-ac35-3783d7e271f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "at_period_end",
													"value": "true",
													"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions",
												":subscription_exposed_id"
											],
											"variable": [
												{
													"key": "subscription_exposed_id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p><p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p><p>By default, upon subscription cancellation, Stripe will close all unpaid invoices for the customer. This is designed to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can reopen the invoices manually after subscription cancellation to have us proceed with payment collection. Or, you could even re-attempt payment yourself on all unpaid invoices before allowing the customer to cancel the subscription at all.</p>"
									},
									"response": [
										{
											"id": "cdafde87-ad71-4644-a165-ce9a0627e506",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period.",
															"key": "at_period_end",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
										},
										{
											"id": "1b6e041a-1ca1-4029-8631-d0924f96abc5",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A flag that, if set to `true`, will delay the subscription's cancellation until the end of the current period.",
															"key": "at_period_end",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Subscription",
									"id": "1b532291-6d4a-44b3-993d-9cfd419054d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions",
												":subscription_exposed_id"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "subscription_exposed_id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Retrieves the subscription with the given ID.</p>"
									},
									"response": [
										{
											"id": "593e7891-6e20-4a3f-a1ca-a3fb0532cb24",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"start\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"subscription\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"currency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interval\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"interval_count\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"livemode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"usage_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"aggregate_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"billing_scheme\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nickname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers_mode\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
										},
										{
											"id": "8c45f292-edf2-43a0-8995-e9e3f23a39b5",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Subscription",
									"id": "e9c5f25c-8323-4d71-8ad7-0e72ec9f080c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "application_fee_percent",
													"value": "99728138.46227992",
													"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions)."
												},
												{
													"key": "billing",
													"value": "charge_automatically",
													"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`."
												},
												{
													"key": "billing_cycle_anchor",
													"value": "nulla deserun",
													"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices."
												},
												{
													"key": "cancel_at_period_end",
													"value": "true",
													"description": "Boolean indicating whether this subscription should cancel at the end of the current period."
												},
												{
													"key": "coupon",
													"value": "elit s",
													"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription."
												},
												{
													"key": "days_until_due",
													"value": "3605760",
													"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`."
												},
												{
													"key": "expand[0]",
													"value": "aute ad est cupidatat",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "e",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "items[0][clear_usage]",
													"value": "true",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[0][deleted]",
													"value": "true",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[0][id]",
													"value": "sint fugiat",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[0][plan]",
													"value": "eiusmod ut",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[0][quantity]",
													"value": "97218380",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[1][clear_usage]",
													"value": "true",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[1][deleted]",
													"value": "",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[1][id]",
													"value": "deserunt in laboris",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[1][plan]",
													"value": "dolor ut aliquip cupidatat",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "items[1][quantity]",
													"value": "-33218042",
													"description": "List of subscription items, each with an attached plan."
												},
												{
													"key": "prorate",
													"value": "true",
													"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created."
												},
												{
													"key": "proration_date",
													"value": "-40648381",
													"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations."
												},
												{
													"key": "tax_percent",
													"value": "-55533504.86406092",
													"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string."
												},
												{
													"key": "trial_end",
													"value": "minim exercitation aliqua",
													"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately."
												},
												{
													"key": "trial_from_plan",
													"value": "true",
													"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions",
												":subscription_exposed_id"
											],
											"variable": [
												{
													"key": "subscription_exposed_id",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the subscription to update."
												}
											]
										},
										"description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>"
									},
									"response": [
										{
											"id": "20cf135b-eaae-4482-97bb-51e961e4106a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
															"key": "application_fee_percent",
															"value": "<number>"
														},
														{
															"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
															"key": "billing",
															"value": "<string>"
														},
														{
															"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
															"key": "billing_cycle_anchor",
															"value": "<string>"
														},
														{
															"description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
															"key": "cancel_at_period_end",
															"value": "<boolean>"
														},
														{
															"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
															"key": "days_until_due",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][id]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][metadata]",
															"value": "<object>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][plan]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][id]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][metadata]",
															"value": "<object>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][plan]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][quantity]",
															"value": "<integer>"
														},
														{
															"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
															"key": "proration_date",
															"value": "<unix-time>"
														},
														{
															"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
															"key": "tax_percent",
															"value": "<number>"
														},
														{
															"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
															"key": "trial_end",
															"value": "<string>"
														},
														{
															"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
															"key": "trial_from_plan",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription to update."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
										},
										{
											"id": "06fb9b9f-53fc-4ccf-abb8-1d681c0be260",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
															"key": "application_fee_percent",
															"value": "<number>"
														},
														{
															"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
															"key": "billing",
															"value": "<string>"
														},
														{
															"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
															"key": "billing_cycle_anchor",
															"value": "<string>"
														},
														{
															"description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
															"key": "cancel_at_period_end",
															"value": "<boolean>"
														},
														{
															"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
															"key": "coupon",
															"value": "<string>"
														},
														{
															"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
															"key": "days_until_due",
															"value": "<integer>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][clear_usage]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][deleted]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][id]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][metadata]",
															"value": "<object>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][plan]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[0][quantity]",
															"value": "<integer>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][clear_usage]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][deleted]",
															"value": "<boolean>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][id]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][metadata]",
															"value": "<object>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][plan]",
															"value": "<string>"
														},
														{
															"description": "List of subscription items, each with an attached plan.",
															"key": "items[1][quantity]",
															"value": "<integer>"
														},
														{
															"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
															"key": "prorate",
															"value": "<boolean>"
														},
														{
															"description": "If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.",
															"key": "proration_date",
															"value": "<unix-time>"
														},
														{
															"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
															"key": "tax_percent",
															"value": "<number>"
														},
														{
															"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
															"key": "trial_end",
															"value": "<string>"
														},
														{
															"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
															"key": "trial_from_plan",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the subscription to update."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete Subscription Discount",
									"id": "054ec743-7481-4f5b-96a9-09eb82db6f35",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id/discount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions",
												":subscription_exposed_id",
												"discount"
											],
											"variable": [
												{
													"key": "subscription_exposed_id",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Removes the currently applied discount on a subscription.</p>"
									},
									"response": [
										{
											"id": "95e01991-66a0-4d62-b526-f6a09b0fc2ff",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id/discount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id",
														"discount"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "b6ba8afb-e233-4cda-a994-b0784fdf3b84",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/subscriptions/:subscription_exposed_id/discount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"subscriptions",
														":subscription_exposed_id",
														"discount"
													],
													"variable": [
														{
															"key": "subscription_exposed_id",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "ac6ea580-f83d-43dc-a496-5d0b314a661e"
						},
						{
							"name": "All Subscriptions",
							"id": "2eac2ea5-4022-4234-b074-37db565c0940",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/subscriptions?billing=send_invoice&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&customer=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&plan=esse deserunt&starting_after=esse deserunt&status=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"subscriptions"
									],
									"query": [
										{
											"key": "billing",
											"value": "send_invoice",
											"description": "The billing mode of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`."
										},
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "customer",
											"value": "esse deserunt",
											"description": "The ID of the customer whose subscriptions will be retrieved."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "plan",
											"value": "esse deserunt",
											"description": "The ID of the plan whose subscriptions will be retrieved."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "status",
											"value": "all",
											"description": "The status of the subscriptions to retrieve. One of: `trialing`, `active`, `past_due`, `unpaid`, `canceled`, or `all`. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Passing in a value of `all` will return subscriptions of all statuses."
										}
									]
								},
								"description": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>"
							},
							"response": [
								{
									"id": "d1478d18-bdc2-458a-9a76-2ffc0da4be68",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions?billing=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&plan=<string>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions"
											],
											"query": [
												{
													"key": "billing",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "plan",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"cancel_at_period_end\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"customer\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"start\": \"<unix-time>\",\n      \"status\": \"<string>\",\n      \"application_fee_percent\": \"<number>\",\n      \"billing\": \"<string>\",\n      \"billing_cycle_anchor\": \"<unix-time>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"current_period_end\": \"<unix-time>\",\n      \"current_period_start\": \"<unix-time>\",\n      \"days_until_due\": \"<integer>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ended_at\": \"<unix-time>\",\n      \"items\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"trial_end\": \"<unix-time>\",\n      \"trial_start\": \"<unix-time>\"\n    },\n    {\n      \"cancel_at_period_end\": \"<boolean>\",\n      \"created\": \"<unix-time>\",\n      \"customer\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"start\": \"<unix-time>\",\n      \"status\": \"<string>\",\n      \"application_fee_percent\": \"<number>\",\n      \"billing\": \"<string>\",\n      \"billing_cycle_anchor\": \"<unix-time>\",\n      \"canceled_at\": \"<unix-time>\",\n      \"current_period_end\": \"<unix-time>\",\n      \"current_period_start\": \"<unix-time>\",\n      \"days_until_due\": \"<integer>\",\n      \"discount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ended_at\": \"<unix-time>\",\n      \"items\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"plan\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"quantity\": \"<integer>\",\n      \"tax_percent\": \"<number>\",\n      \"trial_end\": \"<unix-time>\",\n      \"trial_start\": \"<unix-time>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "07aeec5e-8976-40c5-b279-0fda261cd41b",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions?billing=<string>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&customer=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&plan=<string>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions"
											],
											"query": [
												{
													"key": "billing",
													"value": "<string>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "plan",
													"value": "<string>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Subscription",
							"id": "b12e4239-1347-4880-9f27-986a25191361",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "adipisicing labore",
											"description": "(Required) The identifier of the customer to subscribe."
										},
										{
											"key": "application_fee_percent",
											"value": "90835123.16227433",
											"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions)."
										},
										{
											"key": "billing",
											"value": "send_invoice",
											"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`."
										},
										{
											"key": "billing_cycle_anchor",
											"value": "fugiat sed dolor Ut",
											"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices."
										},
										{
											"key": "coupon",
											"value": "eiusmod minim proident aute",
											"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription."
										},
										{
											"key": "days_until_due",
											"value": "85765662",
											"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`."
										},
										{
											"key": "expand[0]",
											"value": "proident commodo anim ame",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "sit Ut eiusmod",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "items[0][plan]",
											"value": "exercitation proident minim culpa consectetur",
											"description": "List of subscription items, each with an attached plan."
										},
										{
											"key": "items[0][quantity]",
											"value": "-58533309",
											"description": "List of subscription items, each with an attached plan."
										},
										{
											"key": "items[1][plan]",
											"value": "minim anim",
											"description": "List of subscription items, each with an attached plan."
										},
										{
											"key": "items[1][quantity]",
											"value": "71094638",
											"description": "List of subscription items, each with an attached plan."
										},
										{
											"key": "prorate",
											"value": "false",
											"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created."
										},
										{
											"key": "tax_percent",
											"value": "-75225573.05517572",
											"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string."
										},
										{
											"key": "trial_end",
											"value": "aute labore ad",
											"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately."
										},
										{
											"key": "trial_from_plan",
											"value": "false",
											"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed."
										},
										{
											"key": "trial_period_days",
											"value": "-85656606",
											"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"subscriptions"
									]
								},
								"description": "<p>Creates a new subscription on an existing customer.</p>"
							},
							"response": [
								{
									"id": "b43d7134-90d9-47d1-ad51-c8974daaf04b",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the customer to subscribe.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
													"key": "application_fee_percent",
													"value": "<number>"
												},
												{
													"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
													"key": "billing",
													"value": "<string>"
												},
												{
													"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
													"key": "billing_cycle_anchor",
													"value": "<string>"
												},
												{
													"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
													"key": "coupon",
													"value": "<string>"
												},
												{
													"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
													"key": "days_until_due",
													"value": "<integer>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[0][plan]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[0][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[1][plan]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[1][quantity]",
													"value": "<integer>"
												},
												{
													"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
													"key": "prorate",
													"value": "<boolean>"
												},
												{
													"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
													"key": "tax_percent",
													"value": "<number>"
												},
												{
													"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
													"key": "trial_end",
													"value": "<string>"
												},
												{
													"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
													"key": "trial_from_plan",
													"value": "<boolean>"
												},
												{
													"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan.",
													"key": "trial_period_days",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cancel_at_period_end\": \"<boolean>\",\n  \"created\": \"<unix-time>\",\n  \"customer\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"start\": \"<unix-time>\",\n  \"status\": \"<string>\",\n  \"application_fee_percent\": \"<number>\",\n  \"billing\": \"<string>\",\n  \"billing_cycle_anchor\": \"<unix-time>\",\n  \"canceled_at\": \"<unix-time>\",\n  \"current_period_end\": \"<unix-time>\",\n  \"current_period_start\": \"<unix-time>\",\n  \"days_until_due\": \"<integer>\",\n  \"discount\": {\n    \"coupon\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"object\": \"<string>\",\n    \"start\": \"<unix-time>\",\n    \"customer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"end\": \"<unix-time>\",\n    \"subscription\": \"<string>\"\n  },\n  \"ended_at\": \"<unix-time>\",\n  \"items\": {\n    \"data\": [\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"plan\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"subscription\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"quantity\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"plan\": {\n    \"active\": \"<boolean>\",\n    \"created\": \"<unix-time>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"interval\": \"<string>\",\n    \"interval_count\": \"<integer>\",\n    \"livemode\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"usage_type\": \"<string>\",\n    \"aggregate_usage\": \"<string>\",\n    \"amount\": \"<integer>\",\n    \"billing_scheme\": \"<string>\",\n    \"nickname\": \"<string>\",\n    \"product\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tiers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tiers_mode\": \"<string>\",\n    \"transform_usage\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"trial_period_days\": \"<integer>\"\n  },\n  \"quantity\": \"<integer>\",\n  \"tax_percent\": \"<number>\",\n  \"trial_end\": \"<unix-time>\",\n  \"trial_start\": \"<unix-time>\"\n}"
								},
								{
									"id": "b9ff2f81-5d89-4ac6-834e-98e1627736d5",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) The identifier of the customer to subscribe.",
													"key": "customer",
													"value": "<string>"
												},
												{
													"description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made with an OAuth key in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).",
													"key": "application_fee_percent",
													"value": "<number>"
												},
												{
													"description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
													"key": "billing",
													"value": "<string>"
												},
												{
													"description": "A future timestamp to anchor the subscription's [billing cycle](/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices.",
													"key": "billing_cycle_anchor",
													"value": "<string>"
												},
												{
													"description": "The code of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.",
													"key": "coupon",
													"value": "<string>"
												},
												{
													"description": "Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `billing` is set to `send_invoice`.",
													"key": "days_until_due",
													"value": "<integer>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[0][plan]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[0][quantity]",
													"value": "<integer>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[1][plan]",
													"value": "<string>"
												},
												{
													"description": "List of subscription items, each with an attached plan.",
													"key": "items[1][quantity]",
													"value": "<integer>"
												},
												{
													"description": "Boolean (defaults to `true`) telling us whether to [credit for unused time](/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g. when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial). If `false`, the anchor period will be free (similar to a trial) and no proration adjustments will be created.",
													"key": "prorate",
													"value": "<boolean>"
												},
												{
													"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount in each billing period. For example, a plan which charges $10/month with a `tax_percent` of `20.0` will charge $12 per invoice. To unset a previously-set value, pass an empty string.",
													"key": "tax_percent",
													"value": "<number>"
												},
												{
													"description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately.",
													"key": "trial_end",
													"value": "<string>"
												},
												{
													"description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed.",
													"key": "trial_from_plan",
													"value": "<boolean>"
												},
												{
													"description": "Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan.",
													"key": "trial_period_days",
													"value": "<integer>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"subscriptions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "ed27b001-74b6-4e08-98c0-ac592663eec1"
				},
				{
					"name": "tax_rate_templates",
					"item": [
						{
							"name": "{tax_rate_template}",
							"item": [
								{
									"name": "Delete Tax Rate Template",
									"id": "07c4fcbb-a810-45d6-985a-96456839ae68",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates",
												":tax_rate_template"
											],
											"variable": [
												{
													"key": "tax_rate_template",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the tax rate template to be deleted."
												}
											]
										},
										"description": "<p>Removes a tax rate template from the dashboard.</p>"
									},
									"response": [
										{
											"id": "01efe3ea-6651-408d-b566-eecf94eab051",
											"name": "Successful response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the tax rate template to be deleted."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "4c66d427-cabc-4e33-988b-b3b74e050fb7",
											"name": "Error response.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the tax rate template to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Retrieve Tax Rate Template",
									"id": "11453027-c8ac-45ba-b916-74271bd7e2bb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates",
												":tax_rate_template"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "tax_rate_template",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired tax rate template."
												}
											]
										},
										"description": "<p>Retrieves the tax rate template with the given ID.</p>"
									},
									"response": [
										{
											"id": "ca64da73-95fc-45f9-a220-27804196417a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired tax rate template."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "13b33402-169a-4514-8dc1-e61aa0fd0418",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) The ID of the desired tax rate template."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Tax Rate Template",
									"id": "d4f63300-4459-4878-9147-d967c2cc0f75",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "description",
													"value": "dolor Excepteur elit ",
													"description": "The customer-facing description of this tax rate template."
												},
												{
													"key": "effective_since",
													"value": "-45854658",
													"description": "When this tax rate template starts taking effect."
												},
												{
													"key": "effective_until",
													"value": "53277507",
													"description": "When this tax rate template stops taking effect."
												},
												{
													"key": "expand[0]",
													"value": "in r",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "laborum",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "inclusive",
													"value": "false",
													"description": "If this tax rate template is inclusive or not."
												},
												{
													"key": "name",
													"value": "sit ut ea",
													"description": "The name of this tax rate template."
												},
												{
													"key": "percentage",
													"value": "-82357507.94619751",
													"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates",
												":tax_rate_template"
											],
											"variable": [
												{
													"key": "tax_rate_template",
													"value": "esse deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "<p>Updates a new tax rate template.</p>"
									},
									"response": [
										{
											"id": "c63a24aa-6ee0-4469-b66a-bdbac76b7c25",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The customer-facing description of this tax rate template.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "When this tax rate template starts taking effect.",
															"key": "effective_since",
															"value": "<unix-time>"
														},
														{
															"description": "When this tax rate template stops taking effect.",
															"key": "effective_until",
															"value": "<unix-time>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "If this tax rate template is inclusive or not.",
															"key": "inclusive",
															"value": "<boolean>"
														},
														{
															"description": "The name of this tax rate template.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template.",
															"key": "percentage",
															"value": "<number>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
										},
										{
											"id": "fe3d97b4-099a-499b-9faa-11cc4038bf44",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "The customer-facing description of this tax rate template.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "When this tax rate template starts taking effect.",
															"key": "effective_since",
															"value": "<unix-time>"
														},
														{
															"description": "When this tax rate template stops taking effect.",
															"key": "effective_until",
															"value": "<unix-time>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "If this tax rate template is inclusive or not.",
															"key": "inclusive",
															"value": "<boolean>"
														},
														{
															"description": "The name of this tax rate template.",
															"key": "name",
															"value": "<string>"
														},
														{
															"description": "A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template.",
															"key": "percentage",
															"value": "<number>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/tax_rate_templates/:tax_rate_template",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tax_rate_templates",
														":tax_rate_template"
													],
													"variable": [
														{
															"key": "tax_rate_template",
															"value": "esse deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "6bff3ec4-5597-4c66-a347-0cb899e67ae7"
						},
						{
							"name": "All Tax Rate Templates",
							"id": "97b34cf0-82c8-43ee-9f20-411c46302022",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/tax_rate_templates?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tax_rate_templates"
									],
									"query": [
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										}
									]
								},
								"description": "<p>Returns a list of your tax rate templates. Tax rate templates are returned sorted by creation date, with the most recently created tax rate templates appearing first.</p>"
							},
							"response": [
								{
									"id": "92aab464-f3d6-4e9f-b62d-fcc29e1ac996",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"object\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "66df2eab-0dfb-4f44-bcac-f5a8efcde6af",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Create Tax Rate Template",
							"id": "6389e360-98ef-4857-a00f-a769e092d404",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "inclusive",
											"value": "false",
											"description": "(Required) If this tax rate template is inclusive or not."
										},
										{
											"key": "name",
											"value": "cupidatat in consectetur",
											"description": "(Required) The name of this tax rate template."
										},
										{
											"key": "percentage",
											"value": "69319276.16516215",
											"description": "(Required) A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template."
										},
										{
											"key": "description",
											"value": "Excepteur sunt nisi culpa",
											"description": "The customer-facing description of this tax rate template."
										},
										{
											"key": "effective_since",
											"value": "-46403951",
											"description": "When this tax rate template starts taking effect."
										},
										{
											"key": "effective_until",
											"value": "50034524",
											"description": "When this tax rate template stops taking effect."
										},
										{
											"key": "expand[0]",
											"value": "culpa",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "sunt laborum velit in ad",
											"description": "Specifies which fields in the response should be expanded."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/tax_rate_templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tax_rate_templates"
									]
								},
								"description": "<p>Creates a new tax rate template.</p>"
							},
							"response": [
								{
									"id": "2e752738-534f-41cc-b6b5-33d4542aac6b",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) If this tax rate template is inclusive or not.",
													"key": "inclusive",
													"value": "<boolean>"
												},
												{
													"description": "(Required) The name of this tax rate template.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template.",
													"key": "percentage",
													"value": "<number>"
												},
												{
													"description": "The customer-facing description of this tax rate template.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "When this tax rate template starts taking effect.",
													"key": "effective_since",
													"value": "<unix-time>"
												},
												{
													"description": "When this tax rate template stops taking effect.",
													"key": "effective_until",
													"value": "<unix-time>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"object\": \"<string>\"\n}"
								},
								{
									"id": "65fbf365-90c4-4293-8065-5623d1824feb",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) If this tax rate template is inclusive or not.",
													"key": "inclusive",
													"value": "<boolean>"
												},
												{
													"description": "(Required) The name of this tax rate template.",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "(Required) A non-negative decimal (with at most four decimal places) between 0 and 100. This is percentage of this tax rate template.",
													"key": "percentage",
													"value": "<number>"
												},
												{
													"description": "The customer-facing description of this tax rate template.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "When this tax rate template starts taking effect.",
													"key": "effective_since",
													"value": "<unix-time>"
												},
												{
													"description": "When this tax rate template stops taking effect.",
													"key": "effective_until",
													"value": "<unix-time>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/tax_rate_templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tax_rate_templates"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "fc64fcd5-3394-4726-8055-4e9048b2aa4a"
				},
				{
					"name": "tokens",
					"item": [
						{
							"name": "Create Token",
							"id": "3e084cdc-7444-4ce5-91ef-b7a10b6230ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account[legal_entity][additional_owners][esse8a2][address][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][dob][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][first_name][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][last_name][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][maiden_name][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][personal_id_number][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][additional_owners][esse8a2][verification][value]",
											"value": "<Error: Too many levels of nesting to fake this schema>",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][city]",
											"value": "amet Lorem elit",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][country]",
											"value": "ad amet Lorem",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][line1]",
											"value": "eu sint tempor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][line2]",
											"value": "id sint ad elit",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][postal_code]",
											"value": "anim ipsum",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address][state]",
											"value": "consequat dolor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][city]",
											"value": "sed eu ad",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][country]",
											"value": "proident eu eiusmod",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][line1]",
											"value": "aute",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][line2]",
											"value": "veniam reprehenderit laboris aute",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][postal_code]",
											"value": "ex qui fugiat ut",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][state]",
											"value": "quis cillum",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kana][town]",
											"value": "magna officia dolore anim sit",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][city]",
											"value": "Duis ex officia ea laborum",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][country]",
											"value": "mollit pariatur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][line1]",
											"value": "dolor reprehenderit do irure",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][line2]",
											"value": "velit Duis anim",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][postal_code]",
											"value": "proident",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][state]",
											"value": "do ad enim et Duis",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][address_kanji][town]",
											"value": "Lorem pariatur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][business_name]",
											"value": "consectet",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][business_name_kana]",
											"value": "consequat culpa",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][business_name_kanji]",
											"value": "Duis off",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][business_tax_id]",
											"value": "laborum",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][business_vat_id]",
											"value": "consequat officia",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][dob][day]",
											"value": "73010973",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][dob][month]",
											"value": "83613483",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][dob][year]",
											"value": "-1626804",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][first_name]",
											"value": "cupidatat magna dolor Lorem",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][first_name_kana]",
											"value": "tempor minim quis Ut",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][first_name_kanji]",
											"value": "ullamco esse",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][gender]",
											"value": "sit magna reprehenderit",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][last_name]",
											"value": "officia ut non eu",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][last_name_kana]",
											"value": "in dolor occaecat",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][last_name_kanji]",
											"value": "occaecat",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][maiden_name]",
											"value": "dolore occaecat Lorem do nulla",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][city]",
											"value": "anim eu",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][country]",
											"value": "exercitation cupidatat dolor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][line1]",
											"value": "dolor in sed",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][line2]",
											"value": "nisi id consectetur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][postal_code]",
											"value": "nostrud ex id Lorem sint",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address][state]",
											"value": "dolore sunt",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][city]",
											"value": "est ullamco tempor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][country]",
											"value": "commodo esse",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][line1]",
											"value": "pariatur do elit dolor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][line2]",
											"value": "Lorem cillum dolor voluptate",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][postal_code]",
											"value": "ut Duis Excepteur pariatur voluptate",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][state]",
											"value": "reprehenderit in consequat Duis",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kana][town]",
											"value": "culpa in",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][city]",
											"value": "dolor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][country]",
											"value": "mollit dolor commodo",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][line1]",
											"value": "",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][line2]",
											"value": "dolore velit ut",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][postal_code]",
											"value": "do proident ullamco",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][state]",
											"value": "labore Lorem Excepteur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_address_kanji][town]",
											"value": "adipisicing dolor",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][personal_id_number]",
											"value": "aute Lorem et ex Excepteur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][phone_number]",
											"value": "labore",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][ssn_last_4]",
											"value": "nisi et elit nulla",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][tax_id_registrar]",
											"value": "deserunt laboris",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][type]",
											"value": "sit velit fugiat pariatur",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[legal_entity][verification][document]",
											"value": "ut",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "account[tos_shown_and_accepted]",
											"value": "true",
											"description": "The account information to be stored in this token."
										},
										{
											"key": "amount",
											"value": "28416580"
										},
										{
											"key": "card[address_city]",
											"value": "dolor Excepteur"
										},
										{
											"key": "card[address_country]",
											"value": "ullamco"
										},
										{
											"key": "card[address_line1]",
											"value": "quis Lorem"
										},
										{
											"key": "card[address_line2]",
											"value": "ut sunt id"
										},
										{
											"key": "card[address_state]",
											"value": "ad dolor"
										},
										{
											"key": "card[address_zip]",
											"value": "nostrud Excepteur aute consectetur"
										},
										{
											"key": "card[name]",
											"value": "ipsum aliqua qui"
										},
										{
											"key": "card[object]",
											"value": "card"
										},
										{
											"key": "card[pk_token]",
											"value": "Lorem reprehenderit eu pariatur"
										},
										{
											"key": "card[token_cryptogram]",
											"value": "Lorem consectetur qui pariatur"
										},
										{
											"key": "card[token_cryptogram_amount]",
											"value": "12269566"
										},
										{
											"key": "card[token_cryptogram_currency]",
											"value": "velit"
										},
										{
											"key": "card[token_cryptogram_requestor]",
											"value": "velit"
										},
										{
											"key": "card[token_cryptogram_used]",
											"value": "true"
										},
										{
											"key": "currency",
											"value": "dolore nisi commodo labore"
										},
										{
											"key": "customer",
											"value": "in dolor Ut elit sint",
											"description": "The customer (owned by the application's account) for which to create a token. For use only with [Stripe Connect](/docs/connect). Also, this can be used only with an [OAuth access token](/docs/connect/standard-accounts) or [Stripe-Account header](/docs/connect/authentication). For more details, see [Shared Customers](/docs/connect/shared-customers)."
										},
										{
											"key": "email",
											"value": "nostrud pariatur tempor aute"
										},
										{
											"key": "expand[0]",
											"value": "anim",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "do Du",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "external_id",
											"value": "sint officia in laborum"
										},
										{
											"key": "iovation_blackbox",
											"value": "et sit enim sunt"
										},
										{
											"key": "ip",
											"value": "labore tempor qui"
										},
										{
											"key": "payment_user_agent",
											"value": "aute veniam anim"
										},
										{
											"key": "pii[personal_id_number]",
											"value": "cillum ipsum"
										},
										{
											"key": "pii[ssn_last_4]",
											"value": "Excepteur magna"
										},
										{
											"key": "pii[tax_id]",
											"value": "Excepteur laboris"
										},
										{
											"key": "recipient",
											"value": "sint sed"
										},
										{
											"key": "referrer",
											"value": "aute ut"
										},
										{
											"key": "request_id",
											"value": "labore Ut Duis"
										},
										{
											"key": "user_agent",
											"value": "cupidatat Duis culpa veniam"
										},
										{
											"key": "validation_type",
											"value": "amount"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tokens"
									]
								},
								"description": "<p>Creates a single-use token that represents a bank account’s details.This token can be used in place of a bank account dictionary with any API method.These tokens can be used only once: by attaching them to a <a href=\"#create_recipient\">recipient</a> or <a href=\"#account\">Custom account</a>.</p>"
							},
							"response": [
								{
									"id": "bcee9adb-1e39-4bcf-91b6-f55b4aa4d718",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][day]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][month]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][year]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][gender]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][phone_number]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][type]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][verification][document]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[tos_shown_and_accepted]",
													"value": "<boolean>"
												},
												{
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "card[address_city]",
													"value": "<string>"
												},
												{
													"key": "card[address_country]",
													"value": "<string>"
												},
												{
													"key": "card[address_line1]",
													"value": "<string>"
												},
												{
													"key": "card[address_line2]",
													"value": "<string>"
												},
												{
													"key": "card[address_state]",
													"value": "<string>"
												},
												{
													"key": "card[address_zip]",
													"value": "<string>"
												},
												{
													"key": "card[name]",
													"value": "<string>"
												},
												{
													"key": "card[object]",
													"value": "<string>"
												},
												{
													"key": "card[pk_token]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_amount]",
													"value": "<integer>"
												},
												{
													"key": "card[token_cryptogram_currency]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_requestor]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_used]",
													"value": "<boolean>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The customer (owned by the application's account) for which to create a token. For use only with [Stripe Connect](/docs/connect). Also, this can be used only with an [OAuth access token](/docs/connect/standard-accounts) or [Stripe-Account header](/docs/connect/authentication). For more details, see [Shared Customers](/docs/connect/shared-customers).",
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "iovation_blackbox",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"key": "pii[personal_id_number]",
													"value": "<string>"
												},
												{
													"key": "pii[ssn_last_4]",
													"value": "<string>"
												},
												{
													"key": "pii[tax_id]",
													"value": "<string>"
												},
												{
													"key": "recipient",
													"value": "<string>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"key": "request_id",
													"value": "<string>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												},
												{
													"key": "validation_type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tokens"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"used\": \"<boolean>\",\n  \"bank_account\": {\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"account\": \"<string>\",\n    \"account_holder_name\": \"<string>\",\n    \"account_holder_type\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"routing_number\": \"<string>\"\n  },\n  \"card\": {\n    \"brand\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"funding\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"account\": \"<string>\",\n    \"address_city\": \"<string>\",\n    \"address_country\": \"<string>\",\n    \"address_line1\": \"<string>\",\n    \"address_line1_check\": \"<string>\",\n    \"address_line2\": \"<string>\",\n    \"address_state\": \"<string>\",\n    \"address_zip\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"available_payout_methods\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"default_for_currency\": \"<boolean>\",\n    \"dynamic_last4\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"name\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"client_ip\": \"<string>\"\n}"
								},
								{
									"id": "8513b3a0-f16d-4e94-ae29-9af186771f0b",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][Excepteur28][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][officia_f][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][mollit_][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][address][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][dob][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][first_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][last_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][maiden_name][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][personal_id_number][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][additional_owners][magna854][verification][value]",
													"value": "<Error: Too many levels of nesting to fake this schema>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_tax_id]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][business_vat_id]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][day]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][month]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][dob][year]",
													"value": "<integer>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][first_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][gender]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name_kana]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][last_name_kanji]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][maiden_name]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kana][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][city]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][country]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][line1]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][line2]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][postal_code]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][state]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_address_kanji][town]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][personal_id_number]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][phone_number]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][ssn_last_4]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][tax_id_registrar]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][type]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[legal_entity][verification][document]",
													"value": "<string>"
												},
												{
													"description": "The account information to be stored in this token.",
													"key": "account[tos_shown_and_accepted]",
													"value": "<boolean>"
												},
												{
													"key": "amount",
													"value": "<integer>"
												},
												{
													"key": "card[address_city]",
													"value": "<string>"
												},
												{
													"key": "card[address_country]",
													"value": "<string>"
												},
												{
													"key": "card[address_line1]",
													"value": "<string>"
												},
												{
													"key": "card[address_line2]",
													"value": "<string>"
												},
												{
													"key": "card[address_state]",
													"value": "<string>"
												},
												{
													"key": "card[address_zip]",
													"value": "<string>"
												},
												{
													"key": "card[name]",
													"value": "<string>"
												},
												{
													"key": "card[object]",
													"value": "<string>"
												},
												{
													"key": "card[pk_token]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_amount]",
													"value": "<integer>"
												},
												{
													"key": "card[token_cryptogram_currency]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_requestor]",
													"value": "<string>"
												},
												{
													"key": "card[token_cryptogram_used]",
													"value": "<boolean>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "The customer (owned by the application's account) for which to create a token. For use only with [Stripe Connect](/docs/connect). Also, this can be used only with an [OAuth access token](/docs/connect/standard-accounts) or [Stripe-Account header](/docs/connect/authentication). For more details, see [Shared Customers](/docs/connect/shared-customers).",
													"key": "customer",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "external_id",
													"value": "<string>"
												},
												{
													"key": "iovation_blackbox",
													"value": "<string>"
												},
												{
													"key": "ip",
													"value": "<string>"
												},
												{
													"key": "payment_user_agent",
													"value": "<string>"
												},
												{
													"key": "pii[personal_id_number]",
													"value": "<string>"
												},
												{
													"key": "pii[ssn_last_4]",
													"value": "<string>"
												},
												{
													"key": "pii[tax_id]",
													"value": "<string>"
												},
												{
													"key": "recipient",
													"value": "<string>"
												},
												{
													"key": "referrer",
													"value": "<string>"
												},
												{
													"key": "request_id",
													"value": "<string>"
												},
												{
													"key": "user_agent",
													"value": "<string>"
												},
												{
													"key": "validation_type",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tokens"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Retrieve Token",
							"id": "1b19fcac-34f3-49ed-92a9-2fa887d12794",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/tokens/:token?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tokens",
										":token"
									],
									"query": [
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										}
									],
									"variable": [
										{
											"key": "token",
											"value": "esse deserunt",
											"description": "(Required) The ID of the desired token."
										}
									]
								},
								"description": "<p>Retrieves the token with the given ID.</p>"
							},
							"response": [
								{
									"id": "13aa8ad3-04bc-4e21-83ef-ad4e0facb6fa",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tokens/:token?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tokens",
												":token"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "token",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<unix-time>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"type\": \"<string>\",\n  \"used\": \"<boolean>\",\n  \"bank_account\": {\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"account\": \"<string>\",\n    \"account_holder_name\": \"<string>\",\n    \"account_holder_type\": \"<string>\",\n    \"bank_name\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"routing_number\": \"<string>\"\n  },\n  \"card\": {\n    \"brand\": \"<string>\",\n    \"exp_month\": \"<integer>\",\n    \"exp_year\": \"<integer>\",\n    \"funding\": \"<string>\",\n    \"id\": \"<string>\",\n    \"last4\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"object\": \"<string>\",\n    \"account\": \"<string>\",\n    \"address_city\": \"<string>\",\n    \"address_country\": \"<string>\",\n    \"address_line1\": \"<string>\",\n    \"address_line1_check\": \"<string>\",\n    \"address_line2\": \"<string>\",\n    \"address_state\": \"<string>\",\n    \"address_zip\": \"<string>\",\n    \"address_zip_check\": \"<string>\",\n    \"available_payout_methods\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"country\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"customer\": \"<string>\",\n    \"cvc_check\": \"<string>\",\n    \"default_for_currency\": \"<boolean>\",\n    \"dynamic_last4\": \"<string>\",\n    \"fingerprint\": \"<string>\",\n    \"name\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"tokenization_method\": \"<string>\"\n  },\n  \"client_ip\": \"<string>\"\n}"
								},
								{
									"id": "a9c58944-206d-4bd6-9ea9-2ad3491730c3",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tokens/:token?expand[0]=<string>&expand[1]=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tokens",
												":token"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "token",
													"value": "esse deserunt",
													"description": "(Required) The ID of the desired token."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "898e4366-0118-4a21-89d5-8a015c3c9b24"
				},
				{
					"name": "topups",
					"item": [
						{
							"name": "{topup}",
							"item": [
								{
									"name": "Topup Retrieve",
									"id": "3375fe04-09ed-4948-b109-e5754ff3c898",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/topups/:topup?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups",
												":topup"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "topup",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the topup to retrieve."
												}
											]
										},
										"description": "<p>Retrieves the details of a Top-up that has previously been created. Supply the unique Top-up ID that was returned from your previous request, and Stripe will return the corresponding Top-up information.</p>"
									},
									"response": [
										{
											"id": "324c1a7e-d12e-48db-b958-539fdee08411",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the topup to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"source\": {\n    \"client_secret\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"flow\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ach_credit_transfer\": {\n      \"account_number\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"swift_code\": \"<string>\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"alipay\": {\n      \"data_string\": \"<string>\",\n      \"native_url\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"amount\": \"<integer>\",\n    \"bancontact\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"<string>\",\n      \"application_preferred_name\": \"<string>\",\n      \"application_preferred_name_encoding\": \"<string>\",\n      \"authorization_response_code\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvm_type\": \"<string>\",\n      \"data_type\": \"<string>\",\n      \"dedicated_file_name\": \"<string>\",\n      \"emv_auth_data\": \"<string>\",\n      \"evidence_customer_signature\": \"<string>\",\n      \"evidence_transaction_certificate\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mid\": \"<string>\",\n      \"pos_device_id\": \"<string>\",\n      \"pos_entry_mode\": \"<string>\",\n      \"read_method\": \"<string>\",\n      \"reader\": \"<string>\",\n      \"terminal_verification_results\": \"<string>\",\n      \"tid\": \"<string>\",\n      \"transaction_status_information\": \"<string>\"\n    },\n    \"code_verification\": {\n      \"attempts_remaining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"currency\": \"<string>\",\n    \"eps\": {\n      \"reference\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"giropay\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"ideal\": {\n      \"bank\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"metadata\": \"<object>\",\n    \"multibanco\": {\n      \"entity\": \"<string>\",\n      \"reference\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"owner\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"p24\": {\n      \"reference\": \"<string>\"\n    },\n    \"paper_check\": {\n      \"mailing_address_city\": \"<string>\",\n      \"mailing_address_country\": \"<string>\",\n      \"mailing_address_line1\": \"<string>\",\n      \"mailing_address_line2\": \"<string>\",\n      \"mailing_address_postal_code\": \"<string>\",\n      \"mailing_address_state\": \"<string>\"\n    },\n    \"receiver\": {\n      \"amount_charged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_received\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_returned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"redirect\": {\n      \"return_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failure_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sepa_credit_transfer\": {\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"<string>\",\n      \"branch_code\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mandate_reference\": \"<string>\",\n      \"mandate_url\": \"<string>\",\n      \"skip_validation\": \"<boolean>\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"country\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"statement_descriptor\": \"<string>\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"authenticated\": \"<boolean>\",\n      \"brand\": \"<string>\",\n      \"card\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"usage\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expected_availability_date\": \"<integer>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "f13f627b-f1aa-40a9-875e-0de6c8e01b5b",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the topup to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Topup Update",
									"id": "55954b2b-d1ef-4148-9ba2-9de52edcb0b9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "description",
													"value": "elit sint",
													"description": "An arbitrary string attached to the object. Often useful for displaying to users."
												},
												{
													"key": "expand[0]",
													"value": "dolor esse est commodo pariatur",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ea adipisicing dolore labore",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/topups/:topup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups",
												":topup"
											],
											"variable": [
												{
													"key": "topup",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the Top-up to retrieve."
												}
											]
										},
										"description": "<p>Updates the metadata of a Top-up. Other Top-up details are not editable by design.</p>"
									},
									"response": [
										{
											"id": "fb375ab4-6e96-4d47-a039-b61aafd1ecef",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup"
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the Top-up to retrieve."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"source\": {\n    \"client_secret\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"flow\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ach_credit_transfer\": {\n      \"account_number\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"swift_code\": \"<string>\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"alipay\": {\n      \"data_string\": \"<string>\",\n      \"native_url\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"amount\": \"<integer>\",\n    \"bancontact\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"<string>\",\n      \"application_preferred_name\": \"<string>\",\n      \"application_preferred_name_encoding\": \"<string>\",\n      \"authorization_response_code\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvm_type\": \"<string>\",\n      \"data_type\": \"<string>\",\n      \"dedicated_file_name\": \"<string>\",\n      \"emv_auth_data\": \"<string>\",\n      \"evidence_customer_signature\": \"<string>\",\n      \"evidence_transaction_certificate\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mid\": \"<string>\",\n      \"pos_device_id\": \"<string>\",\n      \"pos_entry_mode\": \"<string>\",\n      \"read_method\": \"<string>\",\n      \"reader\": \"<string>\",\n      \"terminal_verification_results\": \"<string>\",\n      \"tid\": \"<string>\",\n      \"transaction_status_information\": \"<string>\"\n    },\n    \"code_verification\": {\n      \"attempts_remaining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"currency\": \"<string>\",\n    \"eps\": {\n      \"reference\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"giropay\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"ideal\": {\n      \"bank\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"metadata\": \"<object>\",\n    \"multibanco\": {\n      \"entity\": \"<string>\",\n      \"reference\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"owner\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"p24\": {\n      \"reference\": \"<string>\"\n    },\n    \"paper_check\": {\n      \"mailing_address_city\": \"<string>\",\n      \"mailing_address_country\": \"<string>\",\n      \"mailing_address_line1\": \"<string>\",\n      \"mailing_address_line2\": \"<string>\",\n      \"mailing_address_postal_code\": \"<string>\",\n      \"mailing_address_state\": \"<string>\"\n    },\n    \"receiver\": {\n      \"amount_charged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_received\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_returned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"redirect\": {\n      \"return_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failure_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sepa_credit_transfer\": {\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"<string>\",\n      \"branch_code\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mandate_reference\": \"<string>\",\n      \"mandate_url\": \"<string>\",\n      \"skip_validation\": \"<boolean>\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"country\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"statement_descriptor\": \"<string>\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"authenticated\": \"<boolean>\",\n      \"brand\": \"<string>\",\n      \"card\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"usage\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expected_availability_date\": \"<integer>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "7191dbc8-7f5f-4459-842f-57e525b73259",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup"
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the Top-up to retrieve."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Topup Cancel",
									"id": "50d62007-cb2c-4173-9bf9-e458ff18b9a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "dolor",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "Duis in nostrud velit",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/topups/:topup/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups",
												":topup",
												"cancel"
											],
											"variable": [
												{
													"key": "topup",
													"value": "adipisicing incididunt esse",
													"description": "(Required) The ID of the Top-up to cancel."
												}
											]
										},
										"description": "<p>Cancels a Top-up</p>"
									},
									"response": [
										{
											"id": "7c6350cc-afaf-41f5-8063-4d659d2c961e",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup",
														"cancel"
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the Top-up to cancel."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"source\": {\n    \"client_secret\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"flow\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ach_credit_transfer\": {\n      \"account_number\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"swift_code\": \"<string>\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"alipay\": {\n      \"data_string\": \"<string>\",\n      \"native_url\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"amount\": \"<integer>\",\n    \"bancontact\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"<string>\",\n      \"application_preferred_name\": \"<string>\",\n      \"application_preferred_name_encoding\": \"<string>\",\n      \"authorization_response_code\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvm_type\": \"<string>\",\n      \"data_type\": \"<string>\",\n      \"dedicated_file_name\": \"<string>\",\n      \"emv_auth_data\": \"<string>\",\n      \"evidence_customer_signature\": \"<string>\",\n      \"evidence_transaction_certificate\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mid\": \"<string>\",\n      \"pos_device_id\": \"<string>\",\n      \"pos_entry_mode\": \"<string>\",\n      \"read_method\": \"<string>\",\n      \"reader\": \"<string>\",\n      \"terminal_verification_results\": \"<string>\",\n      \"tid\": \"<string>\",\n      \"transaction_status_information\": \"<string>\"\n    },\n    \"code_verification\": {\n      \"attempts_remaining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"currency\": \"<string>\",\n    \"eps\": {\n      \"reference\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"giropay\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"ideal\": {\n      \"bank\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"metadata\": \"<object>\",\n    \"multibanco\": {\n      \"entity\": \"<string>\",\n      \"reference\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"owner\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"p24\": {\n      \"reference\": \"<string>\"\n    },\n    \"paper_check\": {\n      \"mailing_address_city\": \"<string>\",\n      \"mailing_address_country\": \"<string>\",\n      \"mailing_address_line1\": \"<string>\",\n      \"mailing_address_line2\": \"<string>\",\n      \"mailing_address_postal_code\": \"<string>\",\n      \"mailing_address_state\": \"<string>\"\n    },\n    \"receiver\": {\n      \"amount_charged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_received\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_returned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"redirect\": {\n      \"return_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failure_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sepa_credit_transfer\": {\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"<string>\",\n      \"branch_code\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mandate_reference\": \"<string>\",\n      \"mandate_url\": \"<string>\",\n      \"skip_validation\": \"<boolean>\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"country\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"statement_descriptor\": \"<string>\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"authenticated\": \"<boolean>\",\n      \"brand\": \"<string>\",\n      \"card\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"usage\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expected_availability_date\": \"<integer>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
										},
										{
											"id": "f5f72c8a-733c-487e-b64d-c33d65f26466",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/topups/:topup/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"topups",
														":topup",
														"cancel"
													],
													"variable": [
														{
															"key": "topup",
															"value": "adipisicing incididunt esse",
															"description": "(Required) The ID of the Top-up to cancel."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "2bc10f07-93e8-4e86-8466-6aa735b93cd2"
						},
						{
							"name": "Topup All",
							"id": "9b866920-6f0c-446b-ac5f-78fc0b13ad23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/topups?amount[gt]=-13431299&amount[gte]=48353647&amount[lt]=-92044334&amount[lte]=-79364890&created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&ending_before=adipisicing incididunt esse&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=adipisicing incididunt esse&status=succeeded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"topups"
									],
									"query": [
										{
											"key": "amount[gt]",
											"value": "-13431299",
											"description": "A positive integer in %s representing how much to transfer."
										},
										{
											"key": "amount[gte]",
											"value": "48353647",
											"description": "A positive integer in %s representing how much to transfer."
										},
										{
											"key": "amount[lt]",
											"value": "-92044334",
											"description": "A positive integer in %s representing how much to transfer."
										},
										{
											"key": "amount[lte]",
											"value": "-79364890",
											"description": "A positive integer in %s representing how much to transfer."
										},
										{
											"key": "created[gt]",
											"value": "-13431299",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[gte]",
											"value": "48353647",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lt]",
											"value": "-92044334",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "created[lte]",
											"value": "-79364890",
											"description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options."
										},
										{
											"key": "ending_before",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "adipisicing incididunt esse",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "status",
											"value": "succeeded",
											"description": "Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`."
										}
									]
								},
								"description": "<p>Returns a list of Top-ups.</p>"
							},
							"response": [
								{
									"id": "90987c6e-786d-4ac3-80a6-180c469c0477",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/topups?amount[gt]=<integer>&amount[gte]=<integer>&amount[lt]=<integer>&amount[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups"
											],
											"query": [
												{
													"key": "amount[gt]",
													"value": "<integer>"
												},
												{
													"key": "amount[gte]",
													"value": "<integer>"
												},
												{
													"key": "amount[lt]",
													"value": "<integer>"
												},
												{
													"key": "amount[lte]",
													"value": "<integer>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"source\": {\n        \"client_secret\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"flow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ach_credit_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ach_debit\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"alipay\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bancontact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"card\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"card_present\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"code_verification\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eps\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"giropay\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ideal\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"multibanco\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"owner\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"p24\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paper_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receiver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"redirect\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sepa_credit_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sepa_debit\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sofort\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"three_d_secure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"status\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"expected_availability_date\": \"<integer>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"source\": {\n        \"client_secret\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"flow\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"livemode\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ach_credit_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ach_debit\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"alipay\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bancontact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"card\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"card_present\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"code_verification\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eps\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"giropay\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"ideal\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"multibanco\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"owner\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"p24\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"paper_check\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"receiver\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"redirect\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sepa_credit_transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sepa_debit\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sofort\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"statement_descriptor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"three_d_secure\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"usage\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"status\": \"<string>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"expected_availability_date\": \"<integer>\",\n      \"failure_code\": \"<string>\",\n      \"failure_message\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "f8359f2d-caf9-4b09-8d6e-8fe984cf5f87",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/topups?amount[gt]=<integer>&amount[gte]=<integer>&amount[lt]=<integer>&amount[lte]=<integer>&created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&status=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups"
											],
											"query": [
												{
													"key": "amount[gt]",
													"value": "<integer>"
												},
												{
													"key": "amount[gte]",
													"value": "<integer>"
												},
												{
													"key": "amount[lt]",
													"value": "<integer>"
												},
												{
													"key": "amount[lte]",
													"value": "<integer>"
												},
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Topup Create",
							"id": "3fa0882d-31ae-4939-8ddf-13626f03e305",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "-67931820",
											"description": "(Required) A positive integer in %s representing how much to transfer."
										},
										{
											"key": "currency",
											"value": "laborum reprehenderit ea nisi",
											"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "statement_descriptor",
											"value": "mollit reprehe",
											"description": "(Required) Extra information about a top-up for the source's bank statement."
										},
										{
											"key": "description",
											"value": "aliquip exercitation eiusmod officia aute",
											"description": "An arbitrary string attached to the object. Often useful for displaying to users."
										},
										{
											"key": "expand[0]",
											"value": "qui",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "ipsum ullamco exercitation proident",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "source",
											"value": "dolore sunt est voluptate ea",
											"description": "The ID of a source or a bank account to transfer funds from. If no source is supplied, the default bank account for the specified currency will be used."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/topups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"topups"
									]
								},
								"description": "<p>Top up the balance of an account</p>"
							},
							"response": [
								{
									"id": "101c701b-6fb0-4503-8e98-24860ebb4488",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in %s representing how much to transfer.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Extra information about a top-up for the source's bank statement.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The ID of a source or a bank account to transfer funds from. If no source is supplied, the default bank account for the specified currency will be used.",
													"key": "source",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/topups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"source\": {\n    \"client_secret\": \"<string>\",\n    \"created\": \"<unix-time>\",\n    \"flow\": \"<string>\",\n    \"id\": \"<string>\",\n    \"livemode\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ach_credit_transfer\": {\n      \"account_number\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"swift_code\": \"<string>\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"routing_number\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"alipay\": {\n      \"data_string\": \"<string>\",\n      \"native_url\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"amount\": \"<integer>\",\n    \"bancontact\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"<string>\",\n      \"application_preferred_name\": \"<string>\",\n      \"application_preferred_name_encoding\": \"<string>\",\n      \"authorization_response_code\": \"<string>\",\n      \"brand\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"cvm_type\": \"<string>\",\n      \"data_type\": \"<string>\",\n      \"dedicated_file_name\": \"<string>\",\n      \"emv_auth_data\": \"<string>\",\n      \"evidence_customer_signature\": \"<string>\",\n      \"evidence_transaction_certificate\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mid\": \"<string>\",\n      \"pos_device_id\": \"<string>\",\n      \"pos_entry_mode\": \"<string>\",\n      \"read_method\": \"<string>\",\n      \"reader\": \"<string>\",\n      \"terminal_verification_results\": \"<string>\",\n      \"tid\": \"<string>\",\n      \"transaction_status_information\": \"<string>\"\n    },\n    \"code_verification\": {\n      \"attempts_remaining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"currency\": \"<string>\",\n    \"eps\": {\n      \"reference\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"giropay\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"ideal\": {\n      \"bank\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"metadata\": \"<object>\",\n    \"multibanco\": {\n      \"entity\": \"<string>\",\n      \"reference\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"owner\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"p24\": {\n      \"reference\": \"<string>\"\n    },\n    \"paper_check\": {\n      \"mailing_address_city\": \"<string>\",\n      \"mailing_address_country\": \"<string>\",\n      \"mailing_address_line1\": \"<string>\",\n      \"mailing_address_line2\": \"<string>\",\n      \"mailing_address_postal_code\": \"<string>\",\n      \"mailing_address_state\": \"<string>\"\n    },\n    \"receiver\": {\n      \"amount_charged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_received\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"amount_returned\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"redirect\": {\n      \"return_url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"url\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failure_reason\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"sepa_credit_transfer\": {\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"iban\": \"<string>\",\n      \"refund_account_holder_address_city\": \"<string>\",\n      \"refund_account_holder_address_country\": \"<string>\",\n      \"refund_account_holder_address_line1\": \"<string>\",\n      \"refund_account_holder_address_line2\": \"<string>\",\n      \"refund_account_holder_address_postal_code\": \"<string>\",\n      \"refund_account_holder_address_state\": \"<string>\",\n      \"refund_account_holder_name\": \"<string>\",\n      \"refund_iban\": \"<string>\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"<string>\",\n      \"branch_code\": \"<string>\",\n      \"country\": \"<string>\",\n      \"fingerprint\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"mandate_reference\": \"<string>\",\n      \"mandate_url\": \"<string>\",\n      \"skip_validation\": \"<boolean>\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"<string>\",\n      \"bank_name\": \"<string>\",\n      \"bic\": \"<string>\",\n      \"country\": \"<string>\",\n      \"iban_last4\": \"<string>\",\n      \"preferred_language\": \"<string>\",\n      \"statement_descriptor\": \"<string>\"\n    },\n    \"statement_descriptor\": \"<string>\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"<string>\",\n      \"address_zip_check\": \"<string>\",\n      \"authenticated\": \"<boolean>\",\n      \"brand\": \"<string>\",\n      \"card\": \"<string>\",\n      \"card_automatically_updated\": \"<boolean>\",\n      \"country\": \"<string>\",\n      \"customer\": \"<string>\",\n      \"cvc_check\": \"<string>\",\n      \"dynamic_last4\": \"<string>\",\n      \"exp_month\": \"<integer>\",\n      \"exp_year\": \"<integer>\",\n      \"fingerprint\": \"<string>\",\n      \"funding\": \"<string>\",\n      \"last4\": \"<string>\",\n      \"name\": \"<string>\",\n      \"skip_validation\": \"<boolean>\",\n      \"three_d_secure\": \"<string>\",\n      \"tokenization_method\": \"<string>\"\n    },\n    \"usage\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"expected_availability_date\": \"<integer>\",\n  \"failure_code\": \"<string>\",\n  \"failure_message\": \"<string>\",\n  \"statement_descriptor\": \"<string>\"\n}"
								},
								{
									"id": "93ae58d0-86bc-4e3f-b28f-078fab4f8e6b",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in %s representing how much to transfer.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) Extra information about a top-up for the source's bank statement.",
													"key": "statement_descriptor",
													"value": "<string>"
												},
												{
													"description": "An arbitrary string attached to the object. Often useful for displaying to users.",
													"key": "description",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "The ID of a source or a bank account to transfer funds from. If no source is supplied, the default bank account for the specified currency will be used.",
													"key": "source",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/topups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"topups"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "f765cbec-faca-44d0-95c5-a5321e24b156"
				},
				{
					"name": "transfers",
					"item": [
						{
							"name": "{id}/reversals",
							"item": [
								{
									"name": "Transfer Reversal All",
									"id": "d98e4c9a-4d33-4d1e-a854-6f682e2d8749",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/transfers/:id/reversals?ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers",
												":id",
												"reversals"
											],
											"query": [
												{
													"key": "ending_before",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
												},
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "limit",
													"value": "66746697",
													"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
												},
												{
													"key": "starting_after",
													"value": "esse deserunt",
													"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The ID of the transfer whose reversals will be retrieved."
												}
											]
										},
										"description": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>"
									},
									"response": [
										{
											"id": "e8cb28d9-2e21-4874-ba9e-a1085d01ae0a",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:id/reversals?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":id",
														"reversals"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer whose reversals will be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"transfer\": \"<string>\",\n      \"balance_transaction\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"transfer\": \"<string>\",\n      \"balance_transaction\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
										},
										{
											"id": "064eb9ae-ace7-438a-bac8-9dd8b31614ce",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:id/reversals?ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":id",
														"reversals"
													],
													"query": [
														{
															"key": "ending_before",
															"value": "<string>"
														},
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"key": "limit",
															"value": "<integer>"
														},
														{
															"key": "starting_after",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer whose reversals will be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Create Transfer Reversal",
									"id": "577b0187-b841-429c-bbad-b9324001b8e2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "amount",
													"value": "-62734173",
													"description": "A positive integer in %s representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount."
												},
												{
													"key": "description",
													"value": "sint Duis nisi reprehenderit",
													"description": "An arbitrary string which you can attach to a reversal object. It is displayed alongside the reversal in the Dashboard. This will be unset if you POST an empty value."
												},
												{
													"key": "expand[0]",
													"value": "elit dolore consectetur",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "nu",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "refund_application_fee",
													"value": "true",
													"description": "Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/transfers/:id/reversals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers",
												":id",
												"reversals"
											],
											"variable": [
												{
													"key": "id",
													"value": "esse deserunt",
													"description": "(Required) The ID of the transfer to be reversed."
												}
											]
										},
										"description": "<p>When you create a new reversal, you must specify a transfer to create it on.</p><p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p><p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>"
									},
									"response": [
										{
											"id": "2fb1384b-d9d1-45d0-bbdd-dd39932fc7b2",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A positive integer in %s representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An arbitrary string which you can attach to a reversal object. It is displayed alongside the reversal in the Dashboard. This will be unset if you POST an empty value.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed.",
															"key": "refund_application_fee",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:id/reversals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":id",
														"reversals"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer to be reversed."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
										},
										{
											"id": "b85cadb9-8a09-4aa1-8874-931c3031be30",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "A positive integer in %s representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.",
															"key": "amount",
															"value": "<integer>"
														},
														{
															"description": "An arbitrary string which you can attach to a reversal object. It is displayed alongside the reversal in the Dashboard. This will be unset if you POST an empty value.",
															"key": "description",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														},
														{
															"description": "Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed.",
															"key": "refund_application_fee",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:id/reversals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":id",
														"reversals"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer to be reversed."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "15324105-47ee-474c-bbbb-4362e63f988d"
						},
						{
							"name": "{transfer}",
							"item": [
								{
									"name": "reversals/{id}",
									"item": [
										{
											"name": "Transfer Reversal Retrieve",
											"id": "4c26b5bd-b2a9-4e36-96ee-4531e58f8c5d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer",
														"reversals",
														":id"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "enim Ut culpa ut",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "cupidatat ullamco esse",
															"description": "Specifies which fields in the response should be expanded."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of reversal to retrieve."
														},
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) ID of the transfer reversed."
														}
													]
												},
												"description": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>"
											},
											"response": [
												{
													"id": "596a9b05-f48f-41b7-9e00-972a498836a2",
													"name": "Successful response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"transfers",
																":transfer",
																"reversals",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) ID of reversal to retrieve."
																},
																{
																	"key": "transfer",
																	"value": "esse deserunt",
																	"description": "(Required) ID of the transfer reversed."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
												},
												{
													"id": "de59a808-21b6-47b1-af56-584b68e50a2c",
													"name": "Error response.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id?expand[0]=<string>&expand[1]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"transfers",
																":transfer",
																"reversals",
																":id"
															],
															"query": [
																{
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"key": "expand[1]",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) ID of reversal to retrieve."
																},
																{
																	"key": "transfer",
																	"value": "esse deserunt",
																	"description": "(Required) ID of the transfer reversed."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Transfer Reversal Update",
											"id": "67de6df3-2647-49a5-a273-47447f255d7b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "expand[0]",
															"value": "eiusmod Ut aliquip",
															"description": "Specifies which fields in the response should be expanded."
														},
														{
															"key": "expand[1]",
															"value": "ad consectetur Lorem",
															"description": "Specifies which fields in the response should be expanded."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer",
														"reversals",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "esse deserunt",
															"description": "(Required) ID of reversal to retrieve."
														},
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) ID of the transfer reversed."
														}
													]
												},
												"description": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>This request only accepts metadata and description as arguments.</p>"
											},
											"response": [
												{
													"id": "46aae60e-eb63-4d20-8a16-1002eae1da36",
													"name": "Successful response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"transfers",
																":transfer",
																"reversals",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) ID of reversal to retrieve."
																},
																{
																	"key": "transfer",
																	"value": "esse deserunt",
																	"description": "(Required) ID of the transfer reversed."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"amount\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"transfer\": \"<string>\",\n  \"balance_transaction\": \"<string>\"\n}"
												},
												{
													"id": "c15fa817-36b3-4226-85c4-9372289e4a55",
													"name": "Error response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[0]",
																	"value": "<string>"
																},
																{
																	"description": "Specifies which fields in the response should be expanded.",
																	"key": "expand[1]",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/transfers/:transfer/reversals/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"transfers",
																":transfer",
																"reversals",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "esse deserunt",
																	"description": "(Required) ID of reversal to retrieve."
																},
																{
																	"key": "transfer",
																	"value": "esse deserunt",
																	"description": "(Required) ID of the transfer reversed."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
												}
											]
										}
									],
									"id": "ccc4976d-0d15-44fc-9d5f-f0c75c5e055d"
								},
								{
									"name": "Retrieve Transfer",
									"id": "f1c7dc0d-4d34-4c15-96f3-54fcb54b089e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/transfers/:transfer?expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers",
												":transfer"
											],
											"query": [
												{
													"key": "expand[0]",
													"value": "enim Ut culpa ut",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "cupidatat ullamco esse",
													"description": "Specifies which fields in the response should be expanded."
												}
											],
											"variable": [
												{
													"key": "transfer",
													"value": "esse deserunt",
													"description": "(Required) The identifier of the transfer to be retrieved."
												}
											]
										},
										"description": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>"
									},
									"response": [
										{
											"id": "2f91aa87-4a8c-4a29-a6bf-afb8d0a904d9",
											"name": "Successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the transfer to be retrieved."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_reversed\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reversals\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"reversed\": \"<boolean>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"destination_payment\": \"<string>\",\n  \"source_transaction\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "f6808ca3-0cfa-46c8-bd36-11316df823dd",
											"name": "Error response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer?expand[0]=<string>&expand[1]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer"
													],
													"query": [
														{
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"key": "expand[1]",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) The identifier of the transfer to be retrieved."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update Transfer",
									"id": "19eb9992-fca8-447b-97bd-f95637815a58",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "expand[0]",
													"value": "eiusmod Ut aliquip",
													"description": "Specifies which fields in the response should be expanded."
												},
												{
													"key": "expand[1]",
													"value": "ad consectetur Lorem",
													"description": "Specifies which fields in the response should be expanded."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/transfers/:transfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers",
												":transfer"
											],
											"variable": [
												{
													"key": "transfer",
													"value": "esse deserunt",
													"description": "(Required) The ID of the transfer to be updated."
												}
											]
										},
										"description": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p><p>This request accepts only metadata as an argument.</p>"
									},
									"response": [
										{
											"id": "54990b7a-06fd-416f-bb5f-ccb1a37c086c",
											"name": "Successful response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer"
													],
													"variable": [
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer to be updated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_reversed\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reversals\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"reversed\": \"<boolean>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"destination_payment\": \"<string>\",\n  \"source_transaction\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
										},
										{
											"id": "375accb4-4e48-4704-aa73-0b1e757b8bb3",
											"name": "Error response.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[0]",
															"value": "<string>"
														},
														{
															"description": "Specifies which fields in the response should be expanded.",
															"key": "expand[1]",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/transfers/:transfer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transfers",
														":transfer"
													],
													"variable": [
														{
															"key": "transfer",
															"value": "esse deserunt",
															"description": "(Required) The ID of the transfer to be updated."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
										}
									]
								}
							],
							"id": "50321ee7-17c5-4a22-9c73-892b20c4ae7c"
						},
						{
							"name": "All Transfers",
							"id": "d4567f6f-84bc-4156-acbb-dc4db8cc7801",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/transfers?created[gt]=-13431299&created[gte]=48353647&created[lt]=-92044334&created[lte]=-79364890&destination=esse deserunt&ending_before=esse deserunt&expand[0]=enim Ut culpa ut&expand[1]=cupidatat ullamco esse&limit=66746697&starting_after=esse deserunt&transfer_group=esse deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"transfers"
									],
									"query": [
										{
											"key": "created[gt]",
											"value": "-13431299"
										},
										{
											"key": "created[gte]",
											"value": "48353647"
										},
										{
											"key": "created[lt]",
											"value": "-92044334"
										},
										{
											"key": "created[lte]",
											"value": "-79364890"
										},
										{
											"key": "destination",
											"value": "esse deserunt",
											"description": "Only return transfers for the destination specified by this account ID."
										},
										{
											"key": "ending_before",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list."
										},
										{
											"key": "expand[0]",
											"value": "enim Ut culpa ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "cupidatat ullamco esse",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "limit",
											"value": "66746697",
											"description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10."
										},
										{
											"key": "starting_after",
											"value": "esse deserunt",
											"description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list."
										},
										{
											"key": "transfer_group",
											"value": "esse deserunt",
											"description": "Only return transfers with the specified transfer group."
										}
									]
								},
								"description": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>"
							},
							"response": [
								{
									"id": "a324fd94-0c36-44e5-919c-e2f183444705",
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/transfers?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&destination=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&transfer_group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "destination",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount\": \"<integer>\",\n      \"amount_reversed\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reversals\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"reversed\": \"<boolean>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"destination_payment\": \"<string>\",\n      \"source_transaction\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"transfer_group\": \"<string>\"\n    },\n    {\n      \"amount\": \"<integer>\",\n      \"amount_reversed\": \"<integer>\",\n      \"created\": \"<unix-time>\",\n      \"currency\": \"<string>\",\n      \"id\": \"<string>\",\n      \"livemode\": \"<boolean>\",\n      \"metadata\": \"<object>\",\n      \"object\": \"<string>\",\n      \"reversals\": {\n        \"data\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"has_more\": \"<boolean>\",\n        \"object\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      \"reversed\": \"<boolean>\",\n      \"balance_transaction\": \"<string>\",\n      \"description\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"destination_payment\": \"<string>\",\n      \"source_transaction\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"transfer_group\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\",\n  \"object\": \"<string>\",\n  \"url\": \"<string>\"\n}"
								},
								{
									"id": "3f6262f6-9eea-4193-8641-bf12fce75602",
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/transfers?created[gt]=<integer>&created[gte]=<integer>&created[lt]=<integer>&created[lte]=<integer>&destination=<string>&ending_before=<string>&expand[0]=<string>&expand[1]=<string>&limit=<integer>&starting_after=<string>&transfer_group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers"
											],
											"query": [
												{
													"key": "created[gt]",
													"value": "<integer>"
												},
												{
													"key": "created[gte]",
													"value": "<integer>"
												},
												{
													"key": "created[lt]",
													"value": "<integer>"
												},
												{
													"key": "created[lte]",
													"value": "<integer>"
												},
												{
													"key": "destination",
													"value": "<string>"
												},
												{
													"key": "ending_before",
													"value": "<string>"
												},
												{
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "starting_after",
													"value": "<string>"
												},
												{
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Transfer Create",
							"id": "e855a8b7-c1bc-4a52-b3da-afae845bb039",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "amount",
											"value": "-5582545",
											"description": "(Required) A positive integer in %s representing how much to transfer."
										},
										{
											"key": "currency",
											"value": "quis est",
											"description": "(Required) 3-letter [ISO code for currency](/docs/payouts)."
										},
										{
											"key": "destination",
											"value": "non sint",
											"description": "(Required) The ID of a connected Stripe account. <a href=\"/docs/connect/charges-transfers\">See the Connect documentation</a> for details."
										},
										{
											"key": "expand[0]",
											"value": "et",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "non Ut",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "source_transaction",
											"value": "exerci",
											"description": "You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](/docs/connect/charges-transfers#transfer-availability) for details."
										},
										{
											"key": "transfer_group",
											"value": "labore ut mini",
											"description": "A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/transfers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"transfers"
									]
								},
								"description": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you’ll receive an “Insufficient Funds” error.</p>"
							},
							"response": [
								{
									"id": "6f230881-2785-4442-a4dd-64f2548b2e2d",
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in %s representing how much to transfer.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) 3-letter [ISO code for currency](/docs/payouts).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The ID of a connected Stripe account. <a href=\"/docs/connect/charges-transfers\">See the Connect documentation</a> for details.",
													"key": "destination",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](/docs/connect/charges-transfers#transfer-availability) for details.",
													"key": "source_transaction",
													"value": "<string>"
												},
												{
													"description": "A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"amount\": \"<integer>\",\n  \"amount_reversed\": \"<integer>\",\n  \"created\": \"<unix-time>\",\n  \"currency\": \"<string>\",\n  \"id\": \"<string>\",\n  \"livemode\": \"<boolean>\",\n  \"metadata\": \"<object>\",\n  \"object\": \"<string>\",\n  \"reversals\": {\n    \"data\": [\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"amount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"created\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"currency\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"object\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transfer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"balance_transaction\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"has_more\": \"<boolean>\",\n    \"object\": \"<string>\",\n    \"url\": \"<string>\"\n  },\n  \"reversed\": \"<boolean>\",\n  \"balance_transaction\": \"<string>\",\n  \"description\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"destination_payment\": \"<string>\",\n  \"source_transaction\": \"<string>\",\n  \"source_type\": \"<string>\",\n  \"transfer_group\": \"<string>\"\n}"
								},
								{
									"id": "34a5dd4c-d0d1-444b-973b-4baf339d90d5",
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) A positive integer in %s representing how much to transfer.",
													"key": "amount",
													"value": "<integer>"
												},
												{
													"description": "(Required) 3-letter [ISO code for currency](/docs/payouts).",
													"key": "currency",
													"value": "<string>"
												},
												{
													"description": "(Required) The ID of a connected Stripe account. <a href=\"/docs/connect/charges-transfers\">See the Connect documentation</a> for details.",
													"key": "destination",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[0]",
													"value": "<string>"
												},
												{
													"description": "Specifies which fields in the response should be expanded.",
													"key": "expand[1]",
													"value": "<string>"
												},
												{
													"description": "You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](/docs/connect/charges-transfers#transfer-availability) for details.",
													"key": "source_transaction",
													"value": "<string>"
												},
												{
													"description": "A string that identifies this transaction as part of a group. See the [Connect documentation](/docs/connect/charges-transfers#grouping-transactions) for details.",
													"key": "transfer_group",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/transfers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transfers"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"type\": \"<string>\",\n    \"charge\": \"<string>\",\n    \"code\": \"<string>\",\n    \"decline_code\": \"<string>\",\n    \"doc_url\": \"<string>\",\n    \"message\": \"<string>\",\n    \"param\": \"<string>\"\n  }\n}"
								}
							]
						}
					],
					"id": "dece1704-c755-4d22-8508-962ab86656dd"
				}
			],
			"id": "67dfdf71-6f81-4aa3-b332-130f1f79f24d"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "5a2ba09f-205a-4b08-a537-feb94b503ea8",
			"key": "baseUrl",
			"value": "https://api.stripe.com/",
			"type": "string"
		}
	]
}